Påske 2016
=====================
Undefined - identifiers... (db/places) placestat/2
astronomveien
hovedterminalen
olav_tryggvasons_gate
prinsenkrysset
romolslia
sentrum
torget
-------------
Undefined street to station references (streetstat/5)
kolstaddalen
okstadøy
olav_tryggvasons_gate
rosten
ts
unknown

================

EKSPRESSBUSS

N: lade etter 740 29. mars.
........................................................................
Buss 4 passerer  Prinsens gate P2 kl. 0721 
og  kommer til  Lade ,  11-19 minutter senere .
Buss 4 passerer  Munkegata M5 kl. 0723 
og  kommer til  Lade ,  9-17 minutter senere .
Buss 3 passerer  Prinsens gate P2 kl. 0726 
og  kommer til  Lade allé 80 ,  20 minutter senere .

Tidene angir tidligste passeringer av holdeplassene. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



FIX THIS!!!

N: rotvoll alle 14.1 kl 08.00.
........................................................................


*** Word graph ***

lex:txt(1, w(alle,[alle]), 2).
lex:txt(2, w(14,nb(14,num)), 3).
lex:txt(3, w('.',['.']), 4).
lex:txt(4, w(1,[1]), 5).
lex:txt(4, w(1,nb(1,num)), 5).
lex:txt(4, w(1,name(1,n,tram)), 5).
lex:txt(4, w(1,name(1,n,nightbus)), 5).
lex:txt(4, w(1,name(1,n,route)), 5).
lex:txt(5, w(kl,noun(clock,sin,def,n)), 6).
lex:txt(5, w(kl,[klokken]), 6).
lex:txt(5, w(kl,[kl]), 6).
lex:txt(6, w(8,[8]), 7).
lex:txt(6, w(8,nb(8,num)), 7).
lex:txt(6, w(8,name(8,n,route)), 7).
lex:txt(7, w('.',['.']), 8).
lex:txt(8, w(0,[0]), 9).
lex:txt(8, w(0,nb(0,num)), 9).
lex:txt(9, w('.',['.']), 10).
lex:txt(0, w(rotvoll_alle,name(rotvoll_alle,n,station)), 2).


******************

*** Simplified parse tree ***

[verb_modifiers,name(rotvoll_alle,n,station),[verb_modifiers,[plausibledate1,nb(14,num),lit(.),nb(1,num)],[obviousclock1,lit(kl),[clock_kernel,nb(8,num),[colemin2,lit(.),nb(0,num),lit(.)]]]]]




           verb_modifiers
        __________|_________
       /                    \
     name             verb_modifiers
       |               ______|_____
       |              /            \
 rotvoll_alle  plausibledate1 obviousclock1
                 ___|___         ___|___
                /   |   \       /       \
               nb  lit  nb     lit clock_kernel
                |   |    |      |     ___|__
                |   |    |      |    /      \
               14   .    1     kl   nb   colemin2
                                     |    ___|___
                                     |   /    |  \
                                     8  lit  nb  lit
                                         |    |   |
                                         |    |   |
                                         .    0   .


    

*****************************

[gpsflag:::[],modifier(A):::(srel/nil/place/rotvoll_alle/A and srel/nil/date/date(2015,1,14)/A and srel/nil/clock/800/A and event/real/A)and((rotvoll_alle isa station and true)and date(2015,1,14)isa date)and 800 isa clock]


15 ms


[modifier(A):::(rotvoll_alle isa station,date(2015,1,14)isa date,800 isa clock,srel/nil/place/rotvoll_alle/A,srel/nil/date/date(2015,1,14)/A,srel/nil/clock/800/A,event/real/A)]



bustrans/Found rule:tqllist2
bustrans/Found rule:modifier2
bustrans/Found rule:standardclock
bustrans/Found rule:normalizedate
bustrans/Found rule:clocksequence
bustrans/Found rule:setexdate3day
bustrans/Found rule:nottoday1
bustrans/Found rule:nilplaceeqto
bustrans/Found rule:keepfrombay
bustrans/Found rule:busdepaftertimegps
bustrans/Found rule:connectionexplicit

*** Application program ***

atdate2(3,date(2015,1,14))
atday(wednesday)
message(date_isa_day(date(2015,1,14),wednesday))
message(otherperiod(date(2015,1,14)))
departure(free(590),rotvoll_alle,3,A)
keepafter(800,A,B)
flag(keepfrombay)
departure(free(590),hovedterminalen,3,C)
connections(C,B,free(590),hovedterminalen,rotvoll_alle,wednesday,3,[time,nextaftertime(0),to,from],D,E)
flag(exit)

........................................................................
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


578 ms

{"transfer":"true" ,
"timeset":"true" ,
"departures" : [
{"busstopname":"Munkegata M5","busstopnumber":16010005,"busnumber":4,"time":1452,"duration":8,"destination":"Harald Hårfagres gate"} ,
{"busstopname":"Harald Hårfagres gate","busstopnumber":16010534,"busnumber":90,"time":1507,"duration":7,"destination":"Rotvoll alle"} ]}

14. Jan. 2015 er en  onsdag .
Buss 4 går fra Munkegata M5 kl. 1452 til Harald Hårfagres gate kl. 1500 
og  buss 90 går fra Harald Hårfagres gate kl. 1507 til Rotvoll allé kl. 1514 .

Tidene angir tidligste passeringer av holdeplassene. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



Når går bussen  fra sentrum til ugla lørdag 02.00.


#vm-6114: (Must ALWAYS be executable, from /var/www/regtop/*.php
	sh: 1: /home/busstuc/busstuc/compile/extract_cut.sh: Permission denied


SMS:

from prinsen to krokstien. (prinsen kino eller prinsenkrysset? Reklameinntekter?)

nth natt til søndag. (HELT BLANK?!)

Index: tuc/facts.pl
===================================================================
--- tuc/facts.pl        (revision 646)
+++ tuc/facts.pl        (working copy)
@@ -16,7 +16,7 @@
 %  Facts are deliberately kept separate from semantics

 % UNIT: /tuc/
-:-module(facts, [ difact/1, fact/1, have/4, isa/2, neighbourhood/1, precedent_firstname/1, unproperstation1/1 ] ).
+:-module(facts, [ difact/1, fact/1, have/4, isa/2, neighbourhood/1, precedent_firstname/1 ] ).  %% , unproperstation1/1    %% Check out how this works, and add it again later! Unknown stations could be neibhorhoods at least.

 %% RS-131225, UNIT: / and utility/
 :- ensure_loaded( user:'../declare' ).       %% RS-111212 :-op( 710,xfx, isa ).
@@ -79,13 +79,13 @@
     user:difact(UID,F).

 % OLD ?
-:- use_module( '../db/auxtables', [ unproperstation/1  ] ).  %% RS-140928 Auto-generated by makeauxtables!
+%:- use_module( '../db/auxtables', [ unproperstation/1  ] ).  %% RS-140928 Auto-generated by makeauxtables!
+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+%unproperstation1( X ) :-
+%%    fail.
+%    unproperstation(X), %% no bus passes %%  maybe empty
+%    \+ neighbourhood(X).
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-unproperstation1( X ) :-
-%    fail.
-    unproperstation(X), %% no bus passes %%  maybe empty
-    \+ neighbourhood(X).
-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 jonas isa firstname.
@@ -536,8 +536,8 @@
          value(busflag,true), %% \+ dater
     station(X),                %%  Semantically, not actual
     \+ xforeign(X),             %%   ( adjust database error)
-    \+ unwanted_place(X),       %%   ( adjust database error)
-    \+ unproperstation1(X).     %%   ( stations with no passings)  %% RS-131230 See lex.pl unproperstation1/1
+    \+ unwanted_place(X). %,       %%   ( adjust database error)
+%    \+ unproperstation1(X).     %%   ( stations with no passings)  %% RS-131230 See lex.pl unproperstation1/1
                                  %% maybe empty

 %%  \+ tramstation(X).         %% NO ILA is both
@@ -665,7 +665,7 @@
 neibor(X):-
      (isat(_,X);
       nostation(X) ;
-      unproperstation1(X) ; %% recognised as neighbourhood (feature)       %% From tuc/lex.pl
+%      unproperstation1(X) ; %% recognised as neighbourhood (feature)       %% From tuc/lex.pl
       %% maybe empty

       placestat(X,_) ;
Index: tuc/lex.pl
===================================================================
--- tuc/lex.pl  (revision 646)
+++ tuc/lex.pl  (working copy)
@@ -126,7 +126,7 @@
 %%% RS-111205, UNIT: tuc
 :- use_module( dict_n, [ kw/1 ] ). %% TA-100902 %%%%%%%%%  All the words appearing as [ ] constants in grammar %% RS-131225
 :- use_module( evaluate, [ instant/2 ] ). %% RS-111204    isa/2 from facts.pl
-:- use_module( facts, [ fact/1, isa/2,  neighbourhood/1, unproperstation1/1  ] ).  %% RS-111204    isa/2 from facts.pl
+:- use_module( facts, [ fact/1, isa/2,  neighbourhood/1  ] ).  %% RS-111204    isa/2 from facts.pl, , unproperstation1/1
 :- use_module( names, [  compname/3,  generic_place/1,  samename/2,  streetsyn/1, synname/2,  unwanted_name/1  ] ).

 %%
@@ -501,7 +501,7 @@
 irrelevant_name(X):-     %% DONT spellcheck towards these names !
     bus(X);

-   unproperstation1(X); %% DONT spellcheck to spurious names !
+%   unproperstation1(X); %% DONT spellcheck to spurious names !
 %%  maybe empty

     unwanted_name(X);
@@ -1621,7 +1621,7 @@


 remove_streetsurp:- % Remove streetname (single) if also station/neighbourhood etc.
-     for( (txt(M,w(A,name(_a1,_,street)),N),txt(M,w(A,name(A2,_,K)),N), K \== street, \+unproperstation1(A2)),
+     for( (txt(M,w(A,name(_a1,_,street)),N),txt(M,w(A,name(A2,_,K)),N), K \== street ), % \+unproperstation1(A2)  ),
            retract(txt(M,w(A,name(_a1,_,street)),N))).

 %% suspended  :   error marking becomes meaningless (too early)



Check out make_total_google!

makeanswer(true,FlatCode,ProgIn,AnswerOut       ) :-
    makeinitanswer(true,FlatCode,ProgIn,InitAnswer),
    pragma_aux(ans,ProgIn,InitAnswer,AnswerOut),
    !,
    make_total_google(AnswerOut, _TOTAL). %% busanshp.pl

LOG
===
RS-120803
Moved db/regbusall to general regbus in buslog.pl

This call failed because prinsenkrysset is not a hpl(X)! (Add a general "neighborhood as station" predicat?
	connections(A,B,free(19),nyborg,prinsenkrysset,friday,40,[to,from],C,D)

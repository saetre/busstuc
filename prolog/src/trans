%% FILE bustrans.pl
%% SYSTEM BUSTUC
%% AUTHOR  J.Bratseth
%% CREATED JB-970312
%% REVISED TA-011030

% Transregler for bussdomenet

:- module(trans,[dmeq/2,busman/2,corresporder/3,samefplace/2, 
                 mixopt/3,setopt/3,evening_time/2,notatnight/2,
                 bus_place_station/3,sorttimes/4,i_am_a_bus/3]). %% TA-010614


% exported for laziness: can de defined inside this module

%% Rule format

%   ruleID rule
%   is IS
%   id ID
%   ip IP.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Oversettingsregler
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% rules to handle list of TQL statements 

listoftql0 rule  
is  [(confirm,_)]
id  add message(answer(bcpbc(ok)))
ip  \+ user: value(dialog,1).  %% TA-011028

listoftql1 rule   
is  replaceall [(confirm,_)|Y]
    with Y
id  []
ip  \+ user: value(dialog,1).  %% TA-011028


listoftql2 rule 
is  replaceall [X]
    with X
id  []
ip  \+ user: value(dialog,1).

listoftql3 rule
is  replaceall [(do,replyq(X))|Rest]  
    with Rest
id  addfront reply(X)          %% syndrome  Hei ! Jeg heter Tore %% TA-001016
                      %% Jeg heter tore -> OK and failure -> negans on do
ip  \+ user: value(dialog,1). 

listoftql4 rule
is  replaceall [X|_] 
    with X
id  addfront message(onlyonesentence)
ip  \+ user: value(dialog,1).

error rule 
is  error
id  add reply('?')
ip  [].


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% <single>
usecontext rule
is []
id not nocontext,
   remove askfor([], Slot, Value),
   add addcontext 
ip user:value(dialog,1), current_frame(Frame), 
   frame_getvalue_rec(Frame, Slot, Value, _).


lockcontext rule
is []
id present askfor([], _, Value)
ip user:value(dialog,1), newfree(Value).

%% 
useref rule
is	present whichref(Type, List) isa _
id 	not askref(_, _), 
	add askref(Type, List)
ip 	user:value(dialog, 1). 

%%</single>



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% SECTION  Source to Source Transformation  %%
%%    Can be paraphrased in NRL.             %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%-------------------------------------------------------------------------------%

% """"""" if a vehicle is in route then this vehicle is punctual. """"""" 

irute rule
is  replaceall (A isa Veh,B isa route,be1/A/C,event/real/C,srel/in/route/B/C)
    with       (A isa Veh,adj/punctual/A/C,event/real/C)
id  []
ip  dmeq(vehicle,Veh),unbound(B). 


% avoid questions about stations

modifierstat rule 
is  modifier(_A),B isa station,nrel/_/station/place/B/_
id  add message(completesentence)
ip  [].


modifier1 rule %%  med buss til buenget
is  context B isa Bus,
    not present _ isa endstation,  %% Ad Hoc
    replaceall modifier(C)
    with  (which(A),A isa time,go/B/C,srel/in/time/A/C)     
id  []
ip  dmeq([bus,route],Bus),newfree(A). 



modifier2 rule 
is  not _ isa endstation, %% Ad Hoc    %% TA-011026
    replaceall modifier(C)
    with  (which(A),B isa bus,A isa time,go/B/C,srel/in/time/A/C)
id  []
ip  newfree(A),newfree(B).



%% Bloody repair rule
modifier3 rule %% TA-011025 
is  replaceall (modifier(E),srel/nil/_Stat/F/E)
    with       (which(F))
id  []
ip  [].




nrelbetweentime  rule 
is  replaceall (nrel/Between/Bus/time/B/(X1,X2))
    with       (nrel/after/Bus/time/B/X1,nrel/before/Bus/time/B/X2)
id  []
ip  dmeq([in,between],Between). %% i tidsrommet X1 og X2


nrelbetweenplace  rule 
is  replaceall (nrel/between/Bus/place/B/(X1,X2))
    with       (nrel/from/Bus/place/B/X1,nrel/to/Bus/place/B/X2)
id  []
ip  [].

nrelforbus rule 
is  replaceall  nrel/for/departure/Ve/F/(A,_B)
    with        nrel/for/departure/Ve/F/A
id  add message(onlyonebus)
ip  [].

nrelday  rule
is  replaceall (nrel/Prep/Bus/Day/B/(X1,_X2))
    with       (nrel/Prep/Bus/Day/B/X1)
id  add        message(onlyoneday) 
ip  dmeq([day],Day).

nrel2  rule
is  replaceall (nrel/Prep/Bus/Place/B/(X1,X2))
    with       (nrel/Prep/Bus/Place/B/X1,nrel/Prep/Bus/Place/B/X2)
id  []
ip  [].


nrelplaceor  rule  %% TA-010124  %% ETC in all positions
is  replaceall  nrel/Prep/Vehicle/place/A/(B;_C)
    with        nrel/Prep/Vehicle/place/A/B
id  add message(onlyoneplace)
ip  [].

srelplaceorplaceor  rule  %% TA-010124  %% ETC in all positions
is  replaceall  srel/Prep/place/(B;_C)/E
    with        srel/Prep/place/B/E
id  add message(onlyoneplace)
ip  [].


back rule 
is  srel/back/place/nil/_
id  add message(onlyonething)
ip  [].


busintimerepair rule % buss (i tiden ) 1700 1800 
is  context (T1700 isa Tim1,T1800 isa Tim2 ),
    replaceall (nrel/INIL1/BDA/Tim3/B/T1700,nrel/INIL2/BDA/Tim4/B/T1800)
    with       (nrel/between/_BusDep/time/B/(Tmin,Tmax))
id  []
ip	
    dmeq(timeclock,Tim1),
    dmeq(timeclock,Tim2),
    dmeq(timeclock,Tim3),
    dmeq(timeclock,Tim4),
    dmeq([in,nil],INIL1),
    dmeq([in,nil],INIL2),

    number(T1700),number(T1800),
    minval(T1700,T1800,Tmin),
    maxval(T1700,T1800,Tmax).

frekk1 rule %%  frequency of departure of bus
is context (B5 isa bus,A isa frequency),

replaceall (
           B isa departure,
           has/bus/departure/B5/B,
           has/departure/frequency/B/A)
   with
          (has/vehicle/frequency/B5/A)
id  []
ip  [].

frekk2 rule %%  frequency of departure of bus
is context (B5 isa bus,A isa frequency),

replaceall (
           B isa departure,
           has/bus/departure/B5/B,
           be1/A/D, event/real/D,srel/on/departure/B/D) 
   with
          (has/vehicle/frequency/B5/A)
id  []
ip  [].


canigetinfo rule 
is  replaceall (test,A isa self,B isa information,nrel/About/information/thing/B/X,
               receive/A/B/_)
    with       (which(X))
id  []
ip  dmeq(about,About).


iwantinfo rule
is  replaceall (new,A isa self,B isa information,nrel/About/information/thing/B/X,
               has/agent/information/A/B)
    with       (which(X))
id  []
ip  dmeq(about,About).

givemeinfo rule
is  exactly  (do,tuc isa program,Inf isa information,
              give/tuc/Inf/E,event/real/E),
    clear
id  add message(mustknow(place))
ip  [].


nodriver1 rule %% TA-011002
is   _ isa driver
id   add message(noinfoabout(driver))
ip   [].

nodriver2 rule
is   has/_/driver/_/_
id   add message(noinfoabout(driver))
ip   [].


nowash1 rule 
is  adj/clean/_/_
id  add message(noinfoabout(cleaning ))
ip  [].

nowash2 rule
is  clean/_/_/_
id  add message(noinfoabout(cleaning ))
ip  [].


howlong rule
is  replaceall (which(A),A isa length,
               nrel/from/length/place/A/Rotvoll,nrel/to/length/place/A/Dragvoll)
    with (which(A),A isa time,B isa bus,use/B/E, %% \use2
           nrel/from/bus/place/B/Rotvoll,nrel/to/bus/place/B/Dragvoll)

id  []
ip  newfree(B),newfree(E).

howlongbetween  rule 
is  replaceall (which(A),A isa length,
               nrel/between/length/place/A/(Rotvoll,Dragvoll))
    with (which(A),A isa time,B isa bus,use/B/E, %% \use2
           nrel/from/bus/place/B/Rotvoll,nrel/to/bus/place/B/Dragvoll)

id  []
ip  newfree(B),newfree(E).

nighttoday rule  %% TA-010117
is  replaceall (B isa midnight,C isa Sunday, nrel/to/time/time/B/C)
    with       (B isa midnight,C isa Saturday, nrel/after/time/2400/B/C)    
id  []
ip  user:daysucc(Saturday,Sunday).

midnight01 rule % etc. ad. n
is  replaceall (B isa midnight,nrel/in/bus/time/C/B)
    with       (nrel/after/bus/time/C/2400)
id  []
ip  [].

midnight02 rule % etc. ad. n  %%  (NB NOT Natt til fredag !)
is  replaceall (B isa midnight,srel/nil/midnight/B/D)
    with       (srel/after/time/2400/D)
id  []
ip  [].

midnight03 rule % om natten %% TA-010221
is  replaceall (B isa midnight,srel/In/time/B/D)
    with       (srel/after/time/2400/D)
id  []
ip  dmeq([in,during2],In).



midday0 rule % etc. ad. n 
is  replaceall (B isa noon,nrel/in/bus/time/C/B)
    with       (nrel/around/bus/time/C/1200)
id  []
ip  [].


whathaveyouinfoabout rule
is  replaceall (which(A),B isa information,
                nrel/about/information/thing/B/A,
                has/agent/information/tuc/B,event/real/C)
    with        (which(A),knowthing/tuc/A/C,event/real/C) 
id  []
ip  [].


laststop rule 
is  replaceall (A isa station,adj/last/A/_)
    with       (A isa endstation)
id  []
ip  [].


secondlast rule %% nestsiste %% 
is  replaceall (adj/second_last/A/B)
    with       (adj/second/A/B,adj/last/A/B)
id  []
ip  [].
 

leave2 rule
is  replaceall (leave2/A/B/C) %% Nor  forlate
    with       (leave/A/B/C)
id  []
ip  [].


pastab rule
is  replaceall (srel/past/place/(A,B)/E)
    with       (srel/past/place/A/E,srel/past/place/B/E)
id  []
ip  [].


summer1  rule 
is   replaceall (X isa summer_route)
     with       (X isa route), 
     clear
id   addfront(message(summerishere))
ip  [].

winter1  rule 
is   replaceall (X isa winter_route)   %%  (rough)
     with       (X isa route),
     clear        
id   addfront(message(summerishere))
ip  [].


summer2  rule 
is  _ isa summer,clear  
id   clear,addfront(message(summerishere)) 
ip  [].


edemang rule
is  replaceall (test,quant(gt/2,A))
    with       (howmany(A))
id  []
ip  [].

knowstation rule 
is  context (tuc isa program,A isa station),
    replaceall (test,knowthing/tuc/A/E )
    with       (do,describe/tuc/A/E)
id  []
ip  bound(A). 


isused rule 
is replace  adj/use/A/B
   with     be1/A/B
id []
ip [].



witharrivaltime rule
is  ET isa arrival,
    replaceall nrel/with/bus/arrival/Time/ET
    with       nrel/before/bus/time/Time/ET
id  []
ip  [].



%  OM  30 minutter

% repair1

beduring2time rule %% Skal være om 30 minutter = FØR %% TA-010607
is  context (I isa self,be1/I/E),
    replaceall (srel/during2/time/X/E,X isa Minute)
    with  (X isa Minute,srel/within/duration/X/E) 
id  []
ip  dmeq(timeunit,Minute).


during2time rule %% om 30 minutter ==> during2 30 minutter ==> after 30 minutes
is  replaceall (srel/during2/time/X/E,X isa Minute)
    with  (X isa Minute,srel/withafter/duration/X/E) 
id  []
ip  dmeq(timeunit,Minute).


withinday rule %% innen tre dager %% TA-010611  Very ODD and Rough
is  replaceall (srel/Within/time/X/E,X isa day)
    with  (X isa day,srel/withafter/duration/X/E) 
id  []
ip  dmeq([within,after,before],Within).  


duringevening rule %%  buss om kvelden
is  replaceall (X isa night,srel/during/time/X/E)
    with       (srel/in_night/time/nil/E)
id  [] 
ip  [].


eveningbus rule 
is  replaceall (B isa eveningbus) 
    with       (B isa bus,nrel/after/bus/time/B/1800)
id  []
ip  [].

morningbus rule %% TA-001101
is  B isa morningbus, % not replace, keep as memory 
    add (B isa bus,
%         nrel/after/bus/time/B/500,
         nrel/before/bus/time/B/1100)
id  []
ip  [].

traveldist rule 
is  replaceall (nrel/from/Duration/place/A/Nth,nrel/to/Duration/place/A/Nardo)
    with       (B isa bus,nrel/from/bus/place/B/Nth,nrel/to/bus/place/B/Nardo,
                nrel/with/duration/vehicle/A/B)
id  [] %%  add message(noinfoabout(distance))  %% will follow later %% TA-010921
ip  newfree(B),dmeq([distance],Duration). 

traveltime rule 
is  replaceall (nrel/from/Duration/place/A/Nth,nrel/to/Duration/place/A/Nardo)
    with       (B isa bus,nrel/from/bus/place/B/Nth,nrel/to/bus/place/B/Nardo,
                nrel/with/duration/vehicle/A/B)
id []
ip newfree(B),dmeq(duration,Duration). 


travellength rule %%  ( repair rule) 
is  context B isa duration,
    replaceall   (which(A),A isa length, has/time/length/B/A)
    with         (which(B))
id  []
ip  [].    


% ridiculously clever rule 
directionfromtown rule % from place out from hoveterminalen means to place
is  replaceall (nrel/from/bus/place/S/C,B isa direction,
                                        nrel/from/direction/place/B/hovedterminalen)
    with       (nrel/to/bus/place/S/C)
id  []
ip  [].

directionfrom rule
is  replaceall (B isa direction,nrel/from/direction/place/B/N,srel/WIN/direction/B/C)
    with       (srel/from/direction/N/C)
id  []
ip  dmeq([with,in,nil],WIN).

whatisthis rule 
is  which(it),it isa thing
id  add  message(howtuchelp)
ip  [].

telljoke rule
is  Bustuc isa program,A isa Joke,tell/Bustuc/A/_
id  add  message(howtuchelp)
ip  dmeq(tuc,Bustuc),dmeq([joke,sentence],Joke). %% etc  :-)


whichdays rule 
is  which(A),A isa day,go/_/_,clear
id  add message(cannotanswer)
ip  [].

seesomething rule 
is  replaceall (Nova isa _place, A isa _movie, nrel/on/_/place/A/Nova, see/I/A/B)
    with       (Nova isa _place, go/I/B, srel/to/place/Nova/B)
id  []
ip  [].

isversion1 rule %%  Which version are you ?
is  replaceall (which(tuc),tuc isa version)
    with       (which(V),V isa version,has/system/version/tuc/V)
id  []
ip  newfree(V).

isversion2 rule  %% Which version is this ?
is  replace (which(it),it isa version,event/real/_)
    with    (which(V),V isa version,has/system/version/tuc/V)
id  []
ip  [].

isversion3 rule %% When were you updated 
is  replaceall (which(A),A isa time,adj/update/B/C,B isa _Route,srel/in/time/A/C)
    with       (which(V),V isa version,has/system/version/tuc/V)
id  []
ip  newfree(V).


isversion4 rule %% When is (last) revison 
is  not _ isa route_plan,  %% rutehefte %% TA-001001
    replaceall (which(A),V isa version,A isa time,srel/in/time/A/_)
    with       (which(V),V isa version,has/system/version/tuc/V)
id  []
ip  [].


isversion5 rule %% What is your last version %% TA-010117
is  not _ isa route_plan,  %% rutehefte %% TA-001001
    replaceall (which(V),V isa version,adj/last/V/_)
    with       (which(V),V isa version,has/system/version/tuc/V)
id  []
ip  [].


wonderquery rule 
is  replaceall (new,query/I/B/_,I isa _whatever)
    with       (which(B))
id  []
ip  [].

freqfor rule 
is  replaceall (F isa frequency,nrel/_ToFor/frequency/_/F/R,R isa Route)
    with       (F isa frequency, has/Route/frequency/R/F)
id  []
ip  [].


intimeperiodto rule  %%  I tiden 8 til 9
is  replaceall ( srel/in/time/T1/B, srel/to/clock/T2/B)
    with       ( srel/after/time/T1/B, srel/before/time/T2/B),
    not        srel/nil/clock/_/B %% når går rute 8 klokken 8 til kl 9  %% Panic
id  []
ip  [].

sundayroute2 rule 
is  replaceall ( which(A),A isa sundayroute,B52 isa route,nrel/on/route_plan/bus/A/B52)
    with       ( which(A),S isa sunday,B52 isa route,A isa route,nrel/on/bus/day/B52/S,nrel/on/bus/route/A/B52)
id  []
ip  newfree(S). % for gods sake


nestsiste rule %% repair %% ( should be taken in grammar)
is  replaceall (adj/next/R9/_C,adj/last/R9/C) 
             %% adj events are free %% TA-011002
    with       (adj/second/R9/C,adj/last/R9/C)
id  []
ip  [].

nestførste rule %% repair %% ( should be taken in grammar)
is  replaceall (adj/next/R9/_C,adj/first/R9/C) 
             %% adj events are free %% TA-011002
    with       (adj/second/R9/C)
id  []
ip  [].

answerin rule 
is  replaceall (Norwegian isa language,Answer/tuc/A,srel/InOn/_language/Norwegian/A)
    with       (Norwegian isa language,speak/tuc/Norwegian/A)
id  []
ip  dmeq([tell,answer],Answer),dmeq([in,on],InOn), 
    Norwegian \== nynorsk. %% :-)

eveningbus rule 
is  replaceall (A isa eveningbus)
    with       (A isa bus,  1800 isa clock,nrel/after/bus/time/A/1800)
id  []
ip  [].

beforebefore rule 
is  replaceall  (X isa clock, Y isa clock, srel/nil/clock/X/D, srel/nil/clock/Y/D)
    with        (X isa clock, Y isa clock, srel/after/time/Low/D, srel/before/time/High/D)
id  []
ip  number(X),number(Y),sorttimes(X,Y,Low,High).


giveansin rule
is   replaceall (A isa answer, nrel/on/sentence/language/A/L,give/tuc/A/B)
     with       (tell/tuc/B, srel/on/thing/L/B)
id  []
ip  [].


numebergo rule 
is  replaceall (A isa number,go/A/B)
    with       (A isa vehicle,go/A/B)
id  []
ip  [].


meeting  rule
is  replaceall (M isa meeting, nrel/_OnAt/meeting/place/M/P, reach/'I'/M/E)
    with       (go/'I'/E, srel/to/place/P/E)
id  []
ip  [].


monthlyfare rule
is  replaceall (adj/monthly/X/_,X isa Fare)
    with       (X isa special_ticket)
id  []
ip  dmeq([fare,price],Fare).

clockhours rule
is  replaceall (S isa hour) %% 1800 hours is ambigous
    with       (S isa clock)
id  []
ip  number(S), S > 48. 

flatter rule
is  new,(tuc isa program,adj/Intel/tuc/A,event/real/A)
id  add message(thanks)
ip  dmeq([intelligent,smart,good,clever],Intel).

withoutfer rule
is  replaceall (A isa transfer,srel/without/transfer/A/E)
    with (srel/directly/mode/nil/E)
id  []
ip  [].


hourafter1 rule 
is  replaceall (go/A/C,srel/nil/hour/B/C, B isa hour,nrel/after/duration/clock/B/Time)
    with       (go/A/C,srel/after/time/Time60/C)
id  []
ip  unbound(B),
    number(Time),
    user:addtotime(Time,60,Time60).

hourafter2 rule
is  replaceall (go/A/C,srel/nil/hour/B/C, B isa hour,nrel/after/duration/clock/B/Time)
    with       (go/A/C,srel/after/time/Time60/C)
id  []
ip  number(B), Min is B*60,
    number(Time),
    user:addtotime(Time,Min,Time60).


graakallen  rule  %% Gråkallen syndrom (NOT synbus)
is  replaceall (gråkallbanen isa tram,go/gråkallbanen/E)
    with       (F isa tram,go/F/E)
id  []
ip  thetramno(F). %% TA-001119 (busdat).


longto rule %%    Hvor langt er det fra stubban til sentrum
is replaceall (test,adj/long/it/A,srel/to/place/Stubban/A, 
               srel/from/place/Sentrum/A,event/real/A)

    with      (which(A), A isa distance, 
               nrel/from/distance/place/A/Stubban,nrel/to/distance/place/A/Sentrum)
id  []
ip  [].

walking rule 
is  replaceall (B isa walking_distance,
                nrel/from/distance/place/B/City_syd,srel/in/distance/B/C,event/real/C)
    with       (srel/near/place/City_syd/C,event/real/C)
id  []
ip  [].


teach rule
is  replaceall (Teach/I/A,srel/on/place/D/A)
    with       (be1/I/A,srel/on/place/D/A)
id  []
ip  dmeq([teach],Teach).  %% preach, sing,


%%   before inordertobe
takenilafter  rule %% Repair rule  %% TA-011030
is  replaceall (take/I/B/E, srel/nil/clock/T/E)
    with       (take/I/B/E, srel/after/clock/T/E)
id  []
ip  [].

inordertobe rule
is  replaceall (srel/being_the/reason/A/C,srel/nil/_clock/T1/C1)
    with       (srel/being_the/reason/A/C,srel/before/time/T1/C1)
id  []
ip  dmeq([time,clock],_clock). 

whyareyou rule
is  _ isa meaning,nrel/with/meaning/thing/_/Bustuc,
    not _ isa life %%  :-)
id  add message(howtuchelp)
ip  dmeq([bustuc,busstuc,buster,tuc,free(_)],Bustuc).

eachweek rule
is  srel/nil/week/_/_,clear 
id  add message(donotknow)
ip  [].


haveyoubeenin rule %% TA-001106
is  be1/tuc/E,srel/in/V/_/E
id  add message(thatisimpossible)
ip  unbound(V). %%  where have yoy been ?

getholdon rule %% TA-001112
is  replaceall (A isa hold,nrel/in/hold/vehicle/A/B,receive/I/A/C)
    with       (take/I/B/C)
id  []
ip  [].

tofromjob rule %% TA-001113
is  replaceall (C isa job,nrel/on/job/place/C/PS,nrel/From/vehicle/place/B/C)
    with       (nrel/From/vehicle/place/B/PS)
id  []
ip  [].

paarask  rule %% TA-001113
is  replaceall (B isa way,adj/Best/B/_,srel/on/way/B/D)
    with       (srel/hereafter/time/nil/D)
id  []
ip  dmeq([fast,best],Best). %% TA-001113 etc. 


nearestfuture  rule %% TA-010928
is  replaceall (C isa future, adj/next/C/D)
    with       (srel/hereafter/time/nil/D)
id  []
ip  [].

speedy rule
is  replaceall (A isa speed,go/X/E, srel/nil/speed/A/E)
    with       (A isa duration,go/X/E,srel/with/duration/A/E)
id  []
ip  [].



trikken rule %% trikken means # 1 in Trondheim %% BEFORE STUNT%% TA-010119
is  replaceall (F isa tram,go/F/E)
    with       (One isa tram,go/One/E),
    not srel/with/vehicle/_/E,  %% TA-001119
    replaceall  nrel/Prep/Veh/P/F/X
    with        nrel/Prep/Veh/P/One/X

id  []
ip  unbound(F),thetramno(One).




aftereight rule %% TA-010118 (drop before 1200, may collide with other req)
is  context  C isa morning, 
    replaceall (nrel/during2/_Veh2/time/B/C, nrel/after/Veh1/time/B/Eight)
    with       (nrel/after/Veh1/time/B/Eight)
id  []
ip  (Eight =< 1200).

beforeeight rule %% TA-010118  %% Ad hoc rule when both morning and evening
is  replaceall (srel/in_night/time/nil/E,srel/in/time/A/E,srel/to/clock/Eight/E) 
    with       (srel/after/time/Twenty/E,srel/in/time/A/E)
id  []
ip  evening_time(Eight,Twenty).


untiltime rule
is  replaceall (srel/until/T/N/E)
    with       (srel/before/time/T/N/E)
id  []
ip  [].

isitpossible rule %% TA-010611
is  removeall (A isa activity,adj/possible/it/C, event/real/C, 
               srel/in_order_to/thing/A/C,
               srel/being_the/activity/A/_)
id  []
ip  [].



isittakeit rule  %% Bloody hack %% TA-010930  %% before comeit
                                              % Robust rule, unnec at present
is  context  A isa duration,
    replaceall (be1/it/B,srel/nil/time/A/B)
    with       (take/it/A/B)
id  []
ip  [].

comeit rule  %% TA-010609
is  replaceall (Come/it/X,event/real/X)
    with       ('I' isa self,Come/'I'/X,event/real/X)
id  []
ip  [].



answer1 rule        %% TA-010213  answer1 is strictly intransitive (Norw)
is  replaceall answer1/X/Y
    with       tell/X/Y
id  []
ip  [].


withroute rule %% TA-010308
is  replaceall ( nrel/with/vehicle/number/F/H,  H isa Route,F isa Bus)
    with       ( H isa Route,F isa Bus, has/vehicle/number/F/H)
id  []
ip dmeq([number,route],Route), %% number 8 =-= route 8
   dmeq([bus,tram,vehicle],Bus),
   bound(H).



wheredoifind  rule %% TA-010507
is  replaceall (which(P),I isa self,P isa place,
                find/I/NTH/S,     NTH isa Placoid,srel/in/_Thing/P/S)
    with       (which(P),P isa place, %% TA-010607
                lie1/NTH/S,    NTH isa Placoid,srel/in/place/P/S)

id  []
ip  dmeq(place,Placoid).


isto rule %% Repair rule  %%  Telefon_  TIL  TT      TA-010511
is  replaceall (be1/A/E, srel/to/Company/TT/E,A isa Telephone, TT isa Company)
    with       (TT isa Company,A isa Telephone, has/Company/Telephone/TT/A)
id  []
ip  dmeq([telephone],Telephone).  %% ETC


normalizedate rule %% TA-010515
is  replaceall (F58 isa time,go/F56/F57,srel/in/time/F58/F57,
                            DATE isa date,srel/_/_/DATE/F57)
    with       (F58 isa time, %% in case when ...  %% TA-010729
                go/F56/F57, DATE isa date, srel/on/date/DATE/F57)
id  []
ip  [].


spectick  rule  %% TA-010605
is  replaceall (B isa ticket,adj/special/B/_C)
    with       (B isa special_ticket)
id  []
ip  [].

holi_day rule  %% TA-010606
is  replaceall (D isa day,adj/Holy/D/_E)
    with       (D isa holiday)
id  []
ip  dmeq([holy,red],Holy).   %% TA-0106067


amorrow rule  %% TA-010612
is  replaceall (D isa morrow,srel/in/time/D/E)
    with       (srel/tomorrow/day/nil/E)
id  []
ip  [].


makeastop rule %% TA-010612
is  context    (B isa station),
    replaceall (do1/A/B/C)
    with       (stop/A/C, srel/at/place/B/C)
id  []
ip  [].

followroute rule  %% TA-010614
is  replaceall (A isa route,   take/B20/A/B,  B20 isa Bus)
    with       (A isa station, pass/B20/A/B,  B20 isa Bus)
id  []
ip  dmeq(vehicle,Bus).



%------------------------------------------------------------------------------

stunt  rule  
is  replaceall  (nrel/From/_/Place/A/Nth) 
    with        (be1/A/E,event/real/E,srel/From/Place/Nth/E) %% ,A isa Bus)
id  []
ip  newfree(E).


%------------------------ NO nrel below this line ------------------------------

manif rule %% TA-010622  %% TA-010622
is  replaceall (exist/(A;_B)/E) with %% + other verbs 
                exist/A/E
id  add message(onlyonething)
ip  [].



samestops  rule
is  A isa station, adj/same/A/_, has/vehicle/station/(_B4,_B6)/A
id  add message(cannotanswer)
ip  [].

saturdayroute rule % after stunt %% TA-010120
is  replaceall ( B isa saturdayroute,srel/with/bus/B/C)
    with       ( B isa saturday,srel/on/time/B/C)
id  []
ip  [].


sundayroute1 rule % after stunt %% TA-010120
is  replaceall ( B isa sundayroute,srel/with/bus/B/C)
    with       ( B isa sunday,srel/on/time/B/C)
id  []
ip  [].


noroutesfortram1 rule  %% Fronted TA-001119
is  _ isa Tram, 
    not present _ isa telephone,
    not present _ isa webaddress,  %% etc
    clear
id  addcon  message(noroutesfor(tram))
ip  dmeq(tram,Tram), 
    \+ user:value(tramflag,true). 

noroutesfortram2 rule %% Fronted TA-001119
is  _ isa tram, clear
id  addcon  message(noroutesfor(tram)) %% ( not clear)
ip   \+ user:value(tramflag,true).


walking rule 
is  walk/_/_
id  add message(noinfoabout(walking_distance))
ip  [].

web_address rule 
is  replaceall  (X isa address,adj/web/X/_E)
    with        (X isa webaddress)
id  []
ip  [].
  

knownas rule % 
is  replaceall (adj/known/B/C,srel/as/thing/X/C,srel/BY/Place/B/D,event/real/C)
    with       (srel/BY/Place/X/D)
id  []
ip  [].

waybound rule %% TA-010116
is  adj/Wards/_/_
id  addcon message(noinfoabout(direction)) %% TA-010508
ip  dmeq([waybound,southward,northward,eastward,westward],Wards).

offside rule %% TA-010507  e.g. south of
is  srel/offside/_/_/_
id  addcon  message(noinfoabout(direction))
ip  [].

wards rule 
is  srel/Wards/direction/nil/_
id  addcon  message(noinfoabout(direction))
ip  dmeq([southward,northward,eastward,westward],Wards).

takedur rule 
is  context  (A isa Duration,B isa V),
    replaceall (Take/B/A/E)
    with       (go/B/E,srel/with/duration/A/E)
id  []
ip  dmeq([duration,time],Duration), %% TA-010208
    dmeq([take,use],Take),dmeq(vehicle,V).



labelled rule 
is  replaceall (A isa bus, N isa number,adj/label/A/B,event/real/B,srel/with/number/N/_,go/A/E)
    with       (N isa bus, go/N/E) 
id  []
ip  bound(N),exbus(N). 


fromdash rule 
is  replaceall  ( srel/nil/clock/T2/A,srel/after/time/T1/A)
    with        ( srel/after/time/T1/A,srel/before/time/T2/A)
id  []
ip  [].


halloween rule
is  replaceall (srel/between/time/T1/E,srel/nil/clock/T2/E)
    with       (srel/after/time/T1/E,srel/before/time/T2/E)
id  []
ip  [].


doilive1 rule %% only in test mode, not suitable for negans
is   exactly (test,'I' isa self,Exist/'I'/A,event/real/A),clear
id   add message(waddyathink)
ip  dmeq([exist,live,think],Exist). %%  ( can I go ... and be at nth before ...)


doilive2 rule %% only in test mode, not suitable for negans
is  test,'I' isa self,Exist/'I'/A,event/real/A,clear
id  add message(donotknow)
ip  dmeq([exist,live,think],Exist).


doilive3 rule %% only in test mode, not suitable for negans 
is   exactly (test,'I' isa self,adj/Alive/'I'/A,event/real/A),clear
id   add message(waddyathink)
ip   dmeq([alive,clever],Alive). %%  :-)


doilive4 rule %% only in test mode, not suitable for negans
is   exactly (test,'I' isa self,event/real/_A),clear
id   add message(waddyathink)
ip  [].

% i stand means I go from 

stand0 rule % two prepositions 
is  replaceall (stand/B/E, srel/on/place/X/E,     srel/Prep/place/Y/E)
    with       (go/B/E,    srel/from/place/X/E, srel/to/place/Y/E)
id []
ip dmeq(to,Prep). %% TA-010215 

stand1 rule 
is  replaceall (stand/B/E, srel/Prep/place/NTH/E)
    with       (go/B/E, srel/from/place/NTH/E)
id []
ip \+ dmeq(to,Prep). %% TA-010215 

stand2 rule % be now 
is  context _ isa self, %% TA-001204  // Hvor er bussen nå
    replaceall (be1/B/E, srel/now/time/nil/E, srel/_/place/NTH/E)
    with       (go/B/E, srel/from/place/NTH/E)
id []
ip [].



evening_quease1 rule
is  replaceall (Ev isa Night,srel/during2/time/Ev/S) %% om kvelden/ untreated
    with       (Ev isa Night,srel/in/     time/Ev/S) 
id  []
ip  dmeq(day,Night). %% NOT Minute !

evening_quease2 rule 
is  replaceall (Ev isa Minute,srel/during2/_/Ev/S) %% om 5 minutter
    with       (Ev isa Minute,srel/after/  time/Ev/S) 
id  []
ip  dmeq([hour,minute],Minute). %% NOT Minute !


evening_quease3 rule 
% after stunt: go and be in_evening => go in_evening
is  context go/F64/F, 
    replaceall (be1/F64/E,srel/In_night/time/Nil/E)
    with       (srel/In_night/time/Nil/F)
id  []
ip  In_night \== in. %% when  // Hack

agelimits rule  %% TA-010925
is removeall ('I' isa self,A isa activity,
           adj/old/'I'/C,event/real/C,srel/in_order_to/thing/A/C,
           srel/being_the/activity/A/D,event/real/D)
id add (message(noinfoabout(agelimit)),
        has_att_val(company,webaddress,tt,K),
        message(answer(db_reply(tt,webaddress,K))))
ip [].



% user knows you don't know, astt has answer
whereaboutastt rule
is (which(A),B isa self,A isa place,srel/FA/_thing/C/F,C isa Topic,
    be1/D/F,event/real/F,
    D isa information,FG/B/D/E,event/real/E,srel/in/place/A/E)
id add (has_att_val(company,webaddress,tt,K),
       message(answer(db_reply(tt,webaddress,K))))
ip dmeq([find,get,receive],FG), 
   dmeq([for,about],FA),
   dmeq([bus,card,departure,nightbus,season_ticket,special_ticket,
         price,route,age_limit,repair],Topic). %% Topics of astt


% user knows you don't know, I don't know
whereaboutdn rule 
is (which(A),B isa self,A isa place,srel/about/thing/C/F,C isa _Topic,
    be1/D/F,event/real/F,
    D isa information,find/B/D/E,event/real/E,srel/in/place/A/E)
id add  message(idonotknow)
ip [].



% user knows you don't know, astt has answers of OTHER Topics 
wherefindastt rule 
is (which(A),B isa self,A isa place,C isa Topic,
    find/B/C/E,event/real/E,srel/in/place/A/E),

                 not (1 isa route),  %% Ad Hoc,  ikke trikk  %% TA-010117 !!!
   not X isa neighbourhood cond (bound(X),foreign(X))         %% melhus %% TA-010227   

id add (has_att_val(company,webaddress,tt,K),
        message(answer(db_reply(tt,webaddress,K))))
ip dmeq([card,departure,nightbus,price,route_plan,
         repair],Topic). %% OTHER Topics of astt 

tellwhere1 rule 
is  replaceall (test,tuc isa program,A isa Place,Tell/tuc/A/C,event/real/C)
    with       (which(A),A isa Place)
id  []
ip  dmeq([place,station],Place),
    dmeq([tell,list],Tell).      %% TA-010213 


tellwhere2 rule 
is  replaceall (do,tuc isa program,A isa Place,tell/tuc/A/C,event/real/C)
    with       (which(A),A isa Place)
id  []
ip  dmeq([place,station],Place). 


tellwhere3 rule
is  replaceall (do,tuc isa program,A isa Place,tell/tuc/C,event/real/C,srel/regarding/thing/A/C)
    with       (which(A),A isa Place)
id  []
ip  dmeq([place,station],Place). 


inordertobe1  rule 
is  context  B isa self, %% don't remove bubject
    removeall (C isa reason, be1/B/E,
               srel/being_the/reason/C/E,  event/real/E,
               srel/because_of/reason/C/D, event/real/D)
id  []
ip  [].


thereafter rule 
is replaceall (srel/nil/clock/Tid/C,srel/thereafter/time/nil/C)
   with       (srel/after/time/Tid/C)
id  []
ip  [].


1500 rule 
is  NotBus isa BR,clear %% TA-001119
id	 add message(not(bus,NotBus))
ip	 atomic(NotBus),  NotBus \== it, %% internal anaphora :-)
    dmeq(bus,BR),
    not exbus(NotBus),
    not vehicletype(NotBus,tram).  %% TA-010117

1501 rule 
is  NotTram isa tram
id	 add message(not(tram,NotTram))
ip	 atomic(NotTram),  
      \+ (NotTram isa tram), 
      \+ (NotTram == it). 

1502 rule 
is  NotClock isa clock,
    clear
id	 add message(not(clock,NotClock))
ip	 number(NotClock),NotClock > 2500. 

%% 

listroute rule   
is    test,Bus isa route,tuc isa program,list/tuc/Bus/_,
      clear   %% DONT MIX
id    atday(Day),
	   add (findstations(Bus,Day,Stl),
      passesstations(Bus,Day,Stl,_))
ip   bound(Bus). 



stationsonroute  rule 
is    which(A),A isa station,Bus isa BR,be1/A/B,event/real/B,srel/ON/route/5/B
id    atday(Day),
	   add (findstations(Bus,Day,Stl),
      passesstations(Bus,Day,Stl,_))
ip    dmeq([on,at],ON),dmeq([bus,route],BR),bound(Bus). 



belie rule 
is  replaceall  (lie1/A/B)
    with        (be1/A/B)
id  []
ip  [].


toab rule 
is replaceall (srel/TOBY/place/(A,B)/E)
   with       (srel/TOBY/place/A/E,srel/to/place/B/E)
id []
ip dmeq([to,by],TOBY).  %% NOT between

passab rule 
is replaceall pass/X/(A,B)/E
   with       (pass/X/A/E,pass/X/B/E)
id []
ip [].


nighttosunday  rule 
is  replaceall
           (C isa midnight,
           srel/nil/daypart/C/D,  
           srel/to/time/B/D,
           B isa Sunday) %% test last, must be somewhat instantiated
    with
           (C isa midnight,B isa Saturday,
            srel/nil/daypart/C/D, srel/nil/day/B/D)

id  []
ip  daysucc(Saturday,Sunday).


oddtimestid rule
is  replaceall  (B isa Halfhour,has/Halfhour/DUR/B/C, C isa DUR, 
                            srel/withafter/DUR/TT/E)          %% semantically necessary 
    with        (C isa Halfhour,srel/withafter/duration/TT/E)  %% pragmatically necessary 
id  []
ip  dmeq([hour,halfhour,quarter],Halfhour),dmeq(duration,DUR). 



routefor1 rule 
is  replaceall  (B52 isa route,A isa Departure,be1/A/E,srel/For/_busroute/B52/E,event/real/E)
    with        (B52 isa route,A isa departure,has/bus/departure/B52/A)
id  []
ip  dmeq(arrdep,Departure),
     dmeq([for,to],For).        %% TA-010924


withafter rule %% OM 1 time
is  replaceall (srel/withafter/duration/X/Y)
    with       (srel/after/time/X/Y),
    not X isa day           %%%%%5  very hazardous %% TA-010611 

id  []
ip  [].


direction1 rule 
is  replaceall (F74 isa direction,
                srel/Towards/place/Sentrum/F76,
                event/real/F76,
                be1/F74/F76, 
                srel/on/direction/F74/F75)

	 with       (srel/towards/place/Sentrum/F75)
id  []
ip  dmeq(to,Towards).

direction2 rule % ?
is  replaceall (Place isa direction,srel/DD/direction/Place/C)
	 with       (Place isa place,srel/to/place/Place/C)
id  []
ip  dmeq([in,nil,with],DD), 
    bound(Place).  %% "retning" alene er kanskje "veg" 


direction3 rule % ? 
is  replaceall (Place isa direction,srel/DD/direction/Place/C)
	 with       (Place isa place,srel/from/place/Place/C)
id  []
ip  dmeq([from],DD), 
    bound(Place).  %% "retning" alene er kanskje "veg" 

direction4 rule  %%   Norwagism:  på veg til =  ( som er på vegen)
is  removeall  (F101 isa road,srel/on/place/F101/E,be1/_B5/E,event/real/E)
id  []
ip  [].


itemrule rule
is  item, _C isa _Class % discard _Class
id  add message(answer(bcpbc(completesentence)))
ip  \+ user: value(dialog,1).


inperiod rule
is  replaceall  (srel/in/Time1/T1/E1,srel/to/time/T2/E2)
    with        (srel/after/Time1/T1/E1,srel/before/time/T2/E2) 
id  []
ip  [].

hasdeparture rule 
is  replaceall  (which(D),B52 isa bus,has/bus/departure/B52/D,D isa departure,event/real/A)
    with        (which(T),T isa time, 
                 B52 isa bus,go/B52/A,srel/in/time/T/A,event/real/A)
id  []
ip  newfree(T). 


befind rule
is  replaceall (befind/X/_/E)
    with       (be1/X/E)
id  []
ip  [].



hq rule
is  replaceall (
      
      which(FREE_26),
      TT isa company,
      has/company/office/TT/FREE_23 ,
      FREE_23 isa office,

      be1/FREE_23 /FREE_25 ,
      event/real/FREE_25 ,
 
      srel/in/place/FREE_26 /FREE_25 ,
      FREE_26 isa place)

    with  (  
   
      which(FREE_26),
      TT isa company,
      be1/TT/FREE_25 ,
      event/real/FREE_25 ,

      srel/in/place/FREE_26 /FREE_25 ,
      FREE_26 isa place)



id  []
ip  [].


notatnight rule   %% Too rough if user says 0300
is  replaceall (Early isa CLO,srel/X/TIM/Early/B)
    with       (Later isa clock,srel/X/time/Later/B),
    not srel/in_midnight/time/nil/_, % unless explicitly stated
    not _ isa midnight,
    not _ isa morning,                %% TA-001112
    not srel/this_midnight/time/nil/_ %% TA-001115

id  []
ip  dmeq(timeclock,CLO),
    dmeq(timeclock,TIM), 
    notatnight(Early,Later).


inorder0 rule
is  context    ( srel/in_order_to/thing/D/_,srel/in/time/D/E),
    replaceall ( be1/A/E,srel/ON/place/Drag/E )
    with       ( pass/A/Drag/E )

id  []
ip  dmeq(by,ON).



inorder1 rule
is replaceall ( %% srel/from/place/Dragvoll/C,
               srel/in_order_to/thing/D/C, 
               D isa time,
               event/real/E,              %% Does this help
               srel/in/time/D/E,
               srel/to/place/Nardo/_CE,  %% makes it slightly rougher
               srel/at/time/T1300/E)

   with       (%% srel/from/place/Dragvoll/C,
               srel/to/place/Nardo/C,srel/before/time/T1300/C)

id []
ip [].



reachat0 rule
is  replaceall ( reach/C/D/B, srel/nil/clock/Six/B)
    with       ( reach/C/D/B, srel/before/time/Six/B)
id  []
ip  []. 




reachat1 rule 
is  replaceall ( reach/C/D/B, srel/at/time/Six/B)
    with       ( reach/C/D/B, srel/before/time/Six/B)
id  []
ip  []. 

reachat2 rule
is  replaceall ( take/C/D/B, srel/nil/time/Six/B) %% nil ???
    with       ( take/C/D/B, srel/before/time/Six/B)
id  []
ip  []. 

takeit1 rule %% Horrible Hack
is  replaceall (take/it/D/_, go/it/E)
    with       (V isa bus,go/V/E,srel/with/duration/D/E)
id  []
ip  newfree(V).


takeit2 rule
is  replaceall (take/it/D/C)
    with       (V isa bus,go/V/C,srel/with/duration/D/C),
    D isa VEH,   %% det er dumt å ta feil *
    not present make/_/_/_
id  []
ip  dmeq(vehicle,VEH),newfree(V).

longisit rule 
is  replaceall (be1/D/C, D isa distance)
    with       (V isa bus,D isa duration,go/V/C,srel/with/duration/D/C)
id  addcon  message(noinfoabout(distance))  %% TA-010921
ip  newfree(V).


%% Late Day section 

innight0 rule % IF T before clock, T < 1200 => innight just eveningtime
is  srel/in_night/time/nil/E, %% TA-010612
    replaceall  (  T isa clock, srel/Prep/time/T/E)
    with        ( T1 isa clock, srel/Prep/time/T1/E)
id  []
ip  T < 1200,
    evening_time(T,T1).

nightat6 rule 
is  context  srel/IE/time/nil/D, %% May be used twice, i.e. between 7 and 8 in the evening
    not _B isa morning,   %%   TA-010118  It will be confused anyway
    replaceall ( Six isa clock, srel/Prep/Clock/Six/D)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/D) % time is standard
id  []
ip  dmeq(pm,IE),dmeq(clock,Clock),evening_time(Six,Eighteen). 

%% Experimenatal 
nightat7 rule %%   today and timenow > Six => tonight
is  context  srel/today/day/nil/D, %% May be used twice
    not _B isa morning,   %%   TA-010118  It will be confused anyway
    replaceall ( Six isa clock, srel/Prep/Clock/Six/D)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/D) % time is standard
id  []
ip  dmeq(clock,Clock),
    user:timenow(NOW),NOW > Six,
    evening_time(Six,Eighteen). 


nightat8 rule 
is  _A isa night,
    not _B isa morning, %%   TA-010118  It will be confused anyway
    replaceall ( Six isa clock, srel/Prep/Clock/Six/D)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/D) % time is standard
id  []
ip  dmeq(clock,Clock),evening_time(Six,Eighteen). 



tonightat6 rule %%  buss går  klokka 6 om kvelden
is  replaceall ( Six isa clock, srel/IE/time/nil/D, srel/Prep/Clock/Six/D)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/D), % time is standard
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq(clock,Clock),dmeq(pm,IE),evening_time(Six,Eighteen). 

tonightat6a rule %%  lørdag kveld klokka 8
is  replaceall ( Six isa clock,B isa EVENING,srel/nil/daypart/B/D,srel/Prep/Clock/Six/D)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/D), % time is standard
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq(clock,Clock),dmeq(pm,EVENING),evening_time(Six,Eighteen). 


tonightat6b rule 
is  replaceall ( Six isa Clock1,srel/Prep/Clock/Six/E,srel/tonight/time/nil/_E) %% TA-001018
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/E), % time is standard
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq(clock,Clock),dmeq(clock,Clock1),evening_time(Six,Eighteen). 

tonightat6midnight rule 
is  replaceall ( Six isa Clock1,srel/Prep/Clock/Six/E,srel/this_midnight/time/nil/E)
    with       ( Eighteen isa clock,srel/Prep/time/Eighteen/E), % time is standard
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq(clock,Clock),dmeq(clock,Clock1),evening_time(Six,Eighteen). 

tonightat6c rule
is  replaceall ( Six isa clock, srel/ATTIME/Clock/Six/E,G isa evening,srel/WITHIN/time/G/E)
    with       ( Eighteen isa clock,srel/at/time/Eighteen/E), % time is standard
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip   dmeq(clock,Clock),evening_time(Six,Eighteen),dmeq(within,WITHIN), 
     dmeq(attime,ATTIME). 

tonightat6d rule %%   etc.  etc. 

is  replaceall (T600 isa clock,
          Ev isa evening,
          go/A/B,event/real/B,
          srel/in/time/Ev/B,
          srel/before/time/T600/B)

    with  (T1800 isa clock,
           go/A/B,
           event/real/B,
           srel/before/time/T1800/B),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  evening_time(T600,T1800).

tonightat6e rule %%  etc.  etc. 

is  replaceall (T600 isa clock,
          Ev isa evening,
          go/A/B,event/real/B,
          srel/nil/clock/T600/B,
          srel/in/time/Ev/B
        )

    with  (T1800 isa clock,
           go/A/B,
           event/real/B,
           srel/before/time/T1800/B),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  evening_time(T600,T1800).

tonightat6f rule %%   etc.  etc. 

is  replaceall (T600 isa clock,
          Ev isa evening,
          be1/A/B,event/real/B,
          srel/in/time/Ev/B,
          be1/A/F38,event/real/F38,srel/before/time/T600/F38)

    with  (T1800 isa clock,
           go/A/B,
           event/real/B,
           srel/before/time/T1800/B),
     not _B isa morning %%   TA-010118  It will be confused anyway

id  []
ip  evening_time(T600,T1800).

tonightat6g rule %%  etc.  etc. 

is  replaceall (T600 isa clock,
          Ev isa evening,
          be1/A/B,event/real/B,
          srel/in/time/Ev/B,
          go/A/F38,event/real/F38,srel/before/time/T600/B)

    with  (T1800 isa clock,
           go/A/B,
           event/real/B,
           srel/before/time/T1800/B),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  evening_time(T600,T1800).


tonightat6h rule %%  går bussen klokken ti om kvelden
                 %% This is too rough, but I get sick
is  replaceall (

    T1000 isa clock,
    srel/nil/clock/T1000/F1,
    srel/In_evening/time/nil/F2)

    with (

    T2200 isa clock,
    srel/nil/clock/T2200/F1,
    srel/In_evening/time/nil/F2),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq([in_evening,in_night,in_afternoon],In_evening),
    evening_time(T1000,T2200).

tonightat6i rule %%  går bussen klokken ti om kvelden
                 %% This is too rough, but I get sick
is  replaceall (

    T1000 isa clock,
    srel/around/time/T1000/F1,
    srel/In_evening/time/nil/F2)

    with (

    T2200 isa clock,
    srel/around/time/T2200/F1,
    srel/In_evening/time/nil/F2),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq([in_evening,in_night,in_afternoon],In_evening),
    evening_time(T1000,T2200).

tonightat6j rule 
is  replaceall ( Six isa Clock1,     B isa Sunday, has/day/night/B/C, srel/Prep/X/Six/D)
    with       ( Eighteen isa Clock1,B isa Sunday, has/day/night/B/C, srel/Prep/X/Eighteen/D),
    not _B isa morning %%   TA-010118  It will be confused anyway
id  []
ip  dmeq(clock,Clock1),evening_time(Six,Eighteen).  


%................................................................
% I get sick of this
%................................................................



toclock rule %% clock with toplace = before clock %%  After tonightat
is  replaceall 

( srel/to/place/J/E,srel/nil/clock/T/__E) %% stunt makes %% TA-011009
                                                         %% havoc of E
    with       ( srel/to/place/J/E,srel/before/time/T/E),
    not  adj/next/_/_ 
id  []
ip  [].



liveinhell rule
is  context    (I isa self), 
    replaceall ( Live/I/E, srel/INON/Place/PS/E)
    with       (  go/I/E,  srel/from/Place/PS/E)

%%    not srel/before/time/_/E   %% jeg skal være på %% TA-010225
%%    jeg bor på nardo og i morgen skal jeg til pirsenteret før 845.
id  []
ip  dmeq(at,INON),dmeq(place,Place),

    dmeq([live],Live). %% [live,work]  EXPERIMENT   from home to work???



fetch rule  % Fetching cars is very relevant %% after liveinhell
is  replaceall (fetch/I/A/E, I isa self,A isa _Car,srel/AtOn/place/NAF/E)
    with       (I isa self,go/I/E, srel/to/place/NAF/E)
id  []
ip  dmeq([at,on],AtOn). %% not from, destroys go from if live on // Intricate!


traintohellbe rule 
is   replaceall (A isa train,Oslo isa Neigh, be1/A/E,srel/to/place/Oslo/E)
     with       (A isa train)
id  []
ip  dmeq([city,neighbourhood],Neigh). %% oslo changed from neigh. to city 


reachtrain  rule
is  replaceall  (C isa self,D isa train,TAKE/C/D/E)
    with        (C isa self,ts isa station,   %% AD HOC !
                 go/C/E, srel/to/place/ts/E)  % pass/C/E

id  []
ip  dmeq(take,TAKE).


reachboat  rule
is  replaceall  (C isa self,D isa boat,TAKE/C/D/E)
    with        (C isa self,pirterminalen isa station,  
                 go/C/E, srel/to/place/pirterminalen/E)  
id  []
ip  dmeq(take,TAKE).


ankomme rule  %% NB after reachtrain
%% Norwagism %% ankomme (reach) = gå til 
is  context    S isa Place,
    replaceall (reach/B/S/E)
    with       (go/B/E,srel/to/place/S/E)
id  []
ip  dmeq(place,Place).



gaaseg rule 
is  replaceall  (go1/A/A/B)
    with        (go/A/B)
id  []
ip  [].


sothatrule rule 
is  replaceall

    (A isa self,B isa reason,event/real/C,
     srel/being_the/reason/B/C,srel/because_of/reason/B/C,
     D isa self,adj/present/D/E,event/real/E,srel/before/time/X/E)

     with   (A isa self,event/real/C,srel/before/time/X/C)


id []
ip [].


beavailable rule 
is  replaceall (A isa BR,adj/available/A/C)
    with       (A isa BR,go/A/C)
id  []
ip  dmeq(bus,BR).


witharrival rule
is  present X isa STAT,
    replaceall  srel/with/arrival/X/Y %% X is not a time !!! 
    with        srel/to/place/X/Y

id  []
ip  dmeq([station,neighbourhood],STAT).



describeq rule
is (tuc isa program,describe/tuc/quote(Meaning)/E,event/real/E),
   clear
id clear, add message(answer(bcpbc(Abstract)))
ip user:(Meaning ako Abstract),
   \+ member(Meaning,[god,price]). %% etc.  etc. %% TA-010327


describeclass rule 
is (tuc isa program,X isa Meaning,describe/tuc/X/E,event/real/E),clear
id clear, add message(answer(bcpbc(Abstract)))
ip unbound(X),
    user:(Meaning ako Abstract).


describe0 rule 
is (tuc isa program,C isa Clock,describe/tuc/C/E,event/real/E),clear
id clear, add message(answer((bcpbc(Clock))))
ip bound(C). 



describe rule 
is (tuc isa program,C isa _Clock,describe/tuc/C/E,event/real/E),clear
id clear, add message(answer((bcpbc(D))))
ip description(C,D). 


contain rule  %%  ( NB   takes both  Subj/OBj and Obj/Subj
is  replaceall  ( contain/A/Midtbyen/B)
    with        ( be1/Midtbyen/B, srel/in/place/A/B )
id  []
ip  bound(Midtbyen).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


firsthour rule %% firstminutes rule ???
is replaceall (B isa hour,adj/first/B/_,srel/nil/hour/B/D) 
   with       (B isa hour,srel/within/hour/B/D)
id []
ip [].




% hvor mange hver time ==> how often

eachhour rule
is replaceall (howmany(B52) ,B52 isa bus,B isa HOUR1,go/B52/C,
               event/real/C,srel/nil/DUR/B/C)
   with      (which(A),B52 isa bus,go/B52/C,event/real/C,
                  srel/with/frequency/A/C,A isa frequency)
id []
ip
dmeq(timeunit,HOUR1),dmeq([duration],DUR),unbound(B),newfree(A).



% komme seg = gå  Norwagism

kommeseg rule
is   replaceall  (ME isa self,go1/I/ME/E)
     with        (go/I/E)
id   []
ip   [].


%% list buses



%% neighbourhood around X MEANS  X

% have information about MEANS  what is


% Go on means take

goon rule
is  context  (I isa self,B isa BUS1),
    replaceall  (Go/I/E,srel/ONOFF/BUS2/B/E)
    with        (take/I/B/E)
id  []
ip  dmeq(onoff,ONOFF),dmeq([bus,route],BUS1),dmeq([bus,route],BUS2),
    dmeq([go,think,wonder],Go).  %% Facetious ???
 

areyouwhat1 rule 
is  exactly (test,Tuc isa program,event/real/_)
id  add  true %% Yes is added 
ip  dmeq([busstuc,bustuc,tuc],Tuc).

areyouwhat2 rule 
is  exactly (test,Tuc isa program,event/real/_)
id  add  true %% Yes is added 
ip  dmeq([busstuc,bustuc,tuc],Tuc). 

areyouwhat3 rule
is  test,(tuc isa program,tuc isa C,event/real/_),
    not adj/_/_/_           %% yellow computer 
id  add  true %% Yes is added 
ip  dmeq([oracle,computer,robot],C).  %% etc. %% TA-010202 

areyouwhat4 rule
is  test,(bustuc isa program,bustuc isa C,event/real/_),
    not adj/_/_/_           %% yellow computer
id  add  true %% Yes is added 
ip  dmeq([oracle,computer],C).  %% etc.  

areyouwhat5 rule%% TA-001214
is  test,(Two isa route,Two isa bus,event/real/_), %% Ad hoc
    not adj/_/_/_           %% yellow bus 
id  add  true %% Yes is added 
ip  [].

areyouwhat6 rule%% TA-010205
is  test,(CS isa station,CS isa neighbourhood,event/real/_), %% Ad hoc
    not adj/_/_/_           %% yellow bus 
id  add  true %% Yes is added 
ip  bound(CS),
    user:station(CS),
    user:neighbourhood(CS).

areyouwhat99 rule 
is  exactly (test,Trondheim isa City,event/real/_)
id  add  true %% Yes is added 
ip  bound(Trondheim),Trondheim \== it, %%   Is this a joke :-)
    bound(City).


languageyes rule 
is  test, 
    L isa language,SPEAK/TUC/L/A,event/real/A
id  add  message(yes) 
ip  dmeq(speak,SPEAK), L isa language,
    dmeq(['I',tuc],TUC),  %% I speak = May I speak
    dmeq(knownlanguage,L).

languageyes1 rule 
is  test, 
    L isa language,Quest isa question,ask/_I/Quest/_,srel/on/language/L/A,event/real/A
id  add  message(yes)
ip  L isa language,
    dmeq(knownlanguage,L).
	 

languageyes2 rule 
is  test, 
    L isa language,ask/_I/_,srel/on/language/L/A,event/real/A
id  add  message(yes) 
ip  L isa language,
    dmeq(knownlanguage,L). 

languageno rule 
is  test,(tuc isa program,L isa language,SPEAK/tuc/L/A,event/real/A)
id  add  message(no)
ip  dmeq(speak,SPEAK), L isa language,
    \+ dmeq(knownlanguage,L).


languageno1 rule 
is  test,(tuc isa program,nynorsk isa language,tell/tuc/A,event/real/A)
id  add  message(no) 
ip  [].


languageno2 rule
is  test,(I isa self,L isa language,ASK/I/A,srel/_/language/L/A,event/real/A)
id  add  message(no)
ip  dmeq([ask],ASK), L isa language,
    \+ dmeq(knownlanguage,L).


reply rule 
is  reply(H)
id  add  message(answer(bcpbc(H))) %% Language independent
ip  [].  

replyq rule   
is  replyq(H)
id  add reply(H) %% Reply is language defined
ip  [].   


only_one_bus0 rule 
is  X isa BUS, go/(X ,_)/_ 
id  add message(answer(bcpbc(onlyonebus)))
ip  dmeq(bus,BUS).


only_one_bus1 rule 
is  X isa BUS, pass/(X ,_)/_/_ 
id  add message(answer(bcpbc(onlyonebus)))
ip  dmeq(bus,BUS).


only_one_bus2 rule
is  X isa BUS, srel/_/_/(X,_)/_ 
id  add message(answer(bcpbc(onlyonebus)))
ip  dmeq(bus,BUS).


only_one_bus3 rule 
is  X isa BUS, has/BUS1/departure/(X,_)/_
id  add message(answer(bcpbc(onlyonebus)))
ip  dmeq(bus,BUS),dmeq(bus,BUS1).


bepresent rule
is  replaceall (  X isa Movaton,adj/present/_/B,srel/on/place/Buenget/B)
    with       (  go/X/B,srel/to/place/Buenget/B)
id  []
ip  dmeq(busman,Movaton). 

wannagoto0 rule %% Dirty repair
is    context    (I isa self,NTH isa Station1, Dragvoll isa Station2, event/real/E),
      replaceall (be1/I/E,srel/On/place/NTH/E,go/I/E,srel/ONTO/place/Dragvoll/E)
      with       (go/I/E,srel/from/place/NTH/E,srel/to/place/Dragvoll/E)
id  []
ip  ( NTH \== Dragvoll),
    dmeq(place,Station1),dmeq(place,Station2),dmeq(onto,ONTO),
    dmeq([on,at],On). %% TA-001115


wannabeon1 rule 
is    context    ( %% I isa self,   also bus %% TA-00717
                  srel/from/place/NTH/C, NTH isa Station1, 
                  Dragvoll isa Station2, event/real/C),
      replaceall (srel/OTAN/place/Dragvoll/E,Be1/I/E)
      with       (go/I/E,srel/to/place/Dragvoll/E)
id  []
ip  ( NTH \== Dragvoll), 
    dmeq([be1,work],Be1), %% work is destination ??? TA-001116
    dmeq(nato,OTAN),dmeq(place,Station1),dmeq(place,Station2).


wannabeon2 rule
is  context (I isa self,NTH isa Station1,Dragvoll isa Station2),

    replaceall ( want/id/that/I/B/C,event/real/C,be1/I/D,event/B/D,
                 srel/OTAN/place/Dragvoll/D)       % ,srel/from/place/NTH/D)

    with       (go/I/D,event/real/D,srel/to/place/Dragvoll/D) %,srel/from/place/NTH/D)

id  []
ip  ( NTH \== Dragvoll), dmeq(nato,OTAN),dmeq(place,Station1),dmeq(place,Station2).


wannabeon3 rule
is  context (I isa self,NTH isa Station),

  replaceall (want/id/that/I/B/C,event/real/C,be1/I/D,srel/OTAN/place/NTH/D,event/B/D)

  with       (go/I/D,event/real/D,srel/to/place/NTH/D) 

id  []
ip  dmeq(nato,OTAN),dmeq(place,Station).

%% I am on X and wanna be on Y 
%% HAZARD GUESS %% fails on ia wanne be on Y and I am on Y
wannabefore2 rule %%  TA-010120
is  context (I isa self),

  replaceall (be1/I/D,event/real/D,srel/OTAN/place/NTH/D,srel/OTAN/place/Moholt/D,
              srel/NILB/TIME/T/D)

  with       (go/I/D, event/real/D,srel/from/place/NTH/D,srel/to/place/Moholt/D,
               srel/before/time/T/D) 

id  []
ip  dmeq(nato,OTAN), % dmeq(place,Station),
    dmeq(beforenil,NILB),dmeq(time,TIME). 

wannabefore rule %% Made less volatile %% TA-010606
is  context (I isa self),

  replaceall (be1/I/D,event/real/D,srel/OTAN/place/NTH/D,NTH isa Station,srel/NILB/TIME/T/D)

  with       (go/I/D, event/real/D,srel/to/place/NTH/D,NTH isa Station,srel/before/time/T/D) 

id  []
ip  dmeq(nato,OTAN),dmeq(place,Station),
    dmeq(beforenil,NILB),dmeq(time,TIME). 


wannabeprep rule 
is  context (I isa self,NTH isa Station), 

  replaceall (be1/I/D,event/real/D,srel/OTAN/place/NTH/D,srel/PREP/TIME/T/D)

  with       (go/I/D, event/real/D,srel/to/place/NTH/D,srel/PREP/time/T/D) 

id  []
ip  dmeq(nato,OTAN),dmeq(place,Station),
    dmeq(time,TIME).



mismatch2  rule 
is  replaceall (B52 isa BR1,A isa BR2, go2/A/B52/B,event/real/B)
    with       (B52 isa BR1,A isa station, pass/B52/A/B,event/real/B)

id  []
ip  unbound(A),dmeq(bus,BR1),dmeq(bus,BR2).


haho0 rule %%   before hm1
is  replaceall (A isa hour,adj/half/A/_)
    with       (A isa halfhour)
id  []
ip  [].

%% convert hours to minutes once and forall

hm1 rule %%  an hour
is  replaceall (Hours isa hour,      srel/Within/HOUR/Hours/E) 
    with       (Minutes isa minute,  srel/Within/minute/Minutes/E) 
id  []
ip  dmeq(hour,HOUR),unbound(Hours),Minutes is 60. 

hm2 rule
is  replaceall (Hours isa hour,      srel/Within/HOUR/Hours/E)  
    with       (Minutes isa minute,  srel/Within/minute/Minutes/E) 
id  []
ip   dmeq(hour,HOUR),number(Hours),
     Minutes is integer(Hours*60).   %% TA-010120


haho1 rule %%  halfhour to minutes
is  replaceall (Halfhours isa halfhour, srel/Within/HOUR/Halfhours/E)  
    with       (Minutes isa minute,     srel/Within/minute/Minutes/E) 
id  []                                             %% conformity   %% TA-010926
ip  dmeq(hour,HOUR),unbound(Halfhours), Minutes is 30.

haho2 rule %%  n  halfhours  to minutes 
is  replaceall (Halfhours isa halfhour,    srel/Within/HOUR/Halfhours/E)  
    with       (Minutes isa minute,        srel/Within/minute/Minutes/E) 
id  []
ip   dmeq(hour,HOUR),number(Halfhours),Minutes is Halfhours*30.



qm1 rule %%   quarter to minutes
is  replaceall (Quarters isa quarter,      srel/Within/QUARTER/Quarters/E)  
    with       (Minutes isa minute,  srel/Within/minute/Minutes/E) 
id  []
ip  dmeq(quarter,QUARTER),unbound(Quarters),Minutes is 15. 

qm2 rule %%  quarters to minutes
is  replaceall (Quarters isa quarter,      srel/Within/QUARTER/Quarters/E)  
    with       (Minutes isa minute,  srel/Within/minute/Minutes/E) 
id  []
ip   dmeq(quarter,QUARTER),number(Quarters),Minutes is Quarters*15.



%%%%%%%%  SMALLTALK %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Statements that obviously challenge the system 


whoareyou1 rule
is  which(TUC),(TUC isa program,event/real/_)
id  add(message(answer((bcpbc(bustuc)))))
ip  dmeq(tuc,TUC).

whoareyou2 rule
is  %% which(A),
    (has/agent/name/B/A,B isa program,A isa name)
id  add(message(answer((bcpbc(bustuc)))))
ip  [].

whoareyou3 rule
is  which(A),(be_named/tuc/A/_) 
id  add(message(answer(bcpbc(bustuc))))
ip  [].

whoareyou4 rule
is  which(tuc),(tuc isa program,event/real/_)
id  add(message(answer(bcpbc(bustuc))))      %% Special because tuc isa program is 
ip  [].                                       %% a truncated doublette 


whoareyou5 rule
is  which(A),(A isa oracle,event/real/_)  
id  add(message(answer(bcpbc(bustuc)))) 
ip  [].    


whoareyou6 rule
is  (which(A),be_named/A/tuc/D,event/real/D) 
id   add(message(answer(bcpbc(bustuc)))) 
ip  [].


benamed rule 
is  (which(A),Tagore isa Programmer,be_named/A/Tagore/B,event/real/B)
id  add message(answer(bwr(Tagore)))
ip  bound(Tagore), \+ (Programmer = self).

be_named1 rule
is  replaceall (which(A),B isa Bus,be_named/B/A/D,event/real/D)
    with       (which(B),B isa Bus)
id  []
ip  dmeq([bus,station],Bus),
    unbound(B).

be_named2 rule 
is  replaceall (which(A),B isa Bus,be_named/A/B/D,event/real/D) 
    with       (which(B),B isa Bus)
id  []
ip  dmeq([bus,station],Bus),
    unbound(B).


marvin rule
is  exactly (which(Marvin),Marvin  isa Mayor ,event/real/_)
id  add message(answer(bcpbc(D))) 
ip  bound(Marvin), 
    \+ Marvin == it, 
    \+ dmeq([self],Mayor),  %%   Hvem er jeg ==> Vet ikke
    \+ dmeq(place,Mayor),
    \+ dmeq(clock,Mayor), 
    \+ dmeq(dayordate,Mayor), 
    description(Marvin,D).

%% What is the meaning of life

life42 rule 
is  which(A),(has/life/meaning/B/A,A isa meaning,B isa life) 
id  add message(answer(bcp(42)))
ip  [].

life43 rule %% TA-001220
is  which(A),(has/life/meaning/B/A,A isa meaning,B isa liff)
id  add message(answer(bcp(43)))
ip  [].



life421 rule 
is  not explain,   %% TA-010926
    be1/M/E, srel/_/thing/L/E, M isa meaning, L isa life  
id  add message(answer(bcp(42)))
ip  [].


life422 rule 
is  test,42 isa meaning,F1 isa life,be1/42/F2,event/real/F2,
    srel/with/thing/F1/F2
id  add true
ip  [].


life423 rule  %% TA-001031
is  test, has/life/meaning/B/A, A isa meaning, B isa life
id  add message(answer(bcp(42)))
ip  [].


whers rule %% hvorfor finnes busstuc
is  explain,Bustuc isa program,be1/Bustuc/E,event/real/E
id  add  message(howtuchelp)
ip  dmeq(tuc,Bustuc).



385 rule 
is  explain,be1/tuc/A, srel/HOME/PLACE/nil/A %% why are you here 
id  addfront message(howtuchelp)
ip  dmeq(where,HOME),dmeq([place],PLACE). 

386 rule 
is  explain,adj/make/tuc/_  %% why are you made ?
id  addfront message(howtuchelp)
ip  [].


made0t rule  %% når ble du laget
is  which(T),T isa time,make/_/tuc/_ ,clear  %% not negans %% TA-010926
id  add message(donotknow)        
ip  [].

made0 rule  %% når ble du laget
is  which(A),A isa agent, make/A/tuc/_ ,clear %% not negans %% TA-010926
id  add message(quote('Tagore'))        
ip  [].



made1 rule 
is  %% test,  %% TA-011024
    make/_/Tuc/C, event/real/C,  %% not negans    %% TA-010331
    not srel/being_the/reason/_/C, %% :-)          %% TA-010331
    not srel/in/_/_/_  %% TA-010830
id  add message(quote('Tagore'))
ip  dmeq([tuc,busstuc,bustuc],Tuc). %% TA-010320

made2 rule 
is  test, %% TA-010830
    A isa agent,make/A/Tuc/C, Tuc isa Oracle,
    not srel/being_the/reason/_/C , %% :-)          %% TA-010331
    not srel/in/_/_/_  %% TA-010830
id  add message(quote('Tagore'))
ip  dmeq([program,oracle,service],Oracle). %% TA-010320


made3 rule 
is  A isa agent,adj/make/Tuc/_, Tuc isa Oracle,     %% made as Adj
    srel/by/agent/A/_ ,                             %% TA-010830
    not srel/being_the/reason/_/_ , %% :-)          %% TA-010331
    not srel/in/_/_/_  %% TA-010830
id  add message(quote('Tagore'))
ip  dmeq([program,oracle,service],Oracle). %% TA-010320


391 rule 
is  be1/tuc/E, srel/to/purpose/_/E %% why are you here 
id  addfront message(howtuchelp)
ip  [].

392 rule 
is  has/agent/meaning/tuc/_
id  addfront message(howtuchelp)
ip  [].



398 rule %% Hva er dette ? 
is  exactly (which(it),true)
id  addfront message(howtuchelp)
ip  [].


398 rule 
is  explain,be1/tuc/_   %% why are you here 
id  addfront message(howtuchelp)
ip  [].



399 rule 
is  which(A),(tuc isa program,work/tuc/B,srel/with/thing/A/B)
id  addfront message(howtuchelp)
ip  [].

%% cards

cards rule 
is _ isa card,
   clear             %% drastic ? 
id
   addcon message(noinfoabout(card)), %% first %% TA-010305
   add (has_att_val(company,webaddress,tt,K)), %% TT has info about cards 
   addcon message(answer(db_reply(tt,webaddress,K)))  %% will be executed in order

ip [].



%% NO INFO ABOUT RULES WITH POINTER TO ASTT

%% special tickets etc.

astt_topic rule 
is _ isa Special_ticket
id
   add (has_att_val(company,webaddress,tt,K), %% TT has info about cards 
        message(answer(db_reply(tt,webaddress,K)))),  %% will be executed in order
   addfront(message(noinfoabout(Special_ticket)))     % % add last to be first !
ip dmeq([age_limit,bag, bicycle,dog,discount, 
       %% holiday, %% TA-010621-> must specify day
        pram,zone,luggage,ringroute,season_ticket,special_ticket,
        wallet,wheelchair,zone],     %% TA-010606
        Special_ticket).


%  what is D means describe D  (NOT A  REWRITE RULE !)

whatis1 rule  %% moved adter astt_topic %% TA-010605
is exactly (which(X),X isa Y)
id clear, add message(answer((bcpbc(D))))
ip bound(X),
   Y \== self, 
   Y \== clock,
   X \== it, 
   description(X,D).

%% NO INFO ABOUT RULES WITHOUT  POINTER TO ASTT

%% seats

seats rule 
is  _ isa Seat
id  addfront(message(noinfoabout(Seat)))
ip  dmeq([seat,accident,size,cinema,airport],Seat). %% TA-010302
                                    %% airport other than værnes %% TA-011004

%% size 

size rule 
is B52 isa bus, S isa Size, has/object/Size/B52/S,
   not srel/_tofrom/place/_/_  %% length of bus tour 
id addfront(message(noinfoabout(Size)))
ip dmeq(measure,Size).


177 rule 
is has/vehicle/size/_/_  
id addfront(message(noinfoabout(size)))
ip [].


%  Internet
internet rule 
is  _internet isa network ,
    clear     %% no use in ask for specifications when that is the problem
id	 add message(noinfoabout(network)) 
ip	 [].


%  Weather
weather1 rule 
is  _ isa weather % ,C isa Timeq,rain/D/E,srel/in/time/C/E
id	 add message(noinfoabout(weather)) 
ip	 [].

%  Weather
weather2 rule 
is  adj/Cold/_/_
id	 add message(noinfoabout(weather)) 
ip	 dmeq([cold,hot,wet,icy],Cold).


%  Weather
weather3 rule  
is  _ isa rain
id	 add message(noinfoabout(weather)) 
ip	 [].


%  Weather
weather4 rule 
is  _ isa sun
id	 add message(noinfoabout(weather)) 
ip	 [].


%  Weather
weather5 rule 
is  _ isa temperature
id	 add message(noinfoabout(weather)) 
ip	 [].




thanks1 rule %% Acknowledge praise 
is  (A isa self,adj/impressed/A/_)
id  add message(answer((bcpbc(thanks))))
ip  [].


% where am i?
3867 rule 
is  which(A),B isa self,be1/B/C,event/real/C,srel/in/place/A/C
id	 add message(donotknow)
ip	 [].


gas2 rule
is  _ isa gas  
id  addcon(message(noinfoabout(gas)))
ip  [].


% Kan du tenke?
4013 rule 
is  test,tuc isa program,think/tuc/_
id	 addfront message(donotknow) 
ip	 [].                          %% " what do you think ? "


%%%%%END OF SMALLTALK%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% station on neighbourhood is a special case ( touchy)

102 rule 
is  replaceall ( srel/on/neighbourhood/lade/B )
    with       ( srel/near/place/lade/B )
id  []
ip  [].


% % % % % % % PART OF DAY RULES


midday rule 
is  replaceall (B isa day, srel/around/time/B/E)
    with       (srel/around/time/1200/E)
id  []
ip  [].


daypart rule 
is  replaceall (has/daypart/bus/B/C,  B isa evening)
    with       (srel/tonight/time/nil/C)
id  []
ip  [].

% bus sunday night MEANS bus after at the proper time

1490 rule 
is  replaceall (B isa night, srel/nil/time/B/E)
    with       (srel/after/time/1900/E)
id  []
ip  [].

%% Tuesday night MEANS Tuesday after 1900
  
1590 rule 
is  replaceall (C isa night,srel/nil/daypart/C/E)
    with       (1900 isa clock,srel/after/time/1900/E),
    not  present srel/before/time/_/E,   %% not squeeze it
    not  present srel/after/time/_/E    %% TA-010924
id  []
ip  [].

  
omkvelden1 rule  %% Hva er busstidene på kvelden
is  replaceall (C isa night,srel/ON/night/C/E)
    with       (1900 isa clock,srel/after/time/1900/E),
    not  present srel/before/time/_/E   %% not squeeze it
id  []
ip  dmeq([about,on],ON).
  
omkvelden2 rule  %% Hva er busstidene på kvelden
is  replaceall (C isa night,srel/OM/daypart/C/E)
    with       (1900 isa clock,srel/after/time/1900/E),
    not  present srel/before/time/_/E   %% not squeeze it
id  []
ip  dmeq([about,on],OM).



1491 rule 
is  replaceall (B isa evening, srel/nil/daypart/B/E) 
    with       (srel/after/time/1700/E), 
    not         srel/before/time/_/E   %% not squeeze it
id  []
ip  [].

%% Tuesday evening MEANS Tuesday between 1700 and 2000  
  
1600 rule 
is  replaceall (C isa evening,srel/nil/daypart/C/E)
    with       (srel/after/time/1700/E,srel/before/time/2000/E)
id  []
ip  [].


defaultmorning rule 
is  replaceall (B isa morning, srel/nil/daypart/B/E)
    with       (srel/after/time/0500/E), 
    not  _ isa clock %% if clock is mentioned, morning is just redundant 
id  []
ip  [].

1493 rule 
is  replaceall (B isa midnight, srel/nil/daypart/B/E)
    with       (srel/after/time/2400/E)
id  []
ip  [].

1494 rule 
is  replaceall (B isa noon, srel/nil/daypart/B/E)
    with       (srel/after/time/1200/E)
id  []
ip  [].


1513 rule 
is  replaceall (B isa afternoon, srel/nil/daypart/B/E) 
    with       (srel/after/time/1200/E) %% ,srel/before/time/1900/E) NB afternoon syndrom
id  []                                  %% causes arrivals  1200 - 1800 to be neglected
ip  [].

1514 rule  %%  på ettermiddagen etc
is  replaceall (B isa afternoon, srel/on/afternoon/B/E) 
    with       (srel/after/time/1200/E) %% ,srel/before/time/1900/E) %% afternoon syndrom
id  []
ip  [].


%% Tuesday afternoon MEANS Tuesday  12-19
                                                  
aftnoon rule 
is  replaceall (C isa afternoon,srel/nil/daypart/C/E)
    with       (srel/after/time/1200/E) 
id  []
ip  [].


468 rule
is  replaceall (srel/in_afternoon/time/nil/E) %% = afternoon
    with       (1200 isa clock,1900 isa clock,
                srel/after/time/1200/E)
id  []
ip  [].


% i rushtiden betyr mellom 1600 og 1800 

105 rule 
is  replaceall (R isa rush_hour,srel/in/time/R/E) %% verb modifier
    with       (srel/after/time/1600/E,srel/before/time/1800/E)
id  []
ip  [].

% i rushtiden betyr mellom 1600 og 1800 
% ettermiddagen  MEANS  after 1200 

% kvelden MEANS om kvelden 
%% Maybe only use kvelden do distinguish from morning
%% Don't squeeze the time



innight1 rule 
is  replaceall (srel/in_night/time/nil/E)
    with       (1800 isa clock,srel/after/time/1800/E),
    not  present srel/_/clock/_/_  
id  []
ip  [].

innight2 rule % resten av kvelden
is  replaceall (X isa night,srel/after/time/X/E)
    with       (1800 isa clock,srel/after/time/1800/E),
    not  present srel/_/clock/_/_  
id  []
ip  [].

% natten  MEANS etter 2400  

twelvemidnight rule %% VERY FUZZY %% TA-010502
is  replaceall (srel/in_midnight/time/nil/E,srel/After/time/Twelve/E)
    with       (srel/After/time/Twentyfour/E),
    not present srel/before/time/_/_   %% probably an early morning time
id  []
ip  Twelve > 6, Twelve < 1300,Twentyfour is Twelve+1200. 

417 rule 
is  replaceall (srel/in_midnight/time/nil/E)
    with       (2400 isa clock,srel/after/time/2400/E),
    not present srel/before/time/_/_   %% probably an early morning time
id  []
ip  [].


418 rule
is  replaceall (X isa midnight,srel/on/_time/X/E)
    with       (2400 isa clock,srel/after/time/2400/E),
    not present srel/before/time/_/_   %% probably an early morning time
id  []
ip  [].



% natt til Sunday MEANS Saturday natt %% Norwagism
% This is a bit tricky because of the semantics of have

152 rule 
is  context C isa midnight,
    replaceall (B isa Sunday, has/day/midnight/B/C, srel/nil/daypart/D/E)
    with       (D isa Saturday, srel/nil/daypart/D/E)

id  []
ip  daysucc(Saturday,Sunday).



% NATT is translated to midnight

% umpday  midnight  MEANS umpday after 2400 

153 rule 
is  replaceall (C isa midnight, srel/PREP/time/C/E )
    with       (2400 isa time,  srel/PREP/time/2400/E)
id  []
ip  dmeq(timeprep,PREP).


154 rule 
is  replaceall (C isa noon, srel/PREP/time/C/E )
    with       (1200 isa time,  srel/PREP/time/1200/E)
id  []
ip  dmeq(timeprep,PREP).


midnight024 rule
is  replaceall (0 isa clock,srel/before/X/0/E)
    with       (2400 isa clock, srel/before/X/2400/E)
id  []
ip  [].


% % % % % % % % % % % % % % % % % % % -



%% a bus connects a place with a place MEANS ...  connect

108 rule 
is  context B52 isa bus,
    replaceall  (connect/B52/A/E, event/real/E, srel/with/PLACE/B/E)
    with        (go/B52 /E, event/real/E, srel/from/place/A/E, srel/to/place/B/E)
id  []
ip  dmeq(place,PLACE).



%% end stop   END station  

109 rule 
is  replaceall (S isa PLACE,adj/end/S/_)
    with       (S isa endstation)
id  []
ip  dmeq(place,PLACE).





%% what is the route of bus 52 MEANS which station does 52 pass 

110 rule 
is  replaceall (which(R),B52 isa bus,R isa route,has/bus/route/B52/R,event/real/B)

    with       (which(F0),B52 isa bus,F0 isa station,pass/B52/F0/B,event/real/B)     
                                  
id  []
ip  newfree(F0).


%% Same rule, but with a variant due to the BUS/ROUTE syndrome

111 rule 
is  replaceall (which(R),B52 isa bus,R isa route,has/bus/route/R/B52,event/real/B)
                                                               %%%%%
    with       (which(A),B52 isa bus,A isa station,pass/B52/A/B,event/real/B)     

id  []
ip  newfree(A).


% be present at means go to
149 rule 
is  replaceall (adj/present/IBus/E,srel/at/place/U/E)  
    with       (go/IBus/E,srel/to/place/U/E)
id  []
ip  [].

%  be present MEANS be 

150 rule 
is  replaceall (adj/present/Bus/B)  %% ELIMINATES BE FREE
    with       (be1/Bus/B)
id  []
ip  [].

bemissing rule %% adj/next/A/E ==> be1/A/E,  adj/next/A/E %% Hack 
is  context adj/Present/Bus/E,
    not be1/Bus/E,
    not run/Bus/E,  %% TA-010205 ?
    not go/Bus/E,   %% TA-010205 ?
    add be1/Bus/E
 
id  []
ip  dmeq([next,best],Present).


begofore rule %% TA-011009
is  replaceall (VEH isa BV,be1/VEH/E,srel/BEFORE/time/T0/E)
 
    with       (VEH isa BV,go/VEH/E,srel/before/time/T0/E)
id  []
ip  dmeq(beforenil,BEFORE) ,
    dmeq(busdeparr,BV).  %% not to  destroy "which departures are" 

freeride rule %% is it free to   %%  UGLY
is  removeall (A isa activity,
               adj/free/it/C,event/real/C,srel/in_order_to/thing/A/C,
               srel/being_the/activity/A/D,event/real/D)
id  add ticketprice(_)
ip  [].


poss3 rule  %% ticket  sufficient
is  _ isa ticket, adj/sufficient/_/_
id  add ticketprice(_)
ip  [].



poss4 rule %% is it expensive to 
is  removeall (adj/expensive/_IT/_)
id  add ticketprice(_)
ip  [].


%% does station exist


exist2 rule % moved in front because exist1 was generalized 
is  context  test,
    replaceall (exist/Studentersamfundet/A,event/real/A,Studentersamfundet isa Station)
    with         (be1/Studentersamfundet/A,event/real/A,Studentersamfundet isa Station)
id  []
ip  bound(Studentersamfundet).  %% TA-011031



existbe rule
is replaceall exist/G/F
   with       be1/G/F
id []
ip bound(G). %% EXPERIMENT


%% A bus Starts from P MEANS  The bus has end station at P  

113 rule 
is  replaceall  (B52 isa Bus,start/B52/B,srel/from/place/A/B,A isa place)
    with        (B52 isa Bus,has/_/endstation/B52/A,A isa endstation)
id  []
ip  dmeq(vehicle,Bus). 


%% A bus Starts at P MEANS  The bus has end station at P 

114 rule 
is  replaceall  (start/B52/B,B52 isa Bus,srel/in/place/A/B)
    with        (B52 isa Bus,has/vehicle/endstation/B52/A) 
id  []
ip  dmeq(vehicle,Bus).

115 rule 
is  replaceall  (end/B52/B,B52 isa Bus,srel/in/place/A/B) 
    with        (B52 isa Bus,has/vehicle/endstation/B52/A)
id  []
ip  dmeq(vehicle,Bus). 



%% after Thursday at 1900 MEANS  on Thursday after 1900 

117 rule 
is replaceall (B isa Thursday,srel/after/time/B/C,srel/ATTIME/time/T1900/C)
   with       (srel/after/time/T1900/C, B isa thursday, srel/on/time/B/C)
id []
ip dmeq(attime,ATTIME),dmeq(mtwtfss,Thursday).


%% before Thursday at 1900 MEANS  on Thursday before 1900 

118 rule 
is replaceall (B isa Thursday,srel/before/time/B/C,srel/ATTIME/time/T1900/C)
   with       (srel/before/time/T1900/C, B isa Thursday,srel/on/time/B/C)
id []
ip dmeq(attime,ATTIME),dmeq(mtwtfss,Thursday).


%% This is a specialised rule change  the 'at times' to either
%  before or after, depending on whether the station is from or to.


 % Example %  from dragvoll at 1200  to nardo at 1300 

119 rule 
is replaceall (srel/from/place/Dragvoll/E1,srel/ATTIME1/time/T1200/E1,
               srel/ONTO/place/Nardo/E2,srel/ATTIME2/time/T1300/E2)

   with       (srel/from/place/Dragvoll/E1,srel/after/time/T1200/E1,
               srel/to/place/Nardo/E2,srel/before/time/T1300/E2)

id []
ip dmeq(by,ONTO),dmeq(attime,ATTIME1),dmeq(attime,ATTIME2).


%  when from dragvoll   in_order_to be at nardo at 1300 




someonetake  rule %%  TA-001116 % after inorder1
is  replaceall (B isa person,  C isa BR, Take/B/C/D)
    with       (C isa BR, go/C/D)  
id  [] 
ip  dmeq([take,reach,get,receive,find],Take), %% TA-001112
    dmeq(vehicle,BR). %% not meeting  reach meeting \= reach train %% TA-001111

icantake  rule %%   after inorder1
is  replaceall (B isa self,  C isa BR, Take/B/C/D)
    with       ( %% B isa self,    %% confueses toplaceobviously %% TA-001019
                C isa BR, go/C/D)  %% B isa self is necessary for subtle reasons 
id  [] 
ip  dmeq([take,reach,get,receive,find],Take), %% TA-001112
    dmeq(vehicle,BR). %% not meeting  reach meeting \= reach train %% TA-001111

icancorrespond  rule %%  after inorder1
is  replaceall (B isa self,C isa bus,correspond/B/D,srel/with/vehicle/C/D)
    with       (C isa bus,go/C/D)
id  []
ip  [].


% do you have a X   MEANS  which X are there

116 rule 
is replaceall (test,tuc isa program,has/agent/Bus/tuc/A,A isa Bus,event/real/_)
   with       (which(A),A isa Bus,exist/A/S) %% har dere gassbusser ->
id []           %% hva er en gassbuss   NOT INTENDED
ip newfree(S), \+ dmeq([telephone],Bus).


%% to have a frequency MEANS to pass with frequency

122 rule 
is replaceall 
        (which(A),B52 isa BR, has/Vehicle/frequency/B52/A,event/real/B,
            A isa frequency)
   with 
        (which(A),B52 isa BR, pass/B52/B, event/real/B, srel/with/frequency/A/B,
           A isa frequency)

id []
ip dmeq(busdeparr,BR), 
   dmeq([bus,vehicle,departure],Vehicle).



%% describe X  MEANS what is the class/superclass

describe rule 
is (tuc isa program,C isa _Clock,describe/tuc/C/E,event/real/E),clear
id clear, add message(answer((bcpbc(D))))
ip description(C,D). 

describe0 rule   %% Dummy, but 2 tuc is coerced
is (tuc isa program,describe/tuc/C/E,event/real/E),clear
id clear, add message(answer((bcpbc(D))))
ip description(C,D). 

%% which X does TT have  MEANS  which X 

125 rule 
is replaceall (tt isa company,has/company/bus/tt/A,event/real/E)
   with       (be1/A/E,event/real/E)
id []
ip [].



%% will tuc let me see IT  MEANS what is IT

126 rule 
is replaceall (test,tuc isa program,let/id/that/tuc/A/B,event/real/B,
               C isa self,see/C/D/E,event/A/E)
   with       (which(D))

id []
ip [].

%%  let me see IT  MEANS what is IT 

127 rule 
is replaceall (do,tuc isa program,let/id/that/tuc/A/B,event/real/B,
               C isa self,see/C/D/E,event/A/E)
   with       (which(D))

id []
ip [].




%% full list MEANS list   list ===> information ...

453 rule 
is replaceall (B isa information,adj/whole/B/_)
   with       (B isa information)
id []
ip [].

listinformation1  rule %% Kan jeg få listet
is  

    replaceall  (test, B52 isa route,A isa self,list/A/B52/B,event/real/B)
     with       (do,   B52 isa route,tuc isa program,LIST/tuc/B52/B,event/real/B)

id  []
ip  dmeq(information,LIST). 

listinformation2  rule 
is  % context tuc isa program,
    replaceall ( F53 isa Information, be1/F53/E, 
                 srel/OVER/thing/F52/E,event/real/E,
                 LIST/_tuc/F53/F54)

    with       ( list/tuc/F52/F54)
id  []
ip  dmeq(list,LIST),dmeq(information,Information),dmeq(about,OVER).


listinformation3  rule %%   What is information about
is  replaceall ( which(F53),F53 isa Information, be1/F53/E, 
                 srel/OVER/thing/F52/E,event/real/_E)

    with       ( do,list/tuc/F52/F54,event/real/F54)
id  []
ip  dmeq(information,Information),dmeq(about,OVER),newfree(F54). 


listinformation4  rule %%  Have you  information about
is  replaceall ( new,F53 isa Information, has/agent/information/_I/F53,
                 srel/OVER/thing/F52/E,event/real/E)

    with       ( do,list/tuc/F52/F54,event/real/F54)
id  []
ip  dmeq(information,Information),dmeq(about,OVER),newfree(F54). 





% info1, info2 moved after listinformation rules

info1 rule %% This is a default rule  nrel -> srel
is replaceall (which(A),A isa information,F isa Boo,
                          be1/A/E,srel/ABOUT/thing/F/E)
   with       (do,tuc isa program,describe/tuc/Boo/E,event/real/E)

id []
ip dmeq(about,ABOUT).

info2 rule %% This is a default rule  nrel -> srel
is replaceall (which(A),A isa information,
                          be1/A/E,srel/ABOUT/thing/NTH/E)
   with       (do,tuc isa program,describe/tuc/NTH/E,event/real/E)

id []
ip dmeq(about,ABOUT),bound(NTH). 




infobus rule  %% This is a default rule  nrel -> srel
is replaceall (which(A),A isa information,F isa bus,
                          be1/A/E,srel/ABOUT/thing/F/E)
   with       (which(A),A isa route,F isa bus,
                          be1/A/E,srel/for/bus/F/E) 

id []
ip dmeq(about,ABOUT).


%% shall be in MEANS shall (go) to  IF there is a from 

461 rule 
is context    (srel/from/place/Moholt/E1,event/real/E1),
   replaceall (srel/in/place/Sentrum/E2,srel/AT/time/Time/E2)
   with       (srel/to/place/Sentrum/E2,srel/before/time/Time/E2)
id []
ip dmeq(attime,AT),\+ (Moholt = Sentrum).


%% shall be in MEANS shall (go) from  IF there is a to 

129 rule 
is context    (srel/to/place/Moholt/E1,event/real/E1),
   replaceall (srel/BY/place/Sentrum/E2,srel/AT/time/Time/E2)
   with       (srel/BY/place/Sentrum/E2,srel/after/time/Time/E2) %% Neutral w.r.t. ignorevia1
id [] 
ip dmeq(by,BY),dmeq(attime,AT),\+ (Moholt = Sentrum).



%% to  place at clock MEANS to place before time  %% (before fromattime)

toattime rule 
is  context   Time isa clock,
    replaceall (srel/to/place/Sentrum/E2,srel/AT/time/Time/E2)
    with       (srel/to/place/Sentrum/E2,srel/before/time/Time/E2)
%    not         srel/from/place/_/E2
id  []
ip  dmeq(attime,AT).


%% from place at clock MEANS from place after time  
%%  NB  but only the first after !!!

fromattime rule  
is  context   Time isa clock, 
    replaceall (srel/from/place/Sentrum/E2,srel/AT/time/Time/E2)     %% (
    with       (srel/from/place/Sentrum/E2,srel/after/time/Time/E2), %% )
    not         srel/to/place/_/E2,
    not         present pass/_/_/_       %% etc ad nauseam 


id  []
ip  dmeq(attime,AT).




%% give me that MEANS give

132 rule 
is %% context (tuc isa program),
   replaceall (I isa self,srel/to/agent/I/E, Give/_tuc/X/E) %% Give/tuc De = de = du = tuc
   with       (show/tuc/X/E)                             %% 
id []
ip dmeq(show,Give).


%% show BusNR MEANS   when does the bus go
   
945 rule 
is %%   context tuc isa program,
   replaceall (DO,Give/_tuc/X/E,event/real/E) 
   with 

    (which(F0),X isa route,go/X/E,event/real/E,srel/in/place/F0/E)


id []
ip dmeq(do,DO), %%  do or vanyoudo
   dmeq(show,Give),exbus(X),newfree(F0). 


%% show X MEANS which X


%%  a information of that  MEANS  that 



134 rule
is replaceall ( which(L),L isa Info, be1/L/E,srel/Over/X/E)
   with         which(X)
id []
ip dmeq(about,Over),dmeq(information,Info).


% hvilke XX  vet du om  MEANS what is 

nixon  rule %% knowthing may ne intransitive
is  replaceall (which(B),tuc isa program,knowthing/tuc/C, %% intransitive
                srel/regarding/thing/B/C) 
    with       (which(B))
id  []
ip  [].

clinton  rule
is  replaceall (which(A),tuc isa program,knowthing/tuc/A/C,srel/regarding/thing/B/C)
    with       (which(B))
id  []
ip  [].

lewinsky rule 
is replaceall
              ( which(A),tuc isa program,
                knowthing/tuc/A/B,        %% Normal
                event/real/B,srel/regarding/thing/X/B)
    with      (which(X))

id []
ip [].

% hva vet du om  MEANS what is 

starr rule    %%  vet du noe om
is replaceall
              ( test,tuc isa program,
                knowthing/tuc/_A/B,  %% Normal %% Wrong code here ? know (thing)( about B)

                event/real/B,srel/regarding/thing/X/B) %% about
    with      (which(X))

id []
ip [].




% jeg vil vite noe om  MEANS what is 

% kan jeg få opplysninger om  MEANS what is


760 rule % the route of the route (bus) %% PANIC
is  replaceall ( which(R),has/bus/route/B48/R, B48 isa route,R isa route,event/real/E)
    with       ( which(F0), B48 isa route,stop/B48/E,
                 srel/in/place/F0/E,event/real/E)
id  []
ip  newfree(F0). 


761 rule % the route for the route (bus)
is  replaceall (which(R),B48 isa route,be1/R/E,event/real/E,R isa route,srel/for/route/B48/E)
    with       (which(F0), B48 isa route,stop/B48/E,
                srel/in/place/F0/E,event/real/E)
id  []
ip  newfree(F0). 



% I want to see MEANS see

wannasee rule 
is replaceall (A isa self,want/id/that/A/B/C,event/real/C,See/A/D/E,event/B/E)
   with       (A isa self,See/A/D/E,event/real/E),
   D isa X %% X not a place
id []
ip dmeq([see,receive],See), 
   dmeq([bus,route,route_plan],X).

isee rule 
is  replaceall  (new,A isa self,SEE/A/B/C ,  B isa X )
    with        (do,tuc isa program,list/tuc/B/C,  B isa X )

id  []
ip  dmeq(see,SEE),
    dmeq([bus,route,route_plan],X). 

canisee0 rule  %% moved after wannasee  %% TA-001110
is  replaceall  (test,A isa self,SEE/A/B/_C,B isa X) 
    with        (which(B),B isa X)  
id  []
ip  dmeq(see,SEE),
    dmeq([bus,route,route_plan,departure],X).


canisee rule  %% moved after wannasee %%
is  replaceall  (A isa self,SEE/A/B/C,B isa X)
    with        (tuc isa program,list/tuc/B/C,B isa X)
id  []
ip  dmeq(see,SEE),
    dmeq([bus,route,route_plan,departure],X).




% I want  MEANS what is

iwant  rule 
is replaceall (new, B isa self, want/B/A/D,A isa Thing,event/real/D)
   with       (which(A),A isa Thing), 
   not (A isa help)  %% i want help %% TA-001204
id []
ip \+dmeq([information,money],Thing), %% TA-011021
    unbound(A).  %% I want you *



%% list all stations MEANS what is a station ?

139 rule
is
   replaceall (do,tuc isa program, LIST/tuc/S52/X, S52 isa Station,event/real/X)
   with       (which(S52),S52 isa Station)

id []
ip dmeq(list,LIST),
   dmeq([station,arrival,price],Station). %% stopp = arrival %% TA-010219



%% list busroute 20 MEANS where does bus 20 go 

listbus  rule 
is  context  B52 isa BR,

    replaceall (do,tuc isa program,LIST/tuc/B52/X,event/real/X) 
    with       (which(A),go/B52/B,event/real/B,srel/in/place/A/B,A isa place)

id  []
ip dmeq(list,LIST),dmeq(bus,BR),bound(B52),
   newfree(A). %% for gods sake 




%% Trondheim rules 

trondheim1 rule
is  removeall   (Trondheim isa city,nrel/_/bus/CP/_/Trondheim)
id  []       
ip  dmeq([city,place],CP),
    home_town(Trondheim).  %% TA-001213


trondheim3 rule 
is removeall (Trondheim isa city, srel/in/_/Trondheim/_ ) %% in/for
id []
ip home_town(Trondheim).  %% TA-001213

trondheim4 rule 
is removeall (Trondheim isa city, srel/for/_/Trondheim/_ ) %% in/for
id []
ip home_town(Trondheim).  %% TA-001213

trondheim5 rule
is removeall (Trondheim isa city, has/city/route/Trondheim/_)
id []
ip home_town(Trondheim).  %% TA-001213

trondheim5 rule %% TA-001113
is removeall (byen isa neighbourhood, srel/in/neighbourhood/byen/_)
id []
ip [].

%% .....




%% directroute  MEANS  direct route 

143 rule 
is replaceall (X isa directroute) 
   with       (X isa route, adj/direct/X/_)
id []
ip [].


%% more than N departures ==> how many departures


%% our bus routes are always the best :-)

bestnext rule 
is context A isa BUSROUTE,
   replaceall adj/BEST/A/B
   with       adj/next/A/B
id []
ip dmeq([bus,route,way],BUSROUTE),dmeq(dummy,BEST). 



636 rule
is context (A isa time,B52 isa bus,event/real/B), 
   replaceall (be1/A/B,srel/for/vehicle/B52/B)
   with       (has/bus/departure/B52/A)
id []
ip [].



% Vis bussavganger for rute  5 MEANS vis bussavgangene til rute 5 


% which route does bus 9 have MEANS which places does bus 9 pass



%% bus between A and B MEANS bus from A to B 

%% (go) between A and B MEANS (go) from A to B


betweenplace  rule 
    
is  replaceall (srel/BETWEEN/place/(P1,P2)/E)
    with       (srel/from/place/P1/E, srel/to/place/P2/E)

id  []

ip  dmeq(between,BETWEEN). % dmeq(bepass,PASS)


%% (go) between TimeA and TimeB MEANS go after TimeA before TimeB 


betweentime rule 
is  replaceall (srel/BETWEEN/Time/(T1,T2)/E) 
    with       (srel/after/time/T11/E, srel/before/time/T22/E)
id  []
ip  dmeq([between,around,in],BETWEEN),
    dmeq(timeclock,Time), 
    sorttimes(T1,T2,T11,T22). 


afternow rule %% TA-010718
is  replaceall (srel/after/time/now/E)
    with       (srel/hereafter/time/nil/E)
id  []
ip  [].


%% pass P between TimeA MEANS pass P around TimeA 

betweenwhat1 rule 
is  context pass/_/_/E, 
    replaceall (srel/between/time/T1/E) 
    with       (srel/after/time/T1/E) %% single between,  (between 1330 to 1600) %% around

id  []
ip  [].

betweenwhat2 rule 
is  context go/_/E, 
    replaceall (srel/between/time/T1/E) 
    with       (srel/after/time/T1/E) %% single between,  (between 1330 to 1600) %% around

id  []
ip  [].


%% tuc has a bus MEANS there exists a bus 

646 rule
is  context (A isa BR1),
    removeall (tuc isa program,has/agent/BR2/tuc/A)
id  []
ip  dmeq(bus,BR1),dmeq(bus,BR2). 


647 rule 
is  context (A isa bus),
    replaceall (tuc isa program,has/agent/bus/tuc/A)
    with       (be1/A)
id  []
ip  [].


%% how many minutes MEANS  how long time

157 rule 
is replaceall (howmany(A), A isa Minute)
   with       (which(A),   A isa time)
id []
ip dmeq([minute,hour,second],Minute). %% NOT DAY 


%% next day MEANS tomorrow  

158 rule 
is  replaceall (B isa day,adj/next/B/C)
    with       (srel/tomorrow/day/nil/C)    
id  []
ip  [].



%% Imorgen tidlig  MEANS tomorrow  before 0900
%% BUT NOT LATEST BEFORE 9 FOR GODS SAKE !!!


earlyatclock rule  %% if clock, early is just dummy 
is  replaceall (srel/early/time/nil/_E, %% Stunt makes havoc on E 
                srel/before/time/T0/E)  %% TA-011009
    with       (srel/before/time/T0/E)
id  []
ip  [].

 
earlyinthemorning rule %% TA-010322
is  replaceall (srel/early/time/nil/E,srel/in_morning/time/nil/E)
    with       (srel/after/time/0500/E)
id  []
ip  [].
 

early rule 
is  replaceall (srel/early/time/nil/E)
    with       (srel/after/time/0500/E)
id  []
ip  [].




% buses on Sunday MEANS buses that go on Sunday 

% how many times does a bus go MEANS how many buses go 

163 rule 
is context B isa bus,
   replaceall (howmany(A),A isa time,go/B/E,srel/in/time/A/E)
   with       (howmany(B),go/B/E)
id []
ip [].


%  A bus goes without transfer MEANS A bus goes directly

164 rule 
is context    A isa bus, go/A/C,
   replaceall (B isa transfer, srel/without/transfer/B/C)
   with       (srel/directly/mode/nil/C)
id []
ip [].

%  A bus goes transfer MEANS A bus goes directly

notransferinfo rule 
is _X isa transfer,clear %% TA-010529
id clear,addfront(message(noinfoabout(transfer)))
ip [].

    

%  I take a bus and is on a place MEANS  the bus passes the place.

165 rule 
is context    (B isa self,take/B/_/_),
   replaceall (BE/B/E, srel/on/place/NTH/E)
   with       pass/B/NTH/E
id []
ip dmeq(stand,BE).


166 rule 
is replaceall (adj/NEAR/A/B,srel/to/place/NTH/B)  % close = close to
   with       (be1/A/B, srel/NEAR/place/NTH/B)   
id []
ip dmeq(near,NEAR).


167 rule 
is replace srel/downtown/mode/nil/E with 
           (srel/to/place/sentrum/E) 
id []
ip [].




% "each hour"  means "how often"

168 rule 
is  context   
     (howmany(F1), F1 isa bus, F3 isa hour, event/real/F2, srel/IN/time/F3/F2 ),

    replaceall (howmany(F1),F3 isa hour,srel/IN/time/F3/F2)
    with       (which(F0),  srel/with/frequency/F0/F2)
id []
ip dmeq(intime,IN),newfree(F0). 




whichbusesdyk rule % Goddag mann 
is  which(A),     A isa bus,
    tuc isa program,
    knowthing/tuc/A/B, event/real/B 
id  add allbuses(_)
ip  [].

whatcanyou rule
is replaceall (test,tuc isa program ,CAN/tuc/A/B, event/real/B, A isa Lan)
   with        which(A)
id []
ip dmeq(can,CAN), bound(A),         %%   " Kan du noe "
   \+ member([language,self],Lan).  %% TA-010925

%% Do I know  (" få vite ")

1702 rule 
is replaceall ( I isa self ,knowthing/I/A/B ,event/real/B,test )
   with      which(A)
id []
ip [].

% "Do you know whether... " is superflous ( ..when .. is not superfluous

1703 rule 
is removeall (tuc isa program ,know/id/whether/tuc/_/B, event/real/B) % whether
id []
ip [].


% show up means pass 

1704 rule 
is remove srel/up/place/nil/B,
   replace show/A/B with pass/A/B

id []
ip [].



% "be possible" is the same as go

possibletogo  rule %% TA-010125
is replaceall   (adj/Possible/it/_,go/it/B)  
   with ('I' isa self,go/'I'/B) 
id []
ip dmeq([possible,easy],Possible).



% get rid of bus in bus station
% NB context is a new operator, just check, no mark seen

1706 rule 
is context A isa station, remove adj/bus/A/_ 
id []
ip [].



% centre of city - > sentrum
1707 rule 
is  has/city/centre/_/D, %%  ( centre )
	 replace srel/TOFROMBY/place/D/A with srel/TOFROMBY/place/sentrum/A
id  []
ip  dmeq(tofromby,TOFROMBY),unbound(D). %% dmeq first !!!



%%%%%%% END OF SOURCE TO SOURCE SECTION %%%%% %%%%%%%%%%%%


%%%%%%%%%%%%
% We need to remember if a departure is "from" or "to", to store it in the
% context. Now it's gone when passevent is removed (coupled)

%%<single>
fledsbo1 rule
is []
id present departure(Bus,Place,Day,Depset1),
   present passevent(Depset2,Bus,Place,Opts,Day,_),
   not depset(from, _),
   add depset(from, [Depset1])
ip Depset1 == Depset2,
   user:value(dialog,1), member(from, Opts).

fledsbo2 rule
is []
id present departure(Bus,Place,Day,Depset1),
   present passevent(Depset2,Bus,Place,Opts,Day,_),
   not depset(to, _),
   add depset(to, [Depset1])
ip Depset1 == Depset2,
   user:value(dialog,1), member(to, Opts).

fledsbo3 rule
is []
id present departure(_,_,_,Depset1),
   present coupled(Depset2,_,_,_,_,_,_,_),
   not depset(from, _),
   add depset(from, [Depset1])
ip user:value(dialog,1), Depset1 == Depset2.


fledsbo4 rule
is []
id present departure(_,_,_,Depset1),
   present coupled(_,Depset2,_,_,_,_,_,_),
   not depset(to, _),
   add depset(to, [Depset1])
ip user:value(dialog,1), Depset1 == Depset2.

fledsbo5 rule
is []
id present keepafter(_, Dep1, Dep2),
   remove depset(Dir, List),
   add depset(Dir, [Dep2 | List])
ip user:value(dialog,1), varmember(Dep1, List),
   \+ varmember(Dep2, List).

fledsbo6 rule
is []
id present keepbefore(_, Dep1, Dep2),
   remove depset(Dir, List),
   add depset(Dir, [Dep2 | List])
ip user:value(dialog,1), varmember(Dep1, List),
   \+ varmember(Dep2, List).

fledsbo7 rule
is []
id present keepbetween(_,_, Dep1, Dep2),
   remove depset(Dir, List),
   add depset(Dir, [Dep2 | List])
ip user:value(dialog,1), varmember(Dep1, List),
   \+ varmember(Dep2, List).

%%</single>



%% Must control  if user wants buses or departures

% List the buses
1175  rule 
is  exactly (do,tuc isa program,Bus isa BR,List/tuc/Bus/E,event/real/E)
id	 add allbuses(_)
ip  dmeq([bus,route,number],BR),
    unbound(Bus),dmeq([give,list,show,find],List). 

% Which buses are there? / What is a bus
1176 rule 
is  exactly (which(Bus),Bus isa BR)
id	 add allbuses(_)
ip  dmeq(bus,BR),unbound(Bus). 




% Which buses are there?  
1182 rule 
is  exactly (which(Bus),Bus isa BR, event/real/_)
id	 add allbuses(_)
ip  dmeq(bus,BR),unbound(Bus). 


% Which buses are there? 
1188 rule 
is  exactly (which(Bus),Bus isa BR, be1/Bus/A,event/real/A)
id	 add allbuses(_)
ip  dmeq(bus,BR),unbound(Bus).  

% Which numbers do the buses have ? 
1189 rule 
is  exactly (which(A),A isa number,B isa BR,has/bus/number/B/A,event/real/_)
id	 add allbuses(_)
ip  dmeq(bus,BR),unbound(B).  


% Howmany buses goes? 
howmanybuses rule 
is  exactly (howmany(Bus),Bus isa bus,PASS/Bus/E,event/real/E)
id	 add (allbuses(M),
         numberof(busroutes,M,_)) 
ip  dmeq(bepass,PASS).

% How many stations are there? %% TA-010302
howmanystations1 rule 
is  exactly (howmany(St),St isa station, be1/St/A,event/real/A)
id	 add (allstations(M),
         numberof(stations,M,_)) 
ip  [].

% How many stations have ...? %% TA-010302
howmanystations2 rule 
is  exactly (howmany(ST ),ST isa station,TT isa Company,has/Company/station/TT/ST ,event/real/_)
id	 add (allstations(M),
         numberof(stations,M,_)) 
ip  [].




% Which buses are there?  %% (be1 is no longer suppressed)
171 rule 
is  exactly (which(Bus),Bus isa BR, be1/Bus/A,event/real/A)
id	 add allbuses(_)
ip  dmeq(bus,BR).


% How many buses are there  ?  %% (be1 is no longer suppressed)
172 rule 
is  howmany(Bus),Bus isa bus,
    BE/Bus/A,event/real/A,
    not srel/in/day/_/_,  %% frequency ?  % before next:
    srel/in/_place/_/A %% in system etc 
id	 add (allbuses(M),numberof(busroutes,M,_))
ip  dmeq(exist,BE).


% How many buses have you (after transform)  ?  
173 rule 
is  howmany(Bus),Bus isa bus,
    not present go/_/_,   
    not present pass/_/_/_,
    not present drive/_/_   %% TA-001115
id  add (allbuses(M),numberof(busroutes,M,_))
ip  [].



% Which buses are there in ...?  %% (be1 is no longer suppressed)
174 rule 
is  exactly (which(Bus),Bus isa bus, be1/Bus/A,event/real/A,srel/in/place/_/A)
id	 add allbuses(_)
ip  [].

% Which buses goes?  
175 rule 
is  exactly (which(Bus),Bus isa bus,PASS/Bus/E,event/real/E)
id	 add allbuses(_)
ip  dmeq(bepass,PASS).



%%%%% Irrelevante opplysninger %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% No information about delays etc. 

irregular rule %% TA-010117
is  srel/regularly/time/_/_  
id  addcon(message(noinfoabout(irregularity)))
ip  [].


cancel rule %% TA-010901
is  cancel/_/_/_
id  addcon(message(noinfoabout(irregularity)))
ip  [].


delay3 rule 
is  adj/delayed/_/_  
id  addcon(message(noinfoabout(delays)))
ip  [].



delay4 rule 
is  adj/late/_/_  
id  addcon(message(noinfoabout(delays)))
ip  [].



delay5 rule 
is  _ isa delay
id  addcon(message(noinfoabout(delays)))
ip  [].


delay6 rule  
is  adj/punctual/_/_  
id  addcon(message(noinfoabout(delays)))
ip  [].

delay7 rule
is  srel/punctually/time/_/_  
id  addcon(message(noinfoabout(delays)))
ip  [].

delay8 rule
is  srel/normally/time/_/_  %% reductant ??
id  addcon(message(noinfoabout(delays)))
ip  [].


/*  Wait does not mean delay , but when %% TA-011030

delay9 rule
is  wait/_/_
id  addcon(message(noinfoabout(delays)))
ip  [].

*/


delay10 rule 
is  srel/late/_/_/_  
id  addcon(message(noinfoabout(delays)))
ip  [].



corresponding1 rule 
is  present Bus isa bus,adj/corresponding/Bus/_
id	 addcon message(nocorresponse) 
ip  [].


corresponding2 rule 
is  present Bus isa BR, correspond/Bus/_
id	 addcon message(nocorresponse) 
ip  dmeq([bus,route],BR). 


% <Colour> bus   %% changed color ==> colour for language consistency
colour1 rule 
is  present Bus isa BR,has/object/colour/Bus/_
id	 addcon message(irrelevant(colour(bus))) 
ip	 dmeq(bus,BR). 

colour2 rule 
is  present Bus isa BR,adj/Colour/Bus/_
id	 addcon message(irrelevant(colour(bus))) 
ip  dmeq(colour,Colour),dmeq(bus,BR).

colour4 rule 
is  present _ isa colour , _Bus isa BR  %% what colour is the bus
id	 addcon message(irrelevant(colour(bus))) 
ip  dmeq(vehicle,BR).


speed2 rule 
is  has/_/speed/_/__ isa speed
id	 addcon  message(noinfoabout(speed))
ip  [].

distance rule
is  srel/with/distance/_/_
id	 addcon  message(noinfoabout(distance))
ip  [].

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                     %
%------  NO id above This line, except add message              ------%
%                                                                     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

calltmn1  rule 
is  which(A),A isa place,I isa Self, call/I/A/_  %% TMN
id  clear,
    add (has_att_val(company,telephone,tmn,K),
    message(answer(db_reply(tmn,telephone,K))))
ip  dmeq([self,program],Self).

calltmn2  rule
is  which(A),A isa place,I isa Self, turn/I/E, srel/in/place/A/E %% TMN 
id  clear,
    add (has_att_val(company,telephone,tmn,K),
    message(answer(db_reply(tmn,telephone,K)))) 
ip  dmeq([self,program],Self).


%%%% AIRBUS / AIRPORT SECTION


%% Flybussen/Flyplassen has a web address 

%% fly_buss --> fly buss -> plane bus 
2747  rule 
is  adj/airplane/_/_   %% TA-011004 
id	 clear, 
    add   (has_att_val(company,webaddress,flybussen,K), 
           message(answer(db_reply(flybussen,webaddress,K))))
ip  internal_airbus(false). %% busdat.pl %% TA-001215


%%  airport 
airport1  rule 
is  _ isa airbus,clear
id	 clear, 
    add (message(noinfoabout(airbus)),
         has_att_val(company,webaddress,flybussen,K), 
         message(answer(db_reply(flybussen,webaddress,K))))
ip  internal_airbus(false). %% busdat.pl %% TA-001215 

%%  airport værnes 
airport2  rule 
is  Værnes isa airport,
    clear %% værnes, not gardermoen 
id	 clear, 
    add (has_att_val(company,webaddress,flybussen,K), 
         message(answer(db_reply(flybussen,webaddress,K)))) 
ip  internal_airbus(false), %% busdat.pl %% TA-001215 
    (Værnes == værnes; unbound(Værnes)). %% TA-011004

%%  airport  
airport3  rule 
is  FLY isa neighbourhood, clear 
id	 clear, 
    add (has_att_val(company,webaddress,flybussen,K), 
         message(answer(db_reply(flybussen,webaddress,K))))
ip  internal_airbus(false),airbusstation(FLY). %% TA-001215

%%  airport  
airport4  rule 
is  X isa airplane, srel/_/airplane/X/_ ,clear %% TA-011005
id	 clear, 
    add (has_att_val(company,webaddress,flybussen,K), 
         message(answer(db_reply(flybussen,webaddress,K))))
ip  internal_airbus(false).



%%% End Airport Section

%%%%%%%%

unkstreetstat  rule %% TA-001118 Moved after airbus rules /less important
is  X isa street,clear
id  add message(nearest_station(X,Y))
ip  bound(X),
    X \== it,
    street_station(X,Y),
    Y==unknown.


goddagmann rule 
is  howmany(Bus),present Bus isa Frog,
    clear % avoid GodDagMannØkseskaft answers (GDMØ)
id  not message(_Already),
    clear, 
    addfront message(donotknow)
ip  \+ dmeq(busdeparr,Frog), 
    \+ dmeq(place,Frog).



noroutesfor rule 
is   _ isa Nightbus, 
     not present  _ isa telephone, 
     not present  _ isa webaddress,  %% etc
     clear %%  (All important)
id  addcon  message(noroutesfor(Nightbus)) %% ( not clear)
ip  dmeq(notbustram,Nightbus).     % message necessary also for  empty answer     



nofrequencies rule %% TA-010123
is  _ isa frequency
id  add message(noinfoabout(frequency))
ip  [].


hasatt0 rule %% Ruteopplysningstelefonen  %% TA-010511
is  A isa telephone,
    has/company/telephone/tt/A,clear  
id  clear,
    add message(answer(db_reply(ruteopplysningen,telephone,177)))
ip  [].


% din -> a program
hasatt01 rule %% before hasatt1  %% TA-010628
is   has/system/Version/Tuc/A,
     Tuc isa program,
     A isa Version,
    clear

id  clear,
    add (has_att_val(Company,Version,tuc,K),
         message(answer(db_reply(tuc,Version,K)))) 
ip  has_att_val(Company,Version,tuc,_). 

hasatt1 rule %% before nostation*  %% TA-010202
is   A isa Telephone,
    has/Company/Telephone/TT/A,clear    %%  Telephone is never a subclass
id  clear,
    add (has_att_val(Company,Telephone,TT,K),
         message(answer(db_reply(TT,Telephone,K)))) 
ip  bound(TT), 
    has_att_val(Company,Telephone,TT,_). 


nomap  rule   %% Moved forward
is  _ isa map,clear   %% TA-010621
id  clear,
    addfront message(sorryno(map))
ip  [].     % message necessary also for  empty answer     


nostation0 rule % bus from an ocean to nth. It is a ridiculous place
is  present srel/_/place/B/_, B isa Ocean,clear
id  addcon message(foreign(Ocean))
ip  dmeq([sky,ocean,sea],Ocean). %% ridiculous place subclasses

nostation1 rule 
is  present GO/_/_ ,          %% hvem er konge i Norge 
    X isa Place,clear  
id  addcon message(foreign(X))  %% should have been in front
ip  dmeq([go,get],GO), 
    dmeq(place,Place),bound(X),foreign(X).

nostation2 rule 
is  present Pass/_/_/_ ,          %% hvem er konge i Norge 
    X isa Place,clear  
id  addcon message(foreign(X))
ip  dmeq([pass],Pass), 
    dmeq(place,Place),bound(X),foreign(X).

nostation3 rule   
is  present _ isa BDR,
    X isa Place,clear
id  addcon message(foreign(X))
ip  dmeq(place,Place),dmeq(busdeparr,BDR),bound(X),foreign(X).


nostation31 rule 
is  present srel/_/place/X/_,
    X isa Place,clear
id  addcon message(foreign(X))
ip  dmeq(place,Place),bound(X),foreign(X).


%% manyplaces
nostation4 rule
is  P isa Place,
    clear
id	 add message(underspecified_place(P))
ip  dmeq(place,Place),underspecified_place(P).


nostation5 rule
is  X isa Place,
    clear 
id  clear, 
    addcon message(noroutesto(X))
ip  dmeq(place,Place),bound(X),
        nostationfor(X). 


% user knows you don't know,  I dont know 
wherefinddn rule 
is (which(A),B isa self,A isa place,
    find/B/C/E,event/real/E,srel/in/place/A/E,C isa _topic)
id add  message(idonotknow)
ip [].


% Where does the tram go
wheretram rule 
is  exactly (which(A),A isa Place,srel/_in/place/A/C,B isa tram,GO/B/C,event/real/C)
id	 atday(Day),
    add (findstations(TheTram,Day,Stl),
         passesstations(TheTram,Day,Stl,_)) %
ip  dmeq([go,leave,pass],GO),unbound(B),
    dmeq([station,place],Place),
    thetramno(TheTram).   %% ONLY ONE TRAM ? %% TA-001119


% Where does the bus go
mustknowbus3 rule 
is  exactly (which(A),A isa place,srel/in/place/A/C,B isa bus,GO/B/C,event/real/C)
id	 add	message(mustknow(bus)) 
ip  dmeq([go,leave,receive,get],GO), %% TA-001110
    unbound(B).


% Where does the bus go
mustknowbus4 rule 
is  exactly (which(A),A isa place,srel/_/place/A/C,B isa bus,
             GO/B/C,event/real/C)
id	 add	message(mustknow(bus)) 
ip  dmeq([go,leave,stop],GO),unbound(B). %% TA-001122

% Where does the bus go
knowtram rule %% TA-001119 
is  exactly (which(A),A isa place,srel/in/place/A/C,B isa tram,GO/B/C,event/real/C)
id	 add	message(mustknow(tram)) 
ip  dmeq([go,leave,receive,get],GO), %% TA-001110
    unbound(B),
   \+ thetramno(_). %% test


% Where can I go
182 rule 
is  exactly (which(A),B isa self,go/B/C,event/real/C,srel/in/place/A/C,A isa place)
id	 add	message(mustknow(bus))
ip  [].



%%%%%%%%%%%% Dag %%%%%%%%%%%%%%%%

setexdate0  rule %% om tre dager 
is   srel/withafter/duration/N/_,
     context(N isa day)
id   not atdate(date(_,_,_)),
     add atdate(date(X,Y,Z))
ip   bound(N),
     user:finddate(N,date(X,Y,Z)).


setexdate1 rule   %% Set date if another day  %% TA-010608
is  not (YMD isa date) cond bound(YMD),  %% another date overrules  
    context(_U_ isa Monday)
id  not atdate(date(_,_,_)),              %% TA-010720
    add atdate(date(X,Y,Z))
ip  dmeq(mtwtfss, Monday),
    today(Thursday),
    Thursday \== Monday,
    user:number_of_days_between(Thursday,Monday,N),  
    user:finddate(N,date(X,Y,Z)).


setexdate2 rule   %% Set date if explicit %% TA-010603
is  context(KHFD isa date)
id  not atdate(date(_,_,_)),
    add atdate(date(X,Y,Z))
ip  bound(KHFD),
    user: named_date(KHFD,date(X,Y,Z)). %


setexdate3 rule   %% Set date if explicit 
is  context(date(X,Y,Z) isa date) %% TA-010603
id  not atdate(date(_,_,_)),
    add atdate(date(X,Y,Z))
ip  []. 



% hva er  datoen etc.

date0 rule %% 
is  exactly (which(A),A isa DayDate)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq([day,date,year,month,week],DayDate),today(Day).

% hvilken dato er det.  %%  :-)

date1 rule 
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B) % variant
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(dayordate,DayDate),today(Day).

date2 rule 
is  exactly (which(A),A isa DayDate,event/real/_)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 unbound(A),
    dmeq(dayordate,DayDate),today(Day).

date3 rule
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B,srel/today/day/nil/B)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(dayordate,DayDate),today(Day).

date4 rule %% hvilken ... er det nå %% TA-001107
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B,srel/now/_/nil/B)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq([year,month,day,date],DayDate),today(Day).

date5 rule 
is  test,A isa XDay,be1/A/B,event/real/B %%   er det mandag (idag)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(mtwtfss,XDay),today(Day).


date6 rule 
is  exactly (which(A),A isa year,B isa year,be1/A/C,event/real/C,srel/in/year/B/C)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 today(Day).


% is it -day today ?  %% This rule is  too specific !
date7 rule 
is  test,A isa Day,be1/A/B,event/real/B,srel/today/day/nil/B
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 isday(Day),today(Day).

date8 rule %%  ad nauseam
is  exactly (which(A),A isa DayDate,B isa day,be1/A/C,event/real/C,srel/in/day/B/C)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(dayordate,DayDate),today(Day).


date9 rule 
is  exactly (which(A),A isa Year1,be1/A/C,event/real/C)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq([year,month,week,season,leapyear],Year1), %% TA-010503
    today(Day).


date10 rule %% Hvilken dag har det i går/imorgen  %% TA-010717
            %% Just tell days date
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B,srel/_day/day/nil/B)
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),
    dateis(Year,Month,DayNr,Day)),
    add message(todayis)
ip	 dmeq(dayordate,DayDate),today(Day).




daysdate rule
is    X isa day, Y isa date, has/day/date/_/_, clear
id	 add (atday(Day),
	 datetime(Year,Month,DayNr,_,_,_),
    dateis(Year,Month,DayNr,Day))
ip  unbound(X),unbound(Y), 
    today(Day).

%--------------------------------------------------------
%%        weekdays

%//////////////////  Fronted %% TA-010622


% ...on Day (on friday, etc.)

% ...on weekday 
weekday1  rule 
is  _ isa weekday
id	 not atday(_), 
    add atday(WeekDay)
ip	 today(Today), decidewday(Today,WeekDay).



% ...on Day (on friday, etc.)
weekday2 rule 
is  _ isa WeekDay
id	 not atday(_), 
    not atdate(_), %% date overrules day %% TA-010720
    add atday(WeekDay)
ip	 isday(WeekDay).


% ...on Day (on friday, etc.)
weekday3 rule  
is  srel/WeekDay/day/nil/_       %% _ isa Weekday missing (adverbial)
id	 not atday(_),
    add atday(WeekDay)
ip	 isday(WeekDay).

% ... Day (passes nardo friday, etc.)
weekday4 rule 
is  srel/WeekDay/time/nil/_
id	 add atday(WeekDay)
ip	 isday(WeekDay).

%/////////////

% Special dates with known mapping

% Special dates outside valid routeplan
nodates00 rule  %% TA-010618
is   []  
id   atdate(date(YYYY,MM,DD)), %% TA-010529
     not message(nodates),  %% not addcon
%%      addcon  message(date_isa_day(date(YYYY,MM,DD),Day)), %% TA-010811
%%      addcon  atday(Day),  %% TA-010811  ???
     not decide_period(date(_,_,_)),                      %%
     addfront  decide_period(date(YYYY,MM,DD)) %% message(nodates)  %% TA-010721
     
ip   \+ datetime(YYYY,MM,DD,_,_,_), %% today, no message %% TA-010727
     user:valid_period(Y,Z),
     user:off_valid_period(date(YYYY,MM,DD),Y,Z),
     weekday(date(YYYY,MM,DD),_Day).

nodates01 rule   %% TA-001218    %% 
is   []
id   atdate(date(YYYY,MM,DD)),
     add atday(Day),
     not message(nodates), %% TA-010618
     not message(date_day_route(date(_YYYY,_MM,_DD),_Day)),
     add message(date_day_route(date(YYYY,MM,DD),Day))
ip   date_day_map(date(YYYY,MM,DD),Day),  %% New Predicate  busdat.pl
     Day \== holiday. %% TA-010515

% Special dates without known mapping
nodates02 rule  %% TA-001218
is   clear
id   atdate(date(YYYY,MM,DD)), %% TA-010529
     not message(nodates),  %% not addcon
     addfront message(nodates), 
     add (has_att_val(company,webaddress,tt,K), %% TA-010607
          message(answer(db_reply(tt,webaddress,K))))
ip   user: date_day_map( date(YYYY,MM,DD),holiday). %% i.e. no route

% General  Date to day mapping
nodates03 rule
is   remove  srel/_Prep/day/Day/_
id   atdate(date(YYYY,MM,DD)), %% TA-010529
     not message(nodates), %% TA-010618
     add atday(Day),
     add message(date_isa_day(date(YYYY,MM,DD),Day))
ip   \+ date_day_map( date(YYYY,MM,DD),holiday),           %% TA-010515
     weekday(date(YYYY,MM,DD),Day).

nodates04 rule   %% except for the day today 
is   N  isa month,clear
id   add message(mustknow(date)) %% TA-010725 
ip   bound(N).  

nodates05 rule  
is    N isa week,clear
id    add message(nodates) 
ip    bound(N).

nodates06 rule  
is    _N isa week,
      clear
id    not message(_),  %% TA-010906 
      add message(idonotknow) 
ip    [].


nodates07 rule   %% except for the day today  
is    _ isa christmas_route,clear
id   add message(nodates) 
ip   [].

nodates08 rule   %% except for the day today 
is    _ isa Easter, not date(_,_,_) isa date, %% TA-010917
     clear
id   %% not atdate(_),   %% TA-010917 (Maybe set by default)
     clear,              %% TA-010917
     addfront message(mustknow(date)) %% nodates) %% TA-010606 
ip   dmeq([advent,autumn,easter,fall,spring, % not summer winter %% TA-010917
           vacation,whitsun,holiday,easterroute],Easter).


% is it sundayroute on day 
nodates11 rule  %% TA-010622
is   test, _ isa sundayroute
id   atdate(date(YYYY,MM,DD)), %% TA-010529
     not message(nodates),  %% not addcon
     not atday(sunday),
     add message(no)
ip   \+ user: date_day_map( date(YYYY,MM,DD),sunday),
     \+ weekday(date(YYYY,MM,DD),sunday).

% is it sundayroute on date (ordinary sunday) 
nodates12 rule  %% TA-010622
is   test, _ isa sundayroute
id   atdate(date(YYYY,MM,DD)), %% TA-010529
     not message(nodates),  
     atday(sunday),
     add message(yes)
ip   \+ user:date_day_map( date(YYYY,MM,DD),_day).
      


knowthing rule % Goddag mann %% Moved after nodates  %% TA-010511
is  Tuc isa program,
    Knowthing/Tuc/A/B, event/real/B, 
    A isa WE,
    not srel/about/_/_/B,  
    not srel/regarding/_/_/B, 
    not srel/_/place/_/_ , 
    not A isa clock  
id  add message(howtuchelp)
ip  dmeq([knowthing,understand],Knowthing), 
    dmeq([tuc,bustuc,busstuc],Tuc),
    \+ dmeq([departure,clock,man,woman,language,place],WE),  %% vet du avgangene / klokka
                                               %% kjenner du tore
    \+ dmeq([tagore,norwegian,english],A).  %% kan du norsk

% "Do you know what... " is superflous


workdayroute rule  %%   (NB  tuesdayroute --> weekday --> monday
is  replaceall ( B isa workdayroute,srel/with/bus/B/C)
    with       ( B isa weekday,srel/on/time/B/C)
id  []
ip  [].



% ...on weekends (-> sunday)
weekend rule 
is  _ isa weekend
id	 add atday(sunday)
ip	 [].


% ...tomorrow
morrow rule 
is  not present explain, 
    srel/tomorrow/day/nil/_ ,
    not _ isa ticket,
    not _ isa reservation, %% etc ad n %% TA-001012
    not has/_/_/_/_
id	 not atday(_),                  %% e.g. i morgen torsdag 
    add (today(Day), atday(NextDay),atdate(Date))        % TA-010530
ip	 today(Day),   %% Instantiate it
    daysucc(Day,NextDay),
    user:finddate(1,Date).
    

% ...day_after_tomorrow 
1682 rule 
is  srel/day_after_tomorrow/day/nil/_ 
id  not atday(_), 
    add (today(Day),atday(Day2),atdate(Date))
ip	 today(Day),
    daysucc(Day,Day1),
    daysucc(Day1,Day2),
    user:finddate(2,Date).

% ...yesterday
1688 rule 
is   srel/yesterday/day/nil/_ %% time => day
id	  not atday(_), 
     add (today(Day),daysucc(PrevDay,Day),atday(PrevDay))
ip	 [].

%   day_before_yesterday
1694 rule 
is  srel/day_before_yesterday/day/nil/_ %% time => day
id	 not atday(_), 
     add (today(Day),daysucc(Day1,Day),daysucc(PrevDay,Day1),atday(PrevDay))
ip	 [].

% ...if no date is mentioned find day and message
nottoday rule 
is  []
id  not atday(_),
    not  message(date_isa_day(_,_)), %% TA-010721
    atdate(date(Y,M,D)),
    add atday(Day),
    not message(nodates), % no point if no routes
    add message(date_isa_day(date(Y,M,D),Day))
ip  weekday(date(Y,M,D),Day).


% ...if no day is mentioned, default to today
today rule 
is  []
id  not atday(_),
    not atdate(_), %% TA-010722
    add (today(Day),atday(Day))
ip  today(Day).   %% TA-010530  %% Instatiate now 


sundaytoday rule %% give message today is because sundayroute is mentioned
is  _ isa sundayroute
id  atday(_),
    atdate(date(Y,M,D)),
%     not message(nodates), % no point if no routes ???
    not message(date_day_route(_,_)),   %% TA-010512 
    message(date_isa_day(date(Y,M,D),Day))
ip  weekday(date(Y,M,D),Day).

atdate rule %%   Find the actual date   %% TA-010530
is  []
id  not atdate(_),
    add atdate(DATE)
ip  user:finddate(0,DATE).  %% 0 days from now 


%%% Nearest Station Section 

%% Moved after decide period %% TA-010722
placestat  rule %% TA-010523   EXPERIMENTAL 
is  context (X isa neighbourhood)    %% trondheim is a city
id  not message(nearest_station(X,_)), %% EXPENSIVE
    add message(nearest_station(X,Y))
ip  bound(X),
    X \== it,
    placestat(X,Y).  %% NB in busdat (Real definition)

%% Moved after decide period %% TA-010723
streetstat  rule 
is  X isa street
id  add message(nearest_station(X,Y))
ip  bound(X),
    X \== it,
    street_station(X,Y). %% station or unknown  



%%%%% Priser %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


1474 rule 
is  (srel/freely/mode/nil/B,event/real/B) %% kjøre gratis
id  add (ticketprice(_))
ip  [].


1475 rule 
is  (A isa bus,adj/free/A/B,event/real/B) %% være gratis
id  add (ticketprice(_))
ip  [].

1476 rule 
is  (pay/_/_/E,event/real/E) 
id  add (ticketprice(_))
ip  [].

1477 rule
is  (pay/_/E,event/real/E)
id  add (ticketprice(_))
ip  [].



costit rule 
is  cost/it/_C/_E
id  addcon  ticketprice(_) % gets tour as well %% TA-010825
ip  [].



% Price of a ticket
ticketprice1 rule 
is  which(A),has/Ticket/price/_/A
id  not message(noinfoabout(special_ticket)), %%   " price of a monthly fare
    add ticketprice(_)
ip  dmeq(ticket,Ticket). 

% Price of a ticket
ticketprice2 rule %% TA-010621
is  which(A),B isa Ticket,cost/B/A/_ 
id  add ticketprice(_)
ip  dmeq([ticket,bus,trip],Ticket). %% not season ticket %% TA-010621


% Price of a ticket 
ticketprice3 rule %% TA-010621
is  which(A),B isa Ticket1,A isa price, be1/A/C,srel/For/_Ticket2/B/C
id  add ticketprice(_)
ip  dmeq(ticket,Ticket1), %% dmeq(ticket,Ticket2),
    dmeq([on,to,for],For). 



% What is a price
ticketprice4 rule %% TA-010621
is  which(A),A isa price,be1/A/E,srel/for/Person/_/E
id  add ticketprice(_)
ip  dmeq([person,man,woman,child,boy,girl],Person).


% What is a price from to 
ticketprice5 rule %% TA-010621
is  which(A),A isa price,be1/A/E,srel/_Prep/Place/_/E
id  add ticketprice(_)
ip  dmeq([place],Place).


% What is a price
ticketprice6 rule %% TA-010621
is  (which(A),A isa Price) %% what is an average price ?
id  add ticketprice(_)
ip  dmeq([price,fare],Price).  %% TA-001212

% What is a price
ticketprice7 rule %% TA-010621
is  exactly (which(A),A isa price,event/real/_)
id  add ticketprice(_)
ip  [].


% What is a price for going
price100 rule
is  which(A),A isa price,srel/for/price/A/_ 
id  add ticketprice(_)
ip  [].


% What is a man  %% TA-010327
describe100 rule
is  exactly (which(A),A isa Man),
    clear
id  clear, 
    add message(answer(bcpbc(Abstract)))
ip  user:(Man ako Abstract),
    \+ member(Man,[god,price,bus,tram,clock,telephone, %% TA-010622
          time,question,answer,station]). %% etc.  etc. %% TA-010719


%%%%% What time and date %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% What time is it
whattime0 rule 
is  exactly (which(A),A isa time,be1/A/B,srel/in/time/A/B,event/real/B) 
id  add (timenow(T),timeis(T))
ip  [].

%
% Hva er klokka?
whattime1 rule 
is  exactly (which(Clock1),Clock2 isa clock) 
id  add (timenow(T),timeis(T))
ip  unbound(Clock1),Clock1==Clock2.          %% Alarm 

% fortell hva klokka er 
whattime2 rule 
is  tuc isa program,Clock2 isa clock,tell/tuc/Clock2/_  
id  add (timenow(T),timeis(T))
ip  [].

% vet du klokka  / vet du hva klokka er ?
whattime3 rule 
is  tuc isa program,Clock2 isa clock,knowthing/tuc/Clock2/_  
id  add (timenow(T),timeis(T))
ip  [].

% Hva er klokka? 
210 rule 
is  exactly (which(A),B isa clock,
             be1/A/C,event/real/C,srel/nil/time/B/C) 
id	 add (timenow(T),timeis(T))
ip	 [].

% Hva er klokka?
211 rule 
is  exactly (which(Time),Time isa Timeq)
id	 add (timenow(T),timeis(T))
ip  unbound(Time),  
    dmeq(timeclock,Timeq). %% not duration  

% Hva er klokka nå?
212 rule 
is  exactly (which(A),B isa Timeq,be1/A/C,event/real/C,
             srel/nil/time/B/C,srel/now/time/nil/C)
id	 add (timenow(T),timeis(T))
ip	  dmeq(time,Timeq).

% What is the time?
214 rule 
is  exactly (which(A),A isa Timeq,event/real/_)
id	 add (timenow(T),timeis(T))
ip	 dmeq(time,Timeq), unbound(A). 

% What is the time now?  
215 rule 
is  exactly (which(A),A isa Timeq,be1/A/B,event/real/B,srel/now/_/nil/B) 
id	 add (timenow(T),timeis(T))
ip	  dmeq(time,Timeq).

% What time is it?
216 rule 
is  exactly (which(A),A isa Timeq,be1/A/B,event/real/B) 
id	 add (timenow(T),timeis(T))
ip	  dmeq(time,Timeq).

% What time is it now?
217 rule 
is  exactly (which(A),A isa Timeq,be1/_/B,event/real/B,
				 srel/nil/time/A/B,srel/now/time/nil/B)
id	 add (timenow(T),timeis(T))
ip   dmeq(time,Timeq).

% What is your clock .
whattime10  rule 
is (tuc isa program,has/system/clock/tuc/A,A isa clock)
id	 add (timenow(T),timeis(T))
ip  unbound(A).  %% avoid lunch syndrom


% Time is now (?).
whattime11  rule 
is  exactly (new,A isa clock,be1/A/B,event/real/B,srel/now/time/nil/B)
id	 add (timenow(T),timeis(T))
ip  unbound(A).  %% avoid lunch syndrom

% when is it now  (Eng)
whattime12  rule 
is  exactly (which(A),be1/A/B,A isa time,event/real/B,srel/now/time/nil/B,srel/in/time/A/B)
id	 add (timenow(T),timeis(T))
ip  unbound(A). 



%


% What is the day/date? (no calculations !)
217 rule 
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B,srel/today/day/nil/B)
id	 atday(Day),
	 add (datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(dayordate,DayDate),today(Day).


% What is the day/date? (no calculations !)
218 rule 
is  exactly (which(A),A isa DayDate,be1/A/B,event/real/B)
id	 atday(Day),
	 add (datetime(Year,Month,DayNr,_,_,_),dateis(Year,Month,DayNr,Day))
ip	 dmeq(dayordate,DayDate),today(Day).


%%%%%%%% I RETNING... %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                                        


224 rule 
is  Place isa direction,srel/_inil/direction/Place/C 
id	 remove passevent(Depset,Bus,OnPlace,Opts,Day,C),
	 add (keepto(Stat,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,C))
ip	  bus_place_station(Bus,Place,Stat).


225 rule 
is  go/Bus/D,srel/towards/place/Place/D
id	 remove passevent(Depset,Bus,OnPlace,Opts,Day,C),
    add (keepto(Stat,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,C))
ip	 bus_place_station(Bus,Place,Stat). 

227 rule 
is  present Bus isa bus,srel/towards/place/Place/C
id	 remove passevent(Depset,Bus,OnPlace,Opts,Day,C),
	 add (keepto(Stat,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,C))
ip	 bus_place_station(Bus,Place,Stat). 

228 rule 
is  present Bus isa bus,srel/into/place/Place/C
id	 remove passevent(Depset,Bus,OnPlace,Opts,Day,C),
	 add (keepto(Stat,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,C))
ip	 bus_place_station(Bus,Place,Stat).


%%%%% Passering av sted det ikke finnes bussruter for  Moved in FRONT 


%% NSB buss

otherbus rule 
is  NSB isa company,has/company/bus/NSB/_
id	 clear, 
    add message(noroutesfor(otherbus))
ip  NSB \== tt. %% varies with installation


otherbus2 rule 
is  NSB isa company,go/NSB/_
id	 clear, 
    add message(noroutesfor(otherbus))
ip  NSB \== tt. %% varies with installation


otherbus3 rule 
is  hire/_/_/_
id	 clear, 
    add message(noroutesfor(otherbus))
ip  [].

notram2 rule %% Tram station, but user has asked for bus 
is  X isa tramstation,
    clear
id  addcon message(noroutesto(X))
ip  bound(X),
    \+ user:value(tramflag,true),
    \+ X isa station.                %% Ugla %% TA-010621


%% tram 
notram3  rule 
is  _X isa tramstation, 
    not present (_Y isa bus), %      asks explicitly about bus 
    clear   
id	 clear, 
    addcon message(noroutesfor(tram)) 
ip   \+ user:value(tramflag,true).

% Sørger for riktig retning i "buss fra/til sted passerer TOFROMBY" etc.

%%%%%%%%%%%%% Stasjoner en kommer fra eller går til %%%%%%%%%


%%%%%%%%% STASJONER ..og passerer, etc. %%%%%%%%%%%%%

%%%%%%%%%%%%% Hvilke stasjoner %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% PLASS Where can i get on a bus?
geton rule 
is  present which(Place),present get/_/Bus/C,srel/on/place/nil/C,
    srel/in/place/Place/C
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,C))
ip	 unbound(Place),busorfree(Bus).

%% PLASS Where can i get off a bus?
getoff rule 
is  present which(Place),present get/_/Bus/C,srel/off/place/nil/C,
	 srel/in/place/Place/C
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,C))
ip	 unbound(Place),busorfree(Bus).


%% PLASS Which places does a bus PASS at  between stations

passbetw1 rule
is  present which(Place),PASS1/Bus/A, srel/AT/place/Place/A,
    present srel/from/place/FromPlace/_, present srel/to/place/ToPlace/_  
id	 atday(Day),
	 add ( findstations(Bus,Day,Stl1),
          keepbetweenstat(Bus,FromStat,ToStat,Stl1,Stl2),
          passesstations(Bus,Day,Stl2,A))
ip	 dmeq(pass,PASS1),dmeq(tofromby,AT),unbound(Place),exbus(Bus),
    place_station(FromPlace,FromStat), place_station(ToPlace,ToStat).

passbetw2 rule %% Hack   Transitive pass %% TA-010614
is  present which(Place),PASS1/Bus/Place/A,
    present srel/from/place/FromPlace/_, present srel/to/place/ToPlace/_  
id	 atday(Day),
	 add ( findstations(Bus,Day,Stl1),
          keepbetweenstat(Bus,FromStat,ToStat,Stl1,Stl2),
          passesstations(Bus,Day,Stl2,A))
ip	 dmeq(pass,PASS1),unbound(Place),exbus(Bus),
    place_station(FromPlace,FromStat), place_station(ToPlace,ToStat).


statbetween1 rule %% TA-010130
is  which(Place), Place isa station, 
    be1/Place/A,
    srel/For/Route/Bus/A,
    srel/From/place/FromPlace/_A1, %  A1=A2, but stunt
    srel/To/place/ToPlace/_A2      %  makes havoc

id  atday(Day),
	 add ( findstations(Bus,Day,Stl1),
          keepbetweenstat(Bus,FromStat,ToStat,Stl1,Stl2),
          passesstations(Bus,Day,Stl2,A))
ip  dmeq([from,beyond,after],From), %% etter = from/beyond/after
    dmeq([to,before],To),           %% TA-010205
    dmeq([for,with,on],For),
    dmeq([route,vehicle,bus],Route), %% TA-010308 (?)
    place_station(FromPlace,FromStat), 
    place_station(ToPlace,ToStat),
    unbound(Place),exbus(Bus).

statbetween2 rule %% TA-010130
is  which(S), S isa station, be1/S/E, srel/ToFrom/place/_/E,
    not _ isa bus
id  add message(mustknow(bus))
ip  dmeq([to,from,between,before],ToFrom).



%% PLASS Which places does a bus PASS at?
2038 rule  
is  present which(Place),PASS1/Bus/A,srel/AT/place/Place/A,
    not present _ isa time, 
    not present _ isa clock, 
    not present srel/_/place/_/_,  
    clear %%  only exact, DON'T MIX 

id	
    atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,A))
ip	 dmeq(pass,PASS1),dmeq(tofromby,AT),unbound(Place),exbus(Bus).



%% PLASS Which places does a bus <pass>?
pass1  rule 
is  exactly (which(Place),PASS/Bus/Place/_) 
id	 add message(mustknow(bus))
ip	 dmeq(pass,PASS),unbound(Place),unbound(Bus)
	:- single.  %% dmeq first


pass1  rule
is  exactly (which(Place),PASS/Bus/Place/_),
    replace Pass/Bus/Place/X with Pass/NewBus/Place/X
id      not askfor(_, bus, _),
        addfront askfor([], bus, NewBus)
ip       dmeq(pass,PASS),unbound(Place),unbound(Bus)
        :- \+single.


% PLASS Which places does a buss <pass> <TOFROMBY>?
1781 rule 
is  Place isa station, 
    present which(Place),present PASS/Bus/A,present Bus isa BR, 
    srel/TOFROMBY/place/Place/A
   , not srel/_/place/_/_  
id	 not message(foreign(_)), 
    add message(mustknow(bus))
ip	 dmeq(tofromby,TOFROMBY),unbound(Place),
    dmeq(bus,BR),unbound(Bus),dmeq(pass,PASS) 
	:- single.


1781 rule
is  Place isa station, 
    present which(Place),
    present Bus isa BR,
    replace PASS/Bus/AR/Ev
    with PASS/NewBus/AR/Ev
id       not message(foreign(_)), 
         not askfor(_, bus, _),
         addfront askfor([], bus, NewBus)
ip       unbound(Place), dmeq(bus,BR),unbound(Bus),dmeq(pass,PASS)
        :- \+single.

%% NB  where does the bus to nth stop ==> should NOT give warning !!! 


% BUS Which buses passes a station
245 rule 
is  which(A),(Bus isa bus,Station isa Placeq,PASS/A/Station/C,event/real/C)
id	 add message(mustknow(place))
ip	 dmeq(pass,PASS), dmeq(place,Placeq),unbound(Bus), unbound(Station)
	:- single.


245 rule
is  which(A),(Bus isa bus,event/real/C),
    replace Station isa Placeq
    with NewStation isa place,
    replace PASS/A/Station/C
    with PASS/A/NewStation/C
id  not askfor(_, where::departure, _),
    addfront askfor([], where::departure, NewStation)
ip       dmeq(pass,PASS), dmeq(place,Placeq),unbound(Bus), unbound(Station)
	:- \+single.


% When does the bus go 
246 rule 
is  which(A),(B isa bus,A isa Timeq,GO/B/C,event/real/C,srel/in/time/A/C)
id	 add message(mustknow(place))
ip	 dmeq(go,GO), dmeq(time,Timeq),unbound(A),unbound(B)
	:- single.


246 rule
is  replace (which(A),(B isa bus,A isa Timeq,GO/B/C,event/real/C,srel/in/time/A/C))
    with (which(A),(Place isa place, B isa bus,A isa Timeq,
          nrel/from/bus/place/B/Place, GO/B/C,event/
          real/C,srel/in/time/A/C))
id      not askfor(_, where::departure, _),
        addfront askfor([], where::departure, Place)
ip       dmeq(go,GO), dmeq(time,Timeq),unbound(A),unbound(B)
	:- \+single.





%%%%%%%%%%%%% Bussoverganger %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Hvor kan man CHANGE fra Buss1 til Buss2
1698 rule 
is  which(Station),CHANGE/_/Station/C,
    srel/TOFROMBY1/bus/Bus1/C,srel/TOFROMBY2/bus/Bus2/C
id  atday(Day),
    add (findstations(Bus1,Day,Stl1),
			findstations(Bus2,Day,Stl2),
			corrstats(Stl1,Stl2,StlBoth),
			passesstations([Bus1,Bus2],Day,StlBoth,C))
ip  dmeq(change,CHANGE),dmeq(tofromby,TOFROMBY1),dmeq(tofromby,TOFROMBY2),
    exbus(Bus1),exbus(Bus2).

% Where does Bus1 and Bus2 meet?
1709 rule 
is  which(Stat),meet2/(Bus1,Bus2)/B,srel/in/place/Stat/B
id  atday(Day),
    add (findstations(Bus1,Day,Stl1),
			findstations(Bus2,Day,Stl2),
			corrstats(Stl1,Stl2,StlBoth),
			passesstations([Bus1,Bus2],Day,StlBoth,B))
ip  exbus(Bus1),exbus(Bus2).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Takes time rules   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Avoid question if same place  


samefplace2 rule
is  context srel/From/place/StartPlace/_D1, %% not "removed from s(c)een
    srel/To/place/EndPlace/_D2
id  add (message(sameplace(StartPlace,EndPlace)))  %% not urgent
ip  atomic(StartPlace), atomic(EndPlace), %% TA-010403 

    StartPlace \== EndPlace, %% Don't make a fuzz yet %% TA-011026

    dmeq([to,for,in],To),    
    From \== To,                   %% skip to nth to nth
    From \== to, From \== in,      %% bus from kino in prinsens gt
    samefplace(StartPlace,EndPlace).



samefplace2b rule 
is  context srel/To/place/EndPlace/_D1, %% not "removed from s(c)een
    leave/_Bus/StartPlace/_D2
id   add (message(sameplace(StartPlace,EndPlace)))  %% not urgent 
ip   atomic(StartPlace), atomic(EndPlace), %% TA-010403 
     dmeq([to,for],To),samefplace(StartPlace,EndPlace).

samefplace3 rule 
is context srel/From/place/StartPlace/_D1, %% not "removed from s(c)een
   srel/at/place/EndPlace/_D2
id add (message(sameplace(StartPlace,EndPlace)))  %% not urgent 
ip atomic(StartPlace), atomic(EndPlace), %% TA-010403 
   samefplace(StartPlace,EndPlace),
   From \== at. %% Different prepositions
   

samefplace4 rule 
is context srel/_Prep1/place/StartPlace/_D1, 
           srel/_Prep2/place/EndPlace/_D2
id add (message(sameplace(StartPlace,EndPlace)))  
ip  atomic(StartPlace), atomic(EndPlace), %% TA-010403 
   (\+ StartPlace = EndPlace,
    samefplace(StartPlace,EndPlace)).


samefplace5 rule  %%  
is  pass/_X/StartPlace/E,
    srel/_Prep/place/EndPlace/E
id  add (message(sameplace(StartPlace,EndPlace)))  
ip  atomic(StartPlace), atomic(EndPlace), %% TA-010403 
    samefplace(StartPlace,EndPlace).


%% PLASS Which places between ( NO BUS)
mustknowbus  rule 
is  which(Place),Place isa Placoid,be1/Place/A,
    srel/from/place/_FromPlace/A, srel/to/place/_ToPlace/A 
id  add ( message(mustknow(bus)))
ip	 unbound(Place), dmeq([place,station,neighbourhood],Placoid).



%%%%   How long time RULES 
%%  DIFFDEP section

%% diffdep rules have been drastically simplified, and not quite debugged

diffdep1 rule
is   which(Dur), Dur isa DURATION,be1/Dur/_

id  connections(_,_,_,FromStation,ToStation,_,[],Dep,_),
    add (diffdep(Dep,_,Diff,FromStation,ToStation),
	      takestime(Diff,FromStation,ToStation))
ip  dmeq(duration,DURATION).

% use time in order to go 

diffdep2 rule 
is  which(T),Bus isa BR,Use/Bus/T/B,
    C isa Timeq,srel/in_order_to/thing/C/B, go/Bus/D,srel/in/time/C/D

id  connections(_,_,B,FromStation,ToStation,_,[],Dep,_),
    add (diffdep(Dep,_,Diff,FromStation,ToStation),
	      takestime(Diff,FromStation,ToStation))
ip  dmeq(use,Use),dmeq(time,Timeq),dmeq(bus,BR).


diffdep4 rule 
is  which(F41),Bus isa BR, be1/Bus/_F42, Use/Bus/F41/_ % F41 isa time  
id  connections(_,_,_,FromStation,ToStation,_,[],Dep,_),
    add (diffdep(Dep,_,Diff,FromStation,ToStation),
	      takestime(Diff,FromStation,ToStation))
ip  dmeq(bus,BR),dmeq(use,Use).

diffdep5 rule %% from A to B %% after befrom/beto
is  which(T),T isa time,present B isa bus, Use/B/T/_E %% TA-001205 
id  connections(_,_,B,FromStation,ToStation,_,[],Dep,_),
    add (diffdep(Dep,_,Diff,FromStation,ToStation),
	      takestime(Diff,FromStation,ToStation))
ip  dmeq([use,take],Use).  %% TA-001205


%%%%% Hvor lang tid...

% How long does it take to...
diffdep6 rule 
is  % which(A),
    A isa TIME,take/to/time/A/B/_,event/B/_
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
    add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([time,duration],TIME), 
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).


% How long does it take to...  New regime
diffdep65 rule 
is  A isa TIME,take/it/A/_E
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
    add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([time,duration],TIME),
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).



% How long does it take from...
diffdep7  rule 
is  which(A),present take/_/A/_,srel/in/time/A/_  % ??? 
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% How long does it take from...
diffdep8  rule 
is  which(A),srel/with/duration/A/_ ,A isa Duration %% TA-001205
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([time,duration],Duration),%% TA-001205
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% How long does it take from...
diffdep8b  rule 
is  which(A),A  isa Duration, present Take/it/A/_ %% TA-010607
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([take,be1],Take),                           %% TA-010930
    dmeq([time,duration],Duration),%% TA-001205
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% How long does it take from... (alternative)
diffdep9  rule 
is  which(A),USE/Bus/E,srel/in/time/A/E, A isa Duration %% TA-001205
id	 connections(_,_,Bus,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([use,take],USE),
    dmeq([time,duration],Duration),%% TA-001205
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% How long does it take from... (alternative)
diffdep10  rule
is  which(A),A isa Duration,
    seen USE/Bus/A/_,          %% TA-001117 
    seen Bus isa BR
id	 connections(_,_,Bus,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq(bus,BR),dmeq([time,duration],Duration), 
    dmeq([use,take],USE), 
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).


% How long does it take from...
diffdep11  rule 
is  which(A),A isa speed,srel/with/speed/A/_ 
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% which bus uses short time 
diffdep12  rule 
is  which(A),A isa bus,T isa time,adj/_ShortLong/T/_
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

% which bus uses short time 
diffdep13  rule 
is  which(A),A isa duration,present B isa Bus,last/B/A/_
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([bus,tram],Bus), 
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).

diffdep14  rule
is  which(A),A isa length,has/object/length/B/A,  %% rather length of route
     present B isa Bus
id	 connections(_,_,_,StartPlace,EndPlace,_,_,Dep,_),
	 add (diffdep(Dep,EndPlace,Diff,Station1,Station2),
			takestime(Diff,Station1,Station2))
ip	 dmeq([bus,tram],Bus), 
    isat2(Station1,StartPlace),
    isat2(Station2,EndPlace).


%%% END DIFFDEP SECTION




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Stasjonspasseringsdel. Her blir departure/passevent laget
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%% Stasjonspasseringsspesialregler som sikrer riktig rekkefølge...


% TID Does a bus LEAVE a place? (Place is bound) 
1857 rule 
is  LEAVE/Bus/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A)) %%   leave is neutral wrp direction 
ip	 dmeq(leave,LEAVE),busorfree(Bus),bus_place_station(Bus,Place,Stat).


% Route for bus 
iamfedup rule 
is  be1/B/E, %%  // do you have 
    
    B isa ROUTE,
    srel/FOR/BUSV/Bus/E,
    event/real/_E,   %% TA-010327
    not _ isa day ,  %% etc   NO TIME indication
    not srel/_with/time/_/_,   %%  (detail)
    not present srel/_to/place/_/_  

id	 not passevent(_,_,_,_,_,_), %%  not departure(_,_,_,_), %% TA-010516
                                %%   Avoid test departure
    atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 exbus(Bus),
    dmeq([bus,route,vehicle,thing],BUSV), 
    dmeq([route,route_plan,information,thing],ROUTE),
    dmeq([for,to,over,regarding],FOR).


%%%%%%%%%%%%% take the bus FROM

% someone take the bus FROM a place
1961 rule 
is  present TAKE/_/Bus/A,srel/FROM/place/Place/A 
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[from],Day,A)) 
ip  dmeq(from,FROM),dmeq(use,TAKE),busorfree(Bus),
        bus_place_station(Bus,Place,Stat). 

% Bus take me
1975 rule 
is  present take/Bus/_/C,present Bus isa bus,srel/FROM/place/Place/C
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[from],Day,C))
ip  dmeq(from,FROM),place_station(Place,Stat),
    busorfree(Bus). 

% take FROM
1982 rule 
is  present take/_/_/C,srel/FROM/place/Place/C
id	 atday(Day),
    add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[from],Day,C))   %% same event C ! 
ip  dmeq(from,FROM),newfree(Bus),place_station(Place,Stat).  

%%%%%%%%%%%%% PASS/TRAVEL/be1 etc. FROM

% Does a bus LEAVE a place? (Place is unbound)
1991 rule 
is  exactly (which(Time),Bus isa bus, Time isa Timeq,
        LEAVE/Bus/Place/C,event/real/C,srel/in/time/Time/C)
id	 atday(Day),
	 add (departure(Bus,Place,Day,Depset),
			passevent(Depset,Bus,Place,[from],Day,C))
ip	 unbound(Place),dmeq(leave,LEAVE),dmeq(time,Timeq).



% Does a bus TRAVEL FROM a place? 
fromptram rule 
is  present Bus isa tram,present TRAVEL/Bus/C,srel/FROM/place/Place/C
id  atday(Day),
    add (departure(TramN,Station,Day,Depset0), 
         keepfrom(Station,Depset0,Depset),   %% Exclude buses to( End) Station
         passevent(Depset,TramN,Station,[from],Day,C))
ip	dmeq([from],FROM),
   dmeq(travel,TRAVEL),
   notbothfree(Bus,Place),  
   bus_place_station(Bus,Place,Station),
   thetramno(TramN). %% Only One tram %% TA-001119

% Does a bus TRAVEL FROM a place? 
busfromp rule 
is  present Bus isa BDA,present TRAVEL/Bus/C,srel/FROM/place/Place/C
id  atday(Day),
    not   passevent(_,_,_,[from],_,_),   %% hazard  NOT Already a FROM
    not   connections(_,_,_,_,_,_,_,_,_), %% finished 
     add   (departure(Bus,Station,Day,Depset0),
          keepfrom(Station,Depset0,Depset), 
          passevent(Depset,Bus,Station,[from],Day,C))

ip dmeq([from],FROM), %%  NB buss 20 forbi Buran ( bare til !!! )
   dmeq(travel,TRAVEL),
   dmeq([bus,departure,route],BDA), 
   notbothfree(Bus,Place),  
   busorfree(Bus),
   bus_place_station(Bus,Place,Station),
   Station \== unknown. 
   


% Hvor går buss Bus fra/til? 
1670 rule
is  exactly 
   (which(A),A isa place,Bus isa route,go/Bus/B,event/real/B,srel/_from/place/A/B)
id	 atday(Day),
    not passevent(_,_,_,_,_,_), %% avoid test departure(_,_,_,_), 
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 exbus(Bus).



% Hvor går buss Bus ? %% moved after fromp
1671 rule 
is  which(Station),PASS/Bus/B,
    srel/_In/place/Station/B,
    not srel/_now/time/_/_ ,                    %% NOW
    not srel/nil/clock/_/_ ,  
    not has/_vehicle/departure/Bus/_, %% TA-001211  %% with timetable

    not srel/_/place/Moholt/_  cond bound(Moholt) ,
           %% not if station is mentioned %% TA-010907

    clear                          %% TA-001018
id	 atday(Day),
    not  passevent(_,_,_,_,_,_), %% avoid test departure(_,_,_,_), %% TA-010516
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus),dmeq(pass,PASS).

% Hvor går buss Bus ? %% moved after fromp
1672 rule 
is  which(Station),PASS/Tramno/B,srel/_In/place/Station/B, 
    not srel/_now/time/_/_ ,   
    not srel/nil/clock/_/_ , 
    clear   
id	 atday(Day),
    not  passevent(_,_,_,_,_,_), %% avoid test    not departure(_,_,_,_),  %% TA-010516
	 add (findstations(Tramno,Day,Stl),
         passesstations(Tramno,Day,Stl,_))
ip	 unbound(Station),dmeq(pass,PASS),
    thetramno(Tramno).


% Does a bus PASS FROM a place? (Place is unbound) 
2013 rule 
is  PASS/_/A,srel/FROM/place/nil/A
id  atday(Day),
    add (departure(Bus,PlaceVar,Day,Depset),
			passevent(Depset,Bus,PlaceVar,[from],Day,A)) 
ip	 dmeq(pass,PASS),dmeq(from,FROM),newfree(PlaceVar).



% Do I PASS FROM a place with bus Bus ? 
2415 rule 
is  Bus isa bus,I isa self,go/I/A,srel/Prep/place/Place/A,srel/with/vehicle/Bus/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[Prep],Day,A))
ip  dmeq([to,from],Prep), %%  (new feature)
    busorfree(Bus),bus_place_station(Bus,Place,Stat). 


% Do I PASS FROM a place with tram ? 
2416 rule 
is  Tram isa tram,I isa self,go/I/A,srel/Prep/place/Place/A,srel/with/vehicle/Tram/A
id	 atday(Day),
	 add (departure(One,Stat,Day,Depset), %% Tram == 1 in Trondheim
         passevent(Depset,Bus,Stat,[Prep],Day,A))
ip  dmeq([to,from],Prep), 
    busorfree(Bus),bus_place_station(Bus,Place,Stat),
    thetramno(One).


% I pass Place from Another place
2035 rule 
is  context Pass/Cat/_Another/B, %% reach  %% pass A from B, don't use up Pass 
    srel/FROMTO/place/Place/B,
    present Cat isa BVP
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[FROMTO],Day,B)) %% TA-010309
ip  dmeq([from,to],FROMTO),
    dmeq([pass,reach],Pass),
    notbothfree(Bus,Place), 
    dmeq(trafficant,BVP),  
    place_station(Place,Stat),newfree(Bus).


% Can someone TRAVEL FROM a place a time?
2043 rule 
is  present TRAVEL/_/Time/B,srel/FROM/place/Place/B
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         keepafter(Time,Depset,NewDepset), %% keepat
			passevent(NewDepset,Bus,Stat,[from],Day,B))
ip   dmeq(travel,TRAVEL),dmeq(from,FROM),
          place_station(Place,Stat),number(Time),newfree(Bus).

% Does a bus PASS FROM a place a time?
2052 rule 
is  present PASS/Bus/Time/A,srel/FROM/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         keepafter(Time,Depset,NewDepset), %% keepat 
			passevent(NewDepset,Bus,Stat,[from],Day,A))
ip  dmeq(from,FROM), busorfree(Bus),
    bus_place_station(Bus,Place,Stat), 
    number(Time),dmeq(pass,PASS).

% is a Place  bus LEAVEing a place? 
2060 rule 
is  present Bus isa bus,present LEAVE/Bus/_,adj/Place/Bus/A %% NB, Place is a PLACE
id	 atday(Day),                                             %% NOT next, etc.
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[from],Day,A))
ip	 dmeq(leave,LEAVE), busorfree(Bus),
    bus_place_station(Bus,Place,Stat). 

% Does a bus LEAVE a place? %%  leave is noe neutral wrp direction
2067 rule 
is  LEAVE/Bus/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A)) 
ip  dmeq(leave,LEAVE),busorfree(Bus),bus_place_station(Bus,Place,Stat).


% pass _ FROM Place
2120 rule 
is  context PASS/Bus/_/A, 
    srel/FROM/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Stat,Place,[from],Day,A))
ip  dmeq(pass,PASS),dmeq(from,FROM),busorfree(Bus),
    bus_place_station(Bus,Place,Stat).


% be FROM
befrom rule 
is  present Bus isa BR,present be1/Bus/C,srel/FROM/_place/Place/C, % place/city
    not comp/number/ne/_/Bus, %% TA-010205
    not present _ isa information %% Ad Hoc ?? TA-010321
id	 atday(Day),
         not   passevent(_,_,_,[from],_,_),    %%  NOT 2 FROMS
         not   connections(_,_,_,_,_,_,_,_,_), %% finished 
	 add (departure(Bus,Station,Day,Depset),
         passevent(Depset,Bus,Station,[from],Day,C)) 

ip	 dmeq([bus,route,route_plan,vehicle,direction,tram,trip],BR), %% TA-010220
    dmeq(from,FROM),
  % dmeq(bus,BR), bus not dmeq(bus,direction) because ..........
    busorfree(Bus),
    bus_place_station(Bus,Place,Station). 

% be TO
beto rule 
is  present Bus isa BR,
    present Be1/Bus/_C,
    srel/TO/_place/Place/C, % place/city
    not comp/number/ne/_/Bus %% TA-010205   
id  atday(Day),                         % from nrel gives different C1 C2

    not passevent(_,Bus,Place,_,_,_), %% at least not %% TA-001128
    not connections(_,_,_,_,_,_,_,_,_),  %%  already identical name

    add (departure(Bus,Station,Day,Depset), %% TA-001019
         passevent(Depset,Bus,Station,[to],Day,C)) 
ip  dmeq([bus,route,direction,tram,car,number,vehicle,trip],BR),  %% beste vei til  %% TA-010229
    dmeq(to,TO),  %% towards means something special  %% EXPERIMENT 
    dmeq([be1,exist],Be1), 
    busorfree(Bus),bus_place_station(Bus,Place,Station),
    Station \== unknown. 

 
%%%%%%%%%%%%% APPDEPs (/arrival/departures) BY


% ARRDEP bus
2162 rule 
is  has/bus/ARRDEP/Bus/_,adj/Place/Bus/E %% same event E
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
        passevent(Depset,Bus,Stat,[],Day,E))
ip	 dmeq(arrdep,ARRDEP),busorfree(Bus),
    bus_place_station(Bus,Place,Stat). 



listdeparture rule
is    test, tuc isa program,Bus isa BR,
      A isa departure,be1/A/E,srel/_/_/Bus/E,
      list/tuc/A/_,
      clear  %% DONT MIX
id    atday(Day),
	   add (findstations(Bus,Day,Stl),
      passesstations(Bus,Day,Stl,_))
ip    bound(Bus),dmeq(bus,BR).


%%%%%%%%%%%%% take the bus BY

% someone take the bus BY a place
2212 rule 
is  present take/_/Bus/A,srel/BY/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(by,BY),busorfree(Bus),
    bus_place_station(Bus,Place,Stat).


% Bus take me
2224 rule 
is  present take/Bus/_/C,present Bus isa bus,srel/BY/place/Place/C
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip  dmeq(by,BY),place_station(Place,Stat),busorfree(Bus). 

% take BY
2230  rule 
is  present take/_/_/C,srel/BY/place/Place/C
id	 atday(Day),
    add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C)) %% same event C !
ip  dmeq(by,BY),place_station(Place,Stat),newfree(Bus). 



sorttofrom rule %%   in/place to/place ==> from/place to/place
is  replaceall (srel/in/place/M/E,  srel/to/place/S/E)
    with       (srel/from/place/M/E,srel/to/place/S/E)
id  []
ip  M \== S.


 

toplaceobviously  rule
is  context Bus isa BVP,    %% don't hide the very bus number present ???
    context  TRAVEL/Bus/B,  %% TA-001112                      present ???

    srel/to/_/Place/X, 
    not present start/_/X

id  atday(Day),
    not  passevent(_,_,_,_,_,_), %% departure(_,Place,_,_),   % not already allocated
    add (departure(Bus,Station,Day,Depset), 
         passevent(Depset,Bus,Station,[to],Day,B)) 
ip  dmeq(travel,TRAVEL),
    %%% dmeq([self,bus,tram],BVP), %% 
    dmeq(trafficant,BVP),  %% TA-001019  %%  Not
                                                %% not cat, not bus ?????
    place_station(Place,Station), Station \== unknown,
    newfree(Bus).


% someone TRAVEL FROM a place? 
fromplace1  rule 
is  srel/FROM/_/Place/_, present TRAVEL/Cat/B,
    present Cat isa BVP
id  atday(Day),
    not   passevent(_,_,_,[from],_,_), 
    not   connections(_,_,_,_,_,_,_,_,_), %% finished 
    not  departure(Bus,Place,Day,Depset),
    add (departure(Bus,Station,Day,Depset), 
         passevent(Depset,Bus,Station,[from],Day,B)) 
ip  dmeq(travel,TRAVEL),
    dmeq([from,after],FROM),  %% due wrong parse %% TA-010722 
    dmeq(trafficant,BVP), 
    place_station(Place,Station), Station \== unknown, 
    newfree(Bus).

/****  Suspended  %% TA-011019

% is it possible to be on NTH //// I am on NTH and ...
betoplace rule %% TA-010612
is   srel/TO/place/Place/C,
     be1/Agent/C,
     Agent isa Whatever
id   atday(Day),
     not passevent(_,_,Place,_,_,_), % not already covered
     add (departure(Bus,Stat,Day,Depset),
          passevent(Depset,Bus,Stat,[to],Day,C))
ip  dmeq([on,to,for,towards,in,near],TO), %% TA-010214
    i_am_a_bus(Agent,Whatever,Bus),
    bus_place_station(Bus,Place,Stat),
    Stat \== unknown.

*/


% and ...  I am on NTH and ...
befromplace rule %% TA-010612
is   srel/on/place/Place/C,
     present go/Agent/C,
     Agent isa Whatever
id   atday(Day),
     not passevent(_,_,Place,_,_,_),
     add (departure(Bus,Stat,Day,Depset),
          passevent(Depset,Bus,Stat,[from],Day,C))
ip  i_am_a_bus(Agent,Whatever,Bus),
    bus_place_station(Bus,Place,Stat),
    Stat \== unknown.


% Does a bus TRAVEL TO a place? %% KNOWN bus Moved before toplace1
busNtoplace rule %% TA-001112
is   srel/TO/place/Place/C,
     present TRAVEL/Bus/C,
     present Bus isa BUS 
id   atday(Day),
                                     %% TA-011008
%%% ####     not passevent(_,_,Stat,_,_,_),  % OOPS Must check the station !
                                     % to nardo is storted as
												 % Place=nardosenteret !!!
          add (departure(Bus,Stat,Day,Depset),
          passevent(Depset,Bus,Stat,[to],Day,C))
ip  dmeq(travel,TRAVEL),
    dmeq([on,to,for,towards,in,near],TO), %% TA-010214
    dmeq([bus,self,agent,route,departure,tram,it],BUS), %% TA-010611
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat),
    Stat \== unknown.


%% Jeg er på lade og skal til dragvoll ==> TO dragvoll

 
% someone TRAVEL TO a place? 
toplace1  rule
is  present TRAVEL/Cat/B,
    srel/TO/_/Place/X, 
    present Cat isa BVP,
    not present start/_/X
id  atday(Day),
    not  departure(_,Place,_,_),   % not already allocated
 
    not passevent(_Depset,_Bus,Station,Opts,_Day,_B) cond
                                  testmember(to,Opts), %% TA-010928
    not passevent(_Depset,_Bus,Place,Opts,_Day,_B) cond testmember(to,Opts), 
                               %***% was _
    add (departure(Bus,Station,Day,Depset), 
         passevent(Depset,Bus,Station,[to],Day,B)) 
ip  dmeq(travel,TRAVEL),
    dmeq([at,for,in, %% on, Jeg er på NTH og skal til ... %% TA-011019
         to,towards],TO), %% TA-010605 derived    gå i byen// arrive at
    dmeq(trafficant,BVP),  %% Not CAT, not BUS ??? self only %% TA-001021
    place_station(Place,Station), Station \== unknown,
    i_am_a_bus(Cat,BVP,Bus). %% TA-010607

%%     newfree(Bus). %% Should be same as Bus  %% TA-010607



%% FINDSTATION SECTION  2  %% MOVED BACK

findstation12  rule %%  TA-010115 
is  which(R), Run/Bus20/R/A,  Bus20 isa bus,R isa route
id	 atday(Day),
	 add (findstations(Bus20,Day,Stl),
         passesstations(Bus20,Day,Stl,A))
ip	 dmeq([run,go2],Run).  %% TA-010924

% Hvor kan jeg PASS on Bus
findstation13 rule 
is  which(Station),PASS/_/B,srel/In/place/Station/B,srel/On/VEHICLE/Bus/B,
    present Bus isa bus
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 dmeq([in,at],In), 
    dmeq([on,off,by],On), %% TA-010117 av -> by   Repair Hack
    unbound(Station),exbus(Bus),dmeq(pass,PASS),dmeq(vehicle,VEHICLE).
 
% Where can i get off Bus
findstation14 rule 
is  which(Place),present Bus isa bus,present get/_/E,
	 srel/in/place/Place/E,srel/off/VEHICLE/Bus/E
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,E))
ip	 unbound(Place),exbus(Bus),dmeq(vehicle,VEHICLE).

% Where can i get on Bus
findstation15 rule 
is  which(Place),present Bus isa bus,present get/_/E,
	 srel/in/place/Place/E,srel/on/VEHICLE/Bus/E
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,E))
ip	 unbound(Place),exbus(Bus),dmeq(vehicle,VEHICLE).


% Which stations is AT route Bus
findstation16 rule 
is  which(St),be1/St/A,srel/AT/bus/Bus/A,Bus isa bus,St isa station
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,A))
ip	 dmeq(at,AT),unbound(St),exbus(Bus).  %% dmeq first

% Hva er stasjoner til en buss 
findstation17 rule 
is  Station isa station,be1/Station/E,srel/to/vehicle/Bus/E 
    %% which(Station) 
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus).

% Hva er stasjonene til en buss
findstation18  rule 
is  which(Station),has/vehicle/station/Bus/Station
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus).

findstation19 rule %%   ruteplan for en buss
is  % which(Route), %% kan du vise meg %% TA-010320
    has/BR/Route_plan/Bus/_Route
id  not passevent(_,_,_,_,_,_), %% TA-010904
    atday(Day),
    add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip  dmeq([bus,route,vehicle],BR), 
    dmeq([route_plan,route],Route_plan),
    exbus(Bus).


findstation20 rule  %% Variant   rute for en rute
is  which(Route),has/BR/Route_plan/Route/Bus  %% hvilken rute har buss 54
id       atday(Day),
         add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip       dmeq([bus,route,vehicle],BR), 
    dmeq([route_plan,route],Route_plan),
    exbus(Bus).


% Hva er trasee for en rute 
findstation30 rule 
is  which(Route),B52 isa bus,
    Route isa route_plan,srel/FOR/BR/B52/_E, 
    not srel/_with/time/_/_ , %%   (Detail)
    not srel/_/place/_/_   
id	 atday(Day),
	 add (findstations(B52,Day,Stl),passesstations(B52,Day,Stl,_))
ip	 dmeq(for,FOR), dmeq(bus,BR),
    unbound(Route),exbus(B52).

% Hvor kan jeg ta en Bus
findstation40 rule 
is  which(Station),take/_/Bus/B,srel/in/place/Station/B,present Bus isa bus
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus).

% Hvor kan jeg PASS en Bus
findstation50 rule 
is  which(Station),PASS/_/Bus/B,srel/in/place/Station/B,present Bus isa bus
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus),dmeq(pass,PASS).

% Hvor kan jeg PASS off Bus
findstation60 rule
is  which(Station),PASS/_/B,srel/in/place/Station/B,srel/off/VEHICLE/Bus/B,
    present Bus isa bus
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus),dmeq(pass,PASS),dmeq(vehicle,VEHICLE).

% Hvor kan jeg PASS with Bus
findstation70 rule 
is  which(Station),PASS/_/B,srel/in/place/Station/B,
    srel/with/VEHICLE/Bus/B,present Bus isa bus
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),passesstations(Bus,Day,Stl,_))
ip	 unbound(Station),exbus(Bus),dmeq(pass,PASS),dmeq(vehicle,VEHICLE).


% Where PASS the Bus bus
findstation80  rule 
is  which(Place),PASS/B/D,srel/in/place/Place/D,
    present B isa bus, present adj/Bus/B/_
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),
         passesstations(Bus,Day,Stl,_))
ip	 unbound(Place),exbus(Bus),dmeq(pass,PASS).


% Hviken ruteplan/rute  tar/følger buss 20
findstation90 rule %% TA-010123
is  which(A),A isa RP,Bus isa Veh,Take/Bus/A/_
id	 atday(Day),
	 add (findstations(Bus,Day,Stl),
         passesstations(Bus,Day,Stl,_))
ip	 bound(Bus),dmeq([take,follow,pass],Take),
    dmeq([route,route_plan],RP),dmeq(vehicle,Veh).


%%%%% End of FindStation Section %%%%%%%%%%%%%%%%%



%%%%%%%%%%%%% PASS/TRAVEL/be1 etc. BY

%%%%% To steder... TOFROMBY

% TID Does a bus PASS BY two places? % OR A PERSON 
2247 rule 
is  Bus isa Busman,present PASS/Bus/A,srel/TOFROMBY/place/(StartPlace,EndPlace)/A
id	 atday(Day),
	 add (departure(Bus,StartStat,Day,StartDepset),
			passevent(StartDepset,Bus,StartStat,[],Day,A),
			departure(Bus,EndStat,Day,EndDepset),
			passevent(EndDepset,Bus,EndStat,[],Day,A))
ip	 dmeq(tofromby,TOFROMBY),
    place_station(StartPlace,StartStat),place_station(EndPlace,EndStat),
    dmeq(pass,PASS),busman(Bus,Busman).

% TID Does a bus PASS two places?
2264 rule 
is  present Bus isa bus,PASS/Bus/(StartPlace,EndPlace)/A
id	 atday(Day),
	 add (departure(Bus,StartStat,Day,StartDepset),
			passevent(StartDepset,Bus,StartStat,[],Day,A),
			departure(Bus,EndStat,Day,EndDepset),
			passevent(EndDepset,Bus,EndStat,[],Day,A))
ip  place_station(StartPlace,StartStat),place_station(EndPlace,EndStat),
    dmeq(pass,PASS).

%%%%% Ett sted... BY  To/FROM otion = []

% Does a bus PASSBY a place? (Place is unbound)
2275 rule 
is  exactly (which(Time),Bus isa bus, Time isa Timeq,
				 PASSBY/Bus/Place/C,event/real/C,srel/in/time/Time/C)
id	 atday(Day),
	 add (departure(Bus,Place,Day,Depset),
			passevent(Depset,Bus,Place,[],Day,C))
ip	 unbound(Place),dmeq(passby,PASSBY),dmeq(time,Timeq).


% Do I  TRAVEL BY a place?
2284 rule 
is  present I isa SELF, present TRAVEL/I/C, srel/BY/place/Place/C
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip	 dmeq(travel,TRAVEL), 
    TRAVEL \== arrive, %% postpone arrive destination , to arrive at = go to
    TRAVEL \== come,   %% TA-010826
    dmeq(by,BY),dmeq([self,program],SELF), 
    place_station(Place,Stat),newfree(Bus).


% Does a bus TRAVEL BY a place? Detect to option 
%     hvis jeg skal være i hornebergveien kl 1500

2287 rule 
is  srel/BY/place/Place/C,present Bus isa BR,present TRAVEL/Bus/C
id	 atday(Day),
	 passevent(_,_,_,Opts0,_,_),
    add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[to],Day,C))
ip	 member(from,Opts0),
    dmeq(bus,BR),dmeq(travel,TRAVEL),dmeq(by,BY),
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat). %% OOPS  nth 


% Does a bus TRAVEL BY a place? 
travelby rule 
is  srel/BY/Placoid/Place/C,present Bus isa BR,present Go/Bus/_C 
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip  dmeq(vehicle,BR), %% also Tram
    dmeq([go,stop,run],Go), %% TA-010205
    dmeq([place,neighbourhood,station],Placoid), %% TA-010130
    dmeq(by,BY),
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat). %% OOPS  nth 

% someone TRAVEL BY bus by a place? 
2303 rule 
is  present Bus isa bus,present TRAVEL/_/A,
    present srel/by/vehicle/Bus/A,srel/BY/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(travel,TRAVEL),dmeq(by,BY),place_station(Place,Stat),
    busorfree(Bus). 



% Can someone TRAVEL BY a place a time?
2316  rule 
is  present TRAVEL/_/Time/B,srel/BY/place/Place/B
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         keeparound(Time,Depset,NewDepset), %% keepat
			passevent(NewDepset,Bus,Stat,[],Day,B))
ip  dmeq(by,BY),place_station(Place,Stat),number(Time),
    dmeq(travel,TRAVEL),   newfree(Bus). 
 

% Does a bus PASS BY a place a time?
2325 rule 
is  present PASS/Bus/Time/A,srel/BY/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
          keeparound(Time,Depset,NewDepset), %% keepat 
			passevent(NewDepset,Bus,Stat,[],Day,A))
ip  dmeq(pass,PASS),dmeq(by,BY),place_station(Place,Stat),
    busorfree(Bus),number(Time). 

% is a NN bus PASSing a place?
2333 rule 
is  present Bus isa bus,present PASSBY/Bus/_,adj/Place/Bus/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip	 dmeq(passby,PASSBY),place_station(Place,Stat),
    busorfree(Bus). 

% Does a place belog to a route? 
somepassbybus0 rule 
is  belong_to/Place/Bus/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  busorfree(Bus),
    bus_place_station(Bus,Place,Stat).

% Does a bus PASS a place?  Dragvoll misere
somepassbybus1 rule 
is  PASSBY/Bus/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(passby,PASSBY),busorfree(Bus),
    bus_place_station(Bus,Place,Stat). 

% Does a bus PASS a place?  Dragvoll misere 
somepassbybus2 rule 
is  has/route/station/Bus/Place
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,F))
ip  busorfree(Bus),newfree(F),
    bus_place_station(Bus,Place,Stat).


% På hvilke ruter fins moholt %% TA-010116
somepassbybus3 rule 
is  which(A),A isa route,
    be1/Place/B,srel/on/route/A/B,event/real/B
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,F))
ip  busorfree(Bus),newfree(F),
    bus_place_station(Bus,Place,Stat).




% pass _ BY Place
passbyplace rule 
is  present PASS/Bus/_/A,srel/BY/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(by,BY),dmeq(pass,PASS),
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat).   


hasstation1 rule %%     after keepbus / before mustknowplace1%% TA-001030
is  replaceall (R isa BR, has/route/station/R/A,A isa station)
    with       (R isa route, A isa station,pass/R/A/E)
id  []
ip  dmeq(bus,BR),bound(R),newfree(E).


hasstation2 rule %%  after keepbus
is  replaceall (R isa BR, be1/A/E, srel/FOR/BR2/R/E, A isa Station)
    with       (R isa route, A isa station,pass/R/A/E)
id  []
ip dmeq([on,for],FOR), dmeq(bus,BR),dmeq(bus,BR2),
   dmeq([station,arrival],Station),bound(R).  %% stopp = arrival %% TA-001030



mustknowplace1 rule  % hvilke avganger har en buss 
is   which(X),
     X isa BR, %% BR slår til på tid, alle når spørsmål trigger
     not present _ isa neighbourhood,      %% rough 
     not present belong_to/_/_/_, 
     not present serve/_/_/_,              %% TA-001112
     not present cover/_/_/_,              %% TA-001112
     not present srel/_/place/_/_,
     not present srel/_/neighbourhood/_/_, 
     not present srel/_/station/_/_,       %% off station 
     not present pass/_/_/_,  
     not present go2/_/_/_,                %% TA-010621
     not present leave/_/_/_,
     not present has/route/station/_/_, 
     not present adj/make/_/_,              %% etc ad N
     not _ isa price,  
     not _ isa version, 
     clear                                  %%  <--- !     

id   not message(noinfoabout(_)),           %% TA-010621
     not findstations(_,_,_),               %% TA-010828
     addcon message(mustknow(place))
ip   \+ user: value(dialog, 1),          %% T (Oops)
     dmeq(busdeparr,BR).

mustknowplace15  rule  % hvilke avganger har en buss %% mess if pass  etc
is   X isa BR, Travel/X/_/_,%%
     not srel/to/place/_/_ %% SIC! %% TA-010227
id   not message(_),   
     not ticketprice(_), 

     addcon  message(mustknow(place))
ip   dmeq(busdeparr,BR),
     dmeq(travel,Travel), 
     unbound(X).  


mustknowplace2 rule  % hvilke avganger har en buss %% mess if go etc
is                                 %%  kan jeg få/
     not (present ST0 isa station) cond bound(ST0),   %% TA-010718
     X isa BR, Go/X/_, %%
     not has/_route/number/_/_,
     not present _ isa neighbourhood, 
  
     not present srel/_/place/_/_,
     not present srel/_/station/_/_,  %% off station 
     not present _ isa internet, 
     not present _ isa route_plan,
     not present exist/_/_,            %% abstract  question
     not present has/_/route/_/_,  
     not present has/vehicle/_/_/_,
     not present _ isa agent,         %% hvem kjører bussen ??? 
     not present use/_/_/_,           %% hvilket drivstoff bruker bussen
     not present _ isa sundayroute,   %% TA-010612
%     not adj/_/X/_ ,                 %% TA-001011 Er bussen kjedelig/elektrisk ...
                                      %% next is OK
                                      %% fullstendig bussliste

     not has/_/endstation/_/_ ,  
     not present has/route/station/_/_   

id	  not message(_), 
     not ticketprice(_), 
     addcon  message(mustknow(place))
ip   dmeq(busdeparr,BR),
     dmeq(travel,Go), 
     unbound(X).       %% New busdeparrtime
                       %% når ble du født ?  ==> mustknowplace ...

mustknowplace3 rule %% TA-010201
is  run/It/X/_, X isa BR 
id  addcon  message(mustknow(place))
ip  dmeq(['I',it],It),
    dmeq(busdeparr,BR).





% be BY
beby  rule 
is  present Bus isa BR,
             % present be1/Bus/C, // may be missing %% TA-011018
    srel/BY/PLACE/Place/C
id	 atday(Day),
    not findstations(_,_,_),   % why was this commented ???   %% TA-011018
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip	 dmeq(by,BY),dmeq(place,PLACE),dmeq(busdeparr,BR),  
    busorfree(Bus),bus_place_station(Bus,Place,Stat). 

% be AT Place % This is too greedy, (How many girls are there)
2392 rule 
is  present be1/X/C,srel/AT/place/Place/C, X  isa Vehicle 
id  atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip  dmeq(at,AT),place_station(Place,Stat),dmeq(vehicle,Vehicle). 

%%%%%%%%%%%%% take the bus TO  

% someone take the bus TO a place
2468 rule 
is  present TAKE/_/Bus/A,srel/TO/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(to,TO),dmeq(use,TAKE),place_station(Place,Stat),busorfree(Bus). 

% Bus take me
2480 rule 
is  present take/Bus/_/C,present Bus isa bus,srel/TO/place/Place/C
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C))
ip  dmeq(to,TO),place_station(Place,Stat),busorfree(Bus). 

% take TO
2486 rule 
is  present take/_/_/C,srel/TO/place/Place/C
id	 atday(Day),
    add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,C)) %% same event C 
ip  dmeq(to,TO),place_station(Place,Stat),newfree(Bus). 

%%%%%%%%%%%%% PASS/TRAVEL/be1 etc. TO

% Does a bus COME a place? (Place is unbound)
2502  rule 
is  exactly (which(Time),Bus isa bus, Time isa Timeq,
				 COME/Bus/Place/C,event/real/C,srel/in/time/Time/C)
id	 atday(Day),
	 add (departure(Bus,Place,Day,Depset),
			passevent(Depset,Bus,Place,[],Day,C))
ip	 unbound(Place),dmeq(come,COME),dmeq(time,Timeq).



% Does a bus PASS TO a place? (Place is unbound)
2517 rule 
is  PASS/_/A,srel/TO/place/nil/A
id  atday(Day),
    add (departure(Bus,PlaceVar,Day,Depset),
			passevent(Depset,Bus,PlaceVar,[],Day,A))
ip	 dmeq(pass,PASS),dmeq(to,TO),newfree(PlaceVar).

% Does a bus PASS TO a place?
gotoplace rule
is  PASS/Bus/A,srel/TO/place/Place/A,
    present Bus isa BVP
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(pass,PASS),dmeq(to,TO),
    dmeq(trafficant,BVP), 
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat),
    Stat \== unknown.

% someone TRAVEL by bus a place? 
2530 rule 
is  present Bus isa bus,present TRAVEL/_/A,
    present srel/by/vehicle/Bus/A,srel/TO/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(travel,TRAVEL),dmeq(to,TO),
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat).


% someone TRAVEL TO a place when I start at ...
2536  rule
is  present TRAVEL/Cat/B, start/_/X ,  %% when I start at
    srel/AT/_/Place/X,
    present Cat isa BVP
   
id  atday(Day),
    not  departure(Bus,Place,Day,Depset),
    add (departure(Bus,Station,Day,Depset), 
         passevent(Depset,Bus,Station,[from],Day,B)) %% NB from
ip  dmeq(travel,TRAVEL),
    dmeq([for,in,on,at],AT), %%  derived    gå i byen// arrive at
    dmeq(trafficant,BVP),           %% Experiment  Not CAT
    place_station(Place,Station),newfree(Bus).


% someone pass a place? 
2538  rule
is  present I isa self, P isa Place,present PASS/I/P/B 
id       atday(Day),
    not  departure(Bus,P,Day,Depset), 
         add (departure(Bus,P,Day,Depset),
         passevent(Depset,Bus,P,[],Day,B))
ip  dmeq(pass,PASS),
    dmeq(place,Place),
    statorplace(P),newfree(Bus).


% Can someone TRAVEL TO a place a time?
2544 rule 
is  present TRAVEL/_/Time/B,srel/TO/place/Place/B
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
          keepbefore1(Time,Depset,NewDepset), %% keepat %% < 1 hour before
			passevent(NewDepset,Bus,Stat,[],Day,B))
ip  dmeq(travel,TRAVEL),number(Time),
    dmeq(to,TO),place_station(Place,Stat),newfree(Bus). 

% Does a bus PASS TO a place a time?
2553 rule 
is  present PASS/Bus/Time/A,srel/TO/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
           keepbefore1(Time,Depset,NewDepset), %% keepat %% < 1 hour before 
			passevent(NewDepset,Bus,Stat,[],Day,A))
ip  dmeq(pass,PASS),dmeq(to,TO),number(Time),
    busorfree(Bus),bus_place_station(Bus,Place,Stat). 

% is a Place bus  COMEing?
2569 rule 
is  present Bus isa bus,present COME/Bus/_,adj/Place/Bus/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip	 dmeq(come,COME),
    busorfree(Bus),
    bus_place_station(Bus,Place,Stat).

% Does a bus COME a place?
2575  rule 
is  COME/Bus/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[],Day,A))
ip  dmeq(come,COME),busorfree(Bus),
    bus_place_station(Bus,Place,Stat).

% pass _ TO Place
2585 rule 
is  present PASS/Bus/_/A, 
    srel/TO/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[to],Day,A))
ip  dmeq(to,TO), dmeq(pass,PASS),
    busorfree(Bus),bus_place_station(Bus,Place,Stat).

% when PASS Bus TO Place,   srel variant
2601 rule 
is  present srel/TO/place/Place/B,present PASS/Cat/B,
    present Cat isa BVP
id	 atday(Day),
         replace  passevent(Depset,Bus,Place,[],Day,B)
         with     passevent(Depset,Bus,Place,[to],Day,B) 
ip	 dmeq(to,TO),dmeq(pass,PASS),
    dmeq(trafficant,BVP), 
    statorplace(Place),busorfree(Bus).



befed rule  %%  Dirty rule
is    R isa route,  Bus isa bus,  
      be1/R/X, event/real/X, srel/for/bus/Bus/X, % route for Bus 
      be1/R/C, event/real/C, srel/TO/place/Place/C

id	 atday(Day),
    add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[to],Day,C)) %% same event C 
ip	 dmeq(to,TO),bus_place_station(Bus,Place,Stat).



%%%%% Default-regler for fraser helt uten steder (Place is unbound)

% ARRDEP with buss (Place is unbound) 

2905 rule 
is  present  Arrdep isa ARRDEP, %% which(Arrdep), %% also test
    be1/Arrdep/E,srel/with/bus/Bus/E , 
    not present srel/_/place/_/_  

id  not passevent(_,Bus,_,_,_,_),
    not connections(_,_,Bus,_,_Fro,_,_,_,_),
    atday(Day),
    add (departure(Bus,hovedterminalen,Day,Depset),
			passevent(Depset,Bus,hovedterminalen,[],Day,_))
ip  dmeq(arrdep,ARRDEP), busorfree(Bus),
    bound(Bus),                                 %% does it blur the rule
    \+ neverpasses(Bus,hovedterminalen).


2906 rule 
is  present  Arrdep isa TAR, %% which(Arrdep), %% also test
    has/bus/ARRDEP/Bus/Arrdep,
    not present srel/_/place/_/_             %%  etc. etc. etc.

id  not passevent(_,Bus,_,_,_,_),
    not connections(_,_,Bus,_,_Fro,_,_,_,_),
    atday(Day),
    add (departure(Bus,hovedterminalen,Day,Depset),
			passevent(Depset,Bus,hovedterminalen,[],Day,_))
ip  dmeq(arrdep,ARRDEP),dmeq(arrdep,TAR), 
    busorfree(Bus), 
    bound(Bus),                                 %% does it blur the rule
    \+ neverpasses(Bus,hovedterminalen).


% ARRDEP for buss (Place is unbound)

2907 rule 
is  present  Arrdep isa ARRDEP, %% which(Arrdep), %% also test
    has/bus/ARRDEP/Bus/Arrdep
id  not passevent(_,Bus,_,_,_,_),
    not connections(_,_,Bus,_,_Fro,_,_,_,_),
    addcon  message(mustknow(place)) 
ip  dmeq(arrdep,ARRDEP),
    busorfree(Bus),
    bound(Bus), 
    neverpasses(Bus,hovedterminalen).

% PASS Bus (Place is unbound)
passbussomewhere  rule 
is  Bus isa BR,PASS/Bus/A,
    not comp/number/ne/_/Bus % except %% TA-010529

id	 atday(Day), 
    not message(not(bus,_)),
    not message(mustknow(_)), 
    not passevent(_,_,_,_,_,_), %% departure(_,_,_,_), %% TA-010529
	 not findstations(_,_,_), 
    not passesstations(_,_,_,_), 
    add (departure(Bus,PlaceVar,Day,Depset),
			passevent(Depset,Bus,PlaceVar,[],Day,A))
ip	 dmeq(bepass,PASS),dmeq(vehicle,BR), 
    bound(Bus), 
    Bus \== it,            %% TA-010117 Hack
    newfree(PlaceVar).

%%%%%%%%%%%%% ARRDEPs (/arrival/departures) TO / FROM

% is ARRDEP TO Place
istoplace rule %% TA-010923
is  present B isa ARRDEP, present be1/B/A, srel/TO/place/Place/A
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[TO],Day,A)) 
ip  dmeq(to,TO),place_station(Place,Stat),dmeq(arrdep,ARRDEP), 
    newfree(Bus).


% is ARRDEP FROM Place, Bus is UNKNOWN !!!
isfromplace rule  %% TA-010923
is  present B isa ARRDEP,present be1/B/A, srel/FROM/place/Place/A 
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[FROM],Day,A)) 
ip  dmeq(arrdep,ARRDEP),dmeq(from,FROM),place_station(Place,Stat), 
    newfree(Bus).



% ARRDEP bus
2968 rule 
is  has/bus/departure/Bus/_,adj/Place/Bus/A %% same A !!
id	 atday(Day),
	 add (departure(Bus,Stat,Day,Depset),
         passevent(Depset,Bus,Stat,[from],Day,A)) 
ip	 place_station(Place,Stat),busorfree(Bus). 


% % % % % % 


%% PLASS Which places does a bus PASS?

2039 rule %%  after 2649
is  present which(Place),
    present Place isa Plak,
    PASS/Bus/Place/A
id	 atday(Day),
    not departure(Bus,_,_,_), %% passevent is removed by conn.
                              %% TA-010614
	 add (findstations(Bus,Day,Stl),
         passesstations(Bus,Day,Stl,A))
ip	 dmeq(pass,PASS),
    dmeq(place,Plak), %%i.e.not time
    unbound(Place),exbus(Bus).



% Panic   first,next 4,  no departure yet
2915 rule 
is  quant(eq/N,Bus),Bus isa BR,adj/POSITION/Bus/E 
id	 not message(not(bus,_)),
    not departure(_,_,_,_),
	 atday(Day), 
    add (timenow(Time),
         departure(Bus,PlaceVar,Day,Depset),
         keepafter(Time,Depset,Depset1),
			passevent(Depset1,Bus,PlaceVar,[POS1],Day,E)) 
ip	 ( POSITION=first; POSITION=next),
    dmeq(bus,BR),dmeq(position,POSITION), busorfree(Bus),
    bound(PlaceVar), %% newfree(PlaceVar), 
    corresporder(POSITION,N,POS1). 

% Panic   previous,last 4,  no departure yet
2916 rule
is  quant(eq/N,Bus),Bus isa BR,adj/POSITION/Bus/E 
id	 not message(not(bus,_)),not departure(_,_,_,_),
	 atday(Day), 
    add (timenow(Time),
         departure(Bus,PlaceVar,Day,Depset),
         keepbefore(Time,Depset,Depset1),
			passevent(Depset1,Bus,PlaceVar,[POS1],Day,E)) 
ip	 ( POSITION=last; POSITION=previous),
    dmeq(bus,BR),dmeq(position,POSITION), busorfree(Bus),
    bound(PlaceVar), %% newfree(PlaceVar),
    corresporder(POSITION,N,POS1). 


%% manyplaces % moved before  2927  NEXT bus home 
home1  rule 
is  srel/Home/PLACE/nil/_,
    clear
id	 not departure(_,_,_,_),
    addcon  message(mustknow(place)) 
ip  dmeq([home,away],Home),dmeq([place,direction],PLACE). 

%% manyplaces % moved before  2927  NEXT bus home 
home2  rule 
is  has/person/house/_/_, 
    clear
id	 not departure(_,_,_,_),
    addcon  message(mustknow(place)) 
ip  [].



2676 rule 
is  Bus isa bus,PASS/Bus/A
id	 not message(not(bus,_)),
    not departure(_,_,_,_),
	 not findstations(_,_,_), 
    not passestations(_,_,_,_),
    add (departure(Bus,PlaceVar,Day,Depset),
			passevent(Depset,Bus,PlaceVar,[],Day,A))
ip	 exbus(Bus),
    dmeq(pass,PASS),newfree(PlaceVar).




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Ingen nye departure,passctrl under her
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



2701 rule 
is  present howmany(A),  PASS/Bus/A/_ ,
    not present srel/_Prep/place/_/_ 

id	 atday(D),
    add (findstations(Bus,D,SL),numberof(stations,SL,_)) 
ip	 dmeq(pass,PASS),unbound(A),exbus(Bus).



%%%%% Sted ikke oppgitt, defaulter til hovedterminalen

%%  EXPERIMENT

notdefault_ht_bus rule %% TA-010215
is  []
id  atday(Day), 
    not numberof(stations,_,_),
    not message(mustknow(place)),
    departure(Bus,PlaceVar,Day,_Depset1),
    clear,
    add message(mustknow(place))
ip  bound(Bus), 
    \+ thetramno(Bus), %% TA-001119
    unbound(PlaceVar), 
    neverpasses(Bus,hovedterminalen)
   
 :- single.

default_ht_bus rule
is  []
id  atday(Day), 
    not numberof(stations,_,_),
    not message(mustknow(place)), 
    replace departure(Bus,PlaceVar,Day,Depset1)
     with   departure(Bus,hovedterminalen,Day,Depset1),
    replace passevent(Depset2,Bus,PlaceVar,Opts,Day,A)
      with  passevent(Depset2,Bus,hovedterminalen,Opts1,Day,A)
ip  bound(Bus), 
    \+ thetramno(Bus), %% TA-001119
    unbound(PlaceVar), 
    \+ neverpasses(Bus,hovedterminalen), %% TA-010215
    setopt(from,Opts,Opts1) %% Experiment   

    :- single.

default_ht_tram rule
is  []
id  atday(Day), 
    not numberof(stations,_,_),
    not message(mustknow(place)), 
    replace departure(Bus,PlaceVar,Day,Depset1)
     with   departure(Bus,STOGT,Day,Depset1),
    replace passevent(Depset2,Bus,PlaceVar,Opts,Day,A)
      with  passevent(Depset2,Bus,STOGT,Opts1,Day,A)
ip  bound(Bus),
    thetramno(Bus), %% TA-001119
    thetramstation(STOGT), %% TA-001119
    unbound(PlaceVar), 
    setopt(from,Opts,Opts1)

    :- single.


default_ht  rule
is  []
id  atday(Day), not numberof(stations,_,_),
    not askfor(_, where::departure, _),
    replace departure(Bus,PlaceVar,Day,Depset1)
         with    departure(Bus,DepPlace,Day,Depset1),
         replace passevent(Depset2,Bus,PlaceVar,Opts,Day,A)
    with    passevent(Depset2,Bus,DepPlace,Opts,Day,A),
    addfront askfor([], where::departure, DepPlace)
ip  unbound(PlaceVar)

    :- \+ single.

%%%%%% Spørsmål om trikk og flybuss og båt  %%%%% 

%%%%% Ber eksplisitt om _alle_ avgangene

2764 rule 
is  which(Bus:Time),present Bus isa bus,present Time isa Timeq
id  replace passevent(Deps,Bus,Place,_,Day,A)
    with    passevent(Deps,Bus,Place,[all],Day,A)
ip  dmeq(time,Timeq).

2769  rule 
is  which(Arrdep:Time),present Arrdep isa ARRDEP,present Time isa Timeq
id  replace passevent(Deps,Bus,Place,_,Day,A)
    with    passevent(Deps,Bus,Place,[all],Day,A)
ip  dmeq(arrdep,ARRDEP),dmeq(time,Timeq).


%   which number(?) are on the buses

2784 rule 
is  which(BusN),be1/BusN/E,srel/on/object/Bus/E,present Bus isa bus
id	 replace passevent(A,Bus,B,_,C,D) with 
    passevent(A,Bus,B,[buses],C,D)
ip	 [].



%%%%%%%%%% Tidsbegrensninger etc. %%%%%%%%%%%%%%%%%%%%%%%%%

% ...in Time time (i 16 tida = around 16) % Norwagism 
2799 rule 
is  srel/in/time/Time/C,srel/nil/time/T/C
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
    with    ( % inttime(Time,MinTime)

             keeparound(Time,Deps,NewDeps), %% NEW in buslog 
             passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip  number(Time),unbound(T),
    setopt(time,Opts,Opts1). 

% ...in time Time1 to Time2
2800 rule 
is  srel/in/time/Time1/A,srel/to/time/Time2/A,adj/time/Time1/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with (
               keepbetween(Time1,Time2,Deps,NewDeps),
               passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip  number(Time1),number(Time2),
    setopt(time,Opts,Opts1).

%  for   30 minutter siden

minago  rule 
is  Minutes  isa minute,srel/ago/_time/Minutes/_C  %% _time = minute sometimes
id	 replace passevent(Deps,Bus,Place,Opts,Day,C) 
	 with    (timenow(Time),
             subfromtime(Time,Minutes,TM),
             keepafter(TM,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(Minutes),
    setopt(time,Opts,Opts1).
  

aftermin rule 
is  Minutes  isa minute,srel/AFTER/MINUTE/Minutes/_C  %% before etc ?
id	 replace passevent(Deps,Bus,Place,Opts,Day,C) 
	 with    (timenow(Time),
                  addtotime(Time,Minutes,TM),
             keepafter(TM,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  dmeq([after,about,withafter],AFTER), 
    number(Minutes),dmeq(minute,MINUTE),
    setopt(time,Opts,Opts1).
   

aftersec rule
is  Seconds  isa second,srel/AFTER/_/Seconds/_C 
id	 replace passevent(Deps,Bus,Place,Opts,Day,C) 
	 with (timenow(Time),
              addtotime(Time,Minutes,TM),
              keepafter(TM,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  dmeq([after,about,withafter],AFTER), 
    number(Seconds),Minutes is Seconds//60,
    setopt(time,Opts,Opts1).
   

duringmin rule 
is  Minutes  isa minute,srel/during/MINUTE/Minutes/_C  %% before etc ?
id  replace passevent(Deps,Bus,Place,Opts,Day,C) 
    with    (timenow(Time),
             keepwithin(Time,Minutes,Deps,NewDeps),
             passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(Minutes),dmeq(minute,MINUTE),
%%   \+ member(to,Opts), %% WITHIN is from Departure time !!!
    setopt(time,Opts,Opts1).
   

%% 


within2 rule %% within arrival constraints but after NOW 
is  Minutes  isa minute,srel/WITHIN/TM/Minutes/_C 
id  replace passevent(Deps,Bus,Place,Opts,Day,C) 
    with    (timenow(Time),
             keepwithin(Time,Minutes,Deps,NewDeps),
             passevent(NewDeps,Bus,Place,Opts1,Day,C),
             flag(afternow)) %% Extremely dirty
ip  number(Minutes),dmeq(minute,TM),
    dmeq([within,in,on],WITHIN), %% TA-00728  %% within duration,
                                 %% Not at DROP nil %% bussen går 1 time (før midnatt)
%%    \+ member(to,Opts), %% WITHIN is from Departure time !!!
%% Real problem, always departure after NOW
    setopt(time,Opts,Opts1).     %% neste 60 minutter = innen


afternowflag rule %% WILDPANIC %% within also means DEAPRTURE AFTER NOW
is  []
id  flag(afternow),
    no flag(afternow),
    replace  passevent(Deps,Bus,Place,Opts,Day,C) 
    with     ( 
               timenow(Now),
               keepafter(Now,Deps,Deps1),
               passevent(Deps1,Bus,Place,Opts,Day,C) 
             )
ip  member(from,Opts). 



within3 rule  %%   bussen går () neste time 
is  Minutes  isa minute,srel/nil/TM/Minutes/_C,
    present  adj/next/_/_ 
id replace passevent(Deps,Bus,Place,Opts,Day,C) 
    with    (timenow(Time),
             keepwithin(Time,Minutes,Deps,NewDeps),
             passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(Minutes),dmeq(minute,TM),
%%   \+ member(to,Opts), %% WITHIN is from Departure time !!!
    setopt(time,Opts,Opts1).     %% neste 60 minutter = innen





% in next hour  from station
3109 rule
is  H isa hour,adj/next/H/_,srel/IN/time/H/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Time),
                  keepwithin(Time,60,Deps,NewDeps),
                  passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(intime,IN),setopt(time,Opts,Opts1).

% in next hour to station
3110 rule
is  H isa hour,adj/next/H/_,srel/IN/time/H/_ %% nil here has been replaced
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Time),
                 keepwithin(Time,60,Deps,NewDeps),
                 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(intime,IN),
        setopt(time,Opts,Opts1).


% in next N minutes
2908 rule 
is  B isa minute,srel/in/time/N/C,srel/nil/time/B/C,adj/next/N/_
id  replace passevent(Deps,Bus,Place,Opts,Day,C)
    with   (timenow(Time),
            keepwithin(Time,N,Deps,NewDeps),
            passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(N),
    setopt(time,Opts,Opts1).

% in next N minutes (norsk)   %% This quant is a reminiscent, from gram
2917 rule                     %% Difficult to remove
is  quant(eq/N,M),B isa minute,srel/nil/time/B/C,adj/next/M/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,C)
    with (timenow(Time),
          keepwithin(Time,N,Deps,NewDeps),
          passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(N),
    setopt(time,Opts,Opts1). 

% next N minutes
2926 rule 
is  N isa minute,srel/nil/time/N/C,adj/next/N/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,C)
	 with	(timenow(Time),
                 keepwithin(Time,N,Deps,NewDeps),
                 passevent(NewDeps,Bus,Place,Opts1,Day,C))
ip  number(N),
    setopt(time,Opts,Opts1). 

% in next minute
2935 rule 
is  H isa minute,adj/next/H/_,srel/IN/time/H/A
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with  (timenow(Time),
                keepwithin(Time,1,Deps,NewDeps),
                passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(intime,IN),
   dmeq(time,Opts,Opts1). 


%% This is a default rule
% exact timepoint is never interesting 
% Not applicable if the time refers to a  from station   %% AD HOC 
% 

2956 rule %% to rough   " I want to reach nth at ..."
is  context  T isa clock, 
    replace srel/AT/time/T/S with srel/around/time/T/S,
    not present pass/_/_/_ , %% = reach  ( " in time )
    not present srel/to/place/_TS/_ %% makes the rule less aggressive
id  [] 
ip  dmeq(attime,AT).


2957 rule %% to rough   " I want to reach nth at ..."
is  context  T isa clock, 
    replace srel/AT/time/T/S with srel/before/time/T/S
   %  present reach/_/_/_  %% pass 
id  [] 
ip  dmeq(attime,AT).


% bus at a time => before a time?    
%% How do you know it is future ?    ????????????

3236 rule 
is  context be1/Bus/D, srel/AT/time/Time/D ,            %%  _ ==> Bus  (Experiment)
    not srel/before/time/_/_                            %% no other before - constraint
id	 replace passevent(Deps,Bus,Place,Opts,Day,A) %% replacelast TA-001019
    with  (keepbefore(Time,Deps,NewDeps),
           passevent(NewDeps,Bus,Place,[time,lastcorr|Opts],Day,A))
ip	 dmeq(attime,AT),number(Time). %% in time means around 


% ...after a time?  
afteratime rule 
is  srel/Hereafter/time/nil/_  ,
    not srel/after/time/_/_  %% fortest mulig etter tid %% TA-010905 
id	 atday(Day), 
    replace passevent(Deps,Bus,Place,Opts,Day,A)
    with		(timenow(MinTime),keepafter(MinTime,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 today(Day),  %% if another day, first in the morning
    dmeq([now,hereafter],Hereafter),             %% TA-010530
    not member(to,Opts), %% not arrival but departure time %%
                      %% This rules selects the right passevent if > 2	 TA-001106
    setopt(time,Opts,Opts1).

% ...after a time?  %% default,  OK with next bus to place
afteratime2 rule %% TA-001112 
is  srel/Hereafter/time/nil/_ ,  
    not srel/after/time/_/_  %% fortest mulig etter tid %% TA-010905 
id	 atday(Day), 
    replace passevent(Deps,Bus,Place,Opts,Day,A)
    with		(timenow(MinTime),keepafter(MinTime,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq([now,hereafter],Hereafter),    
    today(Day),
    setopt(time,Opts,Opts1). %% TA-010905



% ... fast (as possible)
2982 rule  
is  srel/fast/mode/nil/_   
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
    with		(timenow(MinTime),keepafter(MinTime,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 not member(to,Opts), %% not arrival but departure time %% TA-001106
    setopt(time,Opts,Opts1). %% TA-001128




% ARRDEP after a time?  
%% ETC for all combinations of arrival/departure and preps.

% DEPARTURES


%  ARRIVALS



% ...after a time? Place the keepafter at the right place
%  This is AD Hoc and Ugly

3075 rule 
is  Time isa Departure1, srel/with/Departure2/Time/_E 
id   replace ( passevent(Deps,Bus,Place,Opts,Day,A))
   with (    keepbefore(Time,Deps,NewDeps),
           passevent(NewDeps,Bus,Place,[time|Opts],Day,A))
ip   number(Time),
    dmeq([arrival,stop],Departure1),  
    dmeq([arrival,stop],Departure2). 


3076 rule
is  Time isa Departure1, srel/with/Departure2/Time/_E 
id       replace ( passevent(Deps,Bus,Place,Opts,Day,A))
         with (    keepafter(Time,Deps,NewDeps),
                             passevent(NewDeps,Bus,Place,[time|Opts],Day,A))
ip       number(Time),
    dmeq([departure,start],Departure1), 
    dmeq([departure,start],Departure2). 


3077 rule %% BEFORE busbeforetime  rules
is  present go/_/A, present srel/from/place/_/A,
    srel/nil/clock/Time/A ,
    not srel/in_order_to/_/_/_,  % heuristic
    not reach/_/_/_              % heuristic 
id	 replace ( passevent(Deps,Bus,Place,Opts,Day,A))
	 with (    keepafter(Time,Deps,NewDeps),
                   passevent(NewDeps,Bus,Place,[time|Opts],Day,A))
ip	 number(Time).


busaftertime rule 
is  srel/after/TiCo/Time/_A 
id	 not  keepafter(_,_,_),   %% ( om kvelden etter 1800)
    replace ( passevent(Deps,Bus,Place,Opts,Day,A))
	 with (    keepafter(Time,Deps,NewDeps),
			     passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(timeclock,TiCo),
    \+ member(to,Opts),         %%   (Too rough ?)
    number(Time),
    setopt(time,Opts,Opts1). 


% bus in time 1700 - 1800 (Repair rule)


% bus before a time? 

busbeforetimedouble rule %%   early in the morning  (late at night ?)
is  srel/BEFORE/CLO/Time/_    
id	 keepbefore(Time1,Deps,NewDeps),
    replace keepbefore(Time1,Deps,NewDeps) %% replacelast TA-001019
		with 	    keepbefore(Time,Deps,NewDeps)		
ip	 dmeq(within,BEFORE),dmeq(timeclock,CLO),number(Time),
    Time < Time1. 
%    minval(Time,Time1,MinTime).
 

% bus goes time?


busaftertime0 rule
is  srel/AT/CLO/Time/E, present go/Bus/E, present srel/from/place/Place/E,
    not srel/in_order_to/_/_/_,  % heuristic 
    not reach/_/_/_              % heuristic 
id  replace passevent(Deps,Bus,Place,Opts,Day,E)
    with   ( keepafter(Time,Deps,NewDeps),  
             passevent(NewDeps,Bus,Place,Opts1,Day,E)) 
ip  dmeq([at],AT),dmeq(timeclock,CLO),number(Time), %% bussen går 20 // attime
                                               %% minutter før midnatt
    setopt(time,Opts,Opts1). 



busaftertime3 rule 
is  srel/AFTER/CLO/Time/E, present go/Bus/E, present srel/from/place/Place/E,
    not srel/in_order_to/_/_/_,  % heuristic
    not reach/_/_/_ ,             % heuristic
    not Time isa minute  
id  not keepafter(_,_,_), %%  etter 1800 om kvelden
    replace    passevent(Deps,Bus,Place,Opts,Day,E)
    with   (  keepafter(Time,Deps,NewDeps),  
              passevent(NewDeps,Bus,Place,Opts1,Day,E)) 
ip  dmeq(after,AFTER),
    dmeq(timeclock,CLO),
    number(Time), %% not duration
    setopt(time,Opts,Opts1). 



busaftertime4 rule
is  srel/nil/CLO/Time/___E, present go/Bus/E,
    not srel/in_order_to/_/_/_, 
    not reach/_/_/_  
id  replace      passevent(Deps,Bus,Place,Opts,Day,E)
    with      (  keepafter(Time,Deps,NewDeps),  
                 passevent(NewDeps,Bus,Place,Opts1,Day,E)) 
ip  dmeq(timeclock,CLO),number(Time), %% NOT duration 
    member(from,Opts),  %% subtle,   default from ht
    setopt(time,Opts,Opts1). 


% ...after a time? (before busbeforetime3)
busaftertime5 rule 
is  srel/after/Thing/Time/_,
    not Time isa second, 
    not Time isa day      %% TA-010611
id	 not  keepafter(_,_,_), 
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with (keepafter(Time,Deps,NewDeps),
               passevent(NewDeps,Bus,Place,Opts,Day,A))
ip	 dmeq([time,thing],Thing),   %% catch   bus after time to...
    number(Time).

nowwhat rule 
is  srel/now/time/nil/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with (timenow(Time),
               keepafter(Time,Deps,NewDeps), 
               passevent(NewDeps,Bus,Place,Opts2,Day,A)) 
ip  \+ member(to,Opts), %% NOW never about destination

    setopt(time,Opts,Opts1),

    Opts2=Opts1. %    setopt(first,Opts1,Opts2).  %% not and last bus... // invalid if before|



busaroundtime1 rule      % try around arrival first 
is  srel/AROUND/CLO/Time/_ ,  
    not Time isa minute  
id	 replace    passevent(Deps,Bus,Place,Opts,Day,A) %% replacelast TA-001115
    with     ( keeparound(Time,Deps,NewDeps), 
               passevent(NewDeps,Bus,Place,Opts1,Day,A)) 
ip	 dmeq(timeclock,CLO),dmeq(around,AROUND), %% inclusive in
    not member(from,Opts),  % try destination first 
    number(Time), %% atround  

    setopt(time,Opts,Opts1). %% Opts0  EXPERIMENT %% TA-010208
%%     setopt(lastcorr,Opts0,Opts1). %% TA-001128 ( for same reaons as busbeforetime)

busaroundtime2 rule  % anything goes
is  srel/AROUND/CLO/Time/_ ,  
    not Time isa minute  
id	 replace    passevent(Deps,Bus,Place,Opts,Day,A)
    with     ( keeparound(Time,Deps,NewDeps), 
               passevent(NewDeps,Bus,Place,Opts1,Day,A)) 
ip	 dmeq(timeclock,CLO),dmeq(around,AROUND), %% inclusive in
    number(Time), 
    setopt(time,Opts,Opts0),
    setopt(lastcorr,Opts0,Opts1). %% TA-001128 ( for same reaons as busbeforetime)


% bus before a time? %%%% Moved for cosmetic sequencing 

busbeforetime0  rule  %%  unstrict time limit (morningbus),
is  srel/BEFORE/CLO/Time/_ ,   
    not srel/thereafter/time/nil/_ ,
    present _ isa morningbus, %% not strict timelimit
    not Time isa minute 
id	 replace    passevent(Deps,Bus,Place,Opts,Day,A) 
    with    (  keepbefore(Time,Deps,NewDeps),      %% NB
               passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip dmeq(within,BEFORE),dmeq(timeclock,CLO),
   number(Time), 
    \+ member(from,Opts),  
   setopt(time,Opts,Opts1). 



busbeforetime1 rule
is  srel/BEFORE/CLO/Time/_A  
id	 keepafter(_,_,_), 
    replace passevent(Deps,Bus,Place,Opts,Day,A) 
    with  ( keepbefore(Time,Deps,NewDeps), %% NOT CLOSELY BEFORE !!!
		      passevent(NewDeps,Bus,Place,TOPT,Day,A))

ip	 dmeq(within,BEFORE),
    \+ member(from,Opts), %% TA-011028
    dmeq(timeclock,CLO), %% not duration
    number(Time),
    setopt(time,Opts,TOPT).                               


busbeforetime2 rule 
is  srel/AT/CLO/Time/_, 
    not srel/thereafter/time/nil/_ 

id	 not keepafter(_,_,_),
    not passevent(_,_,Place,[from],_,_), %%   NOT a from place
    replace passevent(Deps,Bus,Place,Opts,Day,A)  %% replacelast TA-001019
    with (  keepbefore1(Time,Deps,NewDeps),  %% CLOSELY BEFORE !!! 
             passevent(NewDeps,Bus,Place,TLCOPT,Day,A)) 
ip	 dmeq(attime,AT),dmeq(timeclock,CLO),number(Time), %% atround  
    setopt(time,Opts,Opts1),setopt(lastcorr,Opts1,TLCOPT).

busbeforetime3 rule  %% shouldn't apply to morningbus
is  srel/BEFORE/CLO/Time/_ ,   
    not srel/thereafter/time/nil/_ ,
    not present _ isa morningbus, %% not strict timelimit
    not (Time isa minute),
    not (Time isa day)          %%        %% TA-010611      3 days   

id	 not keepafter(_,_,_),
    replace    passevent(Deps,Bus,Place,Opts,Day,A) %% replacelast %% cant trust sequence
    with     (  keepbefore1(Time,Deps,NewDeps), %% before  %% Difficult decision

  %% fra nardo til nova før 2040 ( direct route 0521 !!!) 
  %% NOT CLOSE bef.  (avganger før kl 2300) 
         passevent(NewDeps,Bus,Place,TLCOPT,Day,A))
ip dmeq(within,BEFORE),dmeq(timeclock,CLO), %%  Not duration
   number(Time), 
    \+ member(from,Opts),  
%% member(to,Opts),  %% Too strong ! %%% *** Bussen går forbi NTH før 0815
   setopt(time,Opts,Opts1), 
   setopt(lastcorr,Opts1,TLCOPT).


busbeforetime4 rule %% Finally, allow bus from place before time%% TA-001112
is  srel/BEFORE/CLO/Time/_ ,
    not (Time isa day)          %% Panic  %% TA-010611   3 days
id	 not keepafter(_,_,_),
    replace   passevent(Deps,Bus,Place,Opts,Day,A) 
    with   (  keepbefore1(Time,Deps,NewDeps),
              passevent(NewDeps,Bus,Place,TLCOPT,Day,A))
ip dmeq(within,BEFORE),
   dmeq(timeclock,CLO),
   number(Time), 
   setopt(time,Opts,Opts1), 
   setopt(lastcorr,Opts1,TLCOPT).



% ...from a time?
3097 rule 
is  srel/from/time/Time/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with (keepafter(Time,Deps,NewDeps),
			 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 number(Time),setopt(time,Opts,Opts1). 


% an afternoon  (>=1200)
3112 rule 
is  has/day/afternoon/_/A,srel/AT/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with    (keepafter(1200,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(at,AT),setopt(time,Opts,Opts1). 

% This afternoon  (>=1200)
3119  rule 
is  A isa afternoon,srel/AT/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with    (keepafter(1200,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(at,AT),setopt(time,Opts,Opts1).

% afternoon  (>=1200)
3126  rule 
is  srel/afternoon/time/nil/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with    (keepafter(1200,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 setopt(time,Opts,Opts1).

% a morning  (=<1100)  
3133 rule 
is  has/day/morning/_/A,srel/AT/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with (keepafter(0500,Deps,NewDeps), 
               passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(at,AT),setopt(time,Opts,Opts1).

% This morning  (=<1100) 

midtpaadagen   rule 
is  A isa day,srel/on/day/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with (keeparound(1200,Deps,NewDeps), 
          passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 setopt(time,Opts,Opts1).
%
3148  rule 
is  A isa morning,srel/AT/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with (keepafter(0500,Deps,Deps1),
          keepbefore(1200,Deps1,NewDeps),
          passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq([at,before,in,nil,on],AT),setopt(time,Opts,Opts1).


% morning  (=<1100)  
morning rule
is  srel/MORNING/time/nil/_ %%  morning ---> this_morning
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)  %% replacelast TA-001019
	 with		(keepafter(0500,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(morning,MORNING),
    setopt(time,Opts,Opts1).


eveningbeforenoon rule %% contradictyory rule
is  srel/EVENING/time/nil/_ % see and ignore
id  keepbefore1(F,_,_)      % before?  This is just an experiment
ip  dmeq(evening,EVENING),
    F < 1800.                    %% Contradictory


% evening  ( > 1800)  
evening rule
is  srel/EVENING/time/nil/_ 
id	 not keepbefore1(_,_,_),     %% evening is weak constraint
    not keepafter(_,_,_), %% TA-001117 // Assume AM/PM problem is settled
    replace passevent(Deps,Bus,Place,Opts,Day,B) %% replacelast TA-001019
	 with		(keepafter(1800,Deps,NewDeps), 
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(evening,EVENING),setopt(time,Opts,Opts1).



% night bus ( > 2400)
3164  rule 
is  present A isa bus,adj/night/A/_                                
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(2400,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 setopt(time,Opts,Opts1).

% morning bus   
3171 rule 
is  present A isa bus,adj/morning/A/_                                
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with	(keepafter(0500,Deps,NewDeps), 
		 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 setopt(time,Opts,Opts1).



% an evening  (>=1900  and =<2400) 
3180  rule 
is  has/day/evening/_/A,srel/AT/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepafter(1900,Deps,NewDeps),                %% Changed generally
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 dmeq(at,AT).

% This evening  (>=1900)
3187 rule 
is  A isa evening,srel/AT/TIMEEQ/A/_
id	 not keepbefore(_,_,_),                         %% tonight at 1900 
    not keeparound(_,_,_),                         %%
    replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 dmeq(at,AT),dmeq(timeclass,TIMEEQ).


% evening  (>=1900 and =<2400) 
3194 rule 
is  srel/evening/time/nil/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 [].


% AFTERNOON

% an afternoon  12-19
3659  rule 
is  has/day/afternoon/_/A,srel/AT/time/A/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepbetween(1200,1900,Deps,NewDeps), 
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 dmeq(at,AT).



% This afternoon  12-19
3668 rule 
is  A isa afternoon,srel/AT/time/A/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepbetween(1200,1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 dmeq(at,AT).

% afternoon  12-19
3675 rule 
is  srel/afternoon/time/nil/_   
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepbetween(1200,1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 [].




% Uday evening 

3203 rule 
is  srel/evening/day/nil/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 [].


% Uday afternoon 

3702 rule 
is  srel/afternoon/day/nil/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with 	(keepbetween(1200,1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 [].

% a night  (>=1900)
3227 rule 
is  has/day/night/_/A,srel/AT/time/A/_
id	 not keepafter(_,_,Deps),
	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	 dmeq(at,AT),
    setopt(time,Opts,Opts1).

% This night  (>=1900)
3235 rule 
is  A isa night,srel/AT/time/A/_
id	 not keepafter(_,_,Deps),
	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B)) %% TA-001219
ip  dmeq([at,in,nil,on],AT), %% før kvelden
    setopt(time,Opts,Opts1). %% TA-001219  

%%%    setopt(lastcorr,Opts0,Opts1). %% TA-010510 Illogical

% BeforeThis night  (>=1900)
befevening  rule 
is  A isa night,srel/before/time/A/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with (keepbefore(1900,Deps,NewDeps),
               passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip  setopt(time,Opts,Opts1).

% Busroute for the evening
3236 rule
is  A isa night,srel/for/daypart/A/_
id	 not keepafter(_,_,Deps),
	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip  setopt(time,Opts,Opts1).


% night  (>=1900)
3251 rule 
is  srel/night/time/nil/_
id	 not keepafter(_,_,Deps),
	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with    (keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,B))
ip	  setopt(time,Opts,Opts1).


%% AT A TIME means before, around or after a time, depending 
%% ---------------------------------------------------------

% be1 at a time (means the bus must be there before that time)
3269 rule 
is  present be1/Self/D,present Self isa self, srel/AT/time/_/D
id	 replace passevent(Deps,Bus,Place,Opts,Day,D) %% replacelast TA-001019
	 with 		 (keeparound(Time,Deps,NewDeps), 
					  passevent(NewDeps,Bus,Place,[time,lastcorr|Opts],Day,D))
ip	 dmeq(at,AT),number(Time).

% be1 at a time (means the bus must be there before that time) % ?
3276 rule 
is  present be1/Self/D,present Self isa self,
    srel/AT/time/C/D,srel/nil/time/Time/B,srel/before/time/C/B
id	 replace passevent(Deps,Bus,Place,Opts,Day,D) %% replacelast TA-001019
	 with 		 (keepbefore1(Time,Deps,NewDeps), %% Closely before 
					  passevent(NewDeps,Bus,Place,[time,lastcorr|Opts],Day,D))
ip	 dmeq(at,AT),number(Time).

% ...at a time?
3284 rule 
is  srel/AT/time/Time/_  % precisely ??? 
id	 replace passevent(Deps,Bus,Place,[],Day,A)     %% Opts -> []
	 with	  ( keeparound(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time],Day,A)) % time|Opts -> time
ip	 dmeq(at,AT),number(Time).

% ----------------------------------------------------------------------------


% ...soon?  (next 20 minutes)
soon20  rule 
is  srel/soon/mode/nil/A
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
    with    (timenow(Now),
				 keepwithin(Now,20,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 setopt(time,Opts,Opts1).

% ...from Time1 to Time2?
3334 rule 
is  srel/from/time/Time1/_,srel/to/time/Time2/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		(inttime(Time1,MinTime1),inttime(Time2,MinTime2),
				 keepbetween(MinTime1,MinTime2,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 number(Time1),number(Time2),setopt(time,Opts,Opts1).

% ...around a time? (+/- 15 min)  
% (skulle vært implementert mer komplisert, men...)
3350 rule 
is  srel/around/time/Time/A %% Same event A ! 
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		( % inttime(Time,MinTime),

             keeparound(Time,Deps,NewDeps), 
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 number(Time),setopt(time,Opts,Opts1).


% buss 9 er i sentrum 
keepbus2 rule 
is  present Bus isa BR,srel/in/time/_/E, present be1/Bus/E
id	 replace passevent(Deps,_,Place,Opts,Day,A)
	 with    (keepbus(Bus,Deps,NewDeps), %% !,
             passevent(NewDeps,Bus,Station,Opts,Day,A))
ip	 dmeq([bus,route],BR),
    exbus(Bus),place_station(Place,Station).

% with Bus 8  % This is a reserve rule,  too late for bus dependence -> 2415
keepbus3 rule 
is  present Bus isa BR,srel/W/V/Bus/_
id	 replace passevent(Deps,_,Place,Opts,Day,A)
	 with   (keepbus(Bus,Deps,NewDeps), %% !,
            passevent(NewDeps,Bus,Station,Opts,Day,A))
ip	 dmeq([bus,route,tram],BR),  %% TA-001005
    dmeq([for,with,on,by,via],W),   %% TA-010903
    dmeq([vehicle,route,bus],V),
    bound(Bus), %% bus or tram exbus(Bus), %% TA-001005
    place_station(Place,Station).

% with line 8  
keepbus4 rule 
is  has/_/departure/Bus/_, present Bus isa BR %% nb swap
id	 replace passevent(Deps,_,Place,Opts,Day,A)
	 with  (keepbus(Bus,Deps,NewDeps), %% !,
                passevent(NewDeps,Bus,Station,Opts,Day,A))
ip	 dmeq([bus,route],BR),
    exbus(Bus),place_station(Place,Station).

% bus that has number 8
keepbus5 rule 
is  has/vehicle/number/F/H, present
    F isa BR, H isa number
id	 replace passevent(Deps,_,Place,Opts,Day,A)
	 with  (keepbus(H,Deps,NewDeps), %% !,
                passevent(NewDeps,F,Station,Opts,Day,A))
ip	 dmeq([bus,route],BR),
    exbus(H),
    place_station(Place,Station).

% except  Bus 8  
exceptbus  rule
is  present Bus isa BR, comp/_/ne/_/Bus %% TA-010205  
id	 replace passevent(Deps,X,Place,Opts,Day,A)
	 with    (avoidbus(Bus,Deps,NewDeps), 
				 passevent(NewDeps,X,Station,Opts,Day,A))
ip	 dmeq([bus,route,tram],BR), %% TA-010205  
    bound(Bus),
    bus(Bus), %% exbus  exclusive bus/ bus inclusive tram
    place_station(Place,Station).


% tonight  (>=1900)
3403 rule 
is  srel/tonight/DayTime/nil/_
id	 not keepbefore1(_,_,_), %% weak constraint
    not keepafter(_,_,_),   %% assume AM/PM is solved
    replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(1900,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 dmeq(dayortime,DayTime).  %% (changed semantics )


%  mid_night  (>= 2400)
midnight1 rule 
is  srel/this_midnight/time/nil/_ %% mid_night ---> this_midnight 
id	 replace passevent(Deps,Bus,Place,Opts,Day,B)
	 with		(keepafter(2400,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,[time|Opts],Day,B))
ip	 [].



%%%%% first/last/next/Nth bus

% first  N departures
firstNbus rule 
is  quant(eq/N,B), adj/first/B/_ , present B isa Veh %% TA-010313
id	 replace passevent(Deps,Bus,Place,Opts, Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq(vehicle,Veh),
    setopt(first(N),Opts,Opts1).


% first  N departures
firstNdep rule 
is  quant(eq/N,AD), adj/first/AD/_ , AD isa ARRDEP %% TA-010123
id	 replace passevent(Deps,Bus,Place,Opts, Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq(arrdep,ARRDEP),
    setopt(first(N),Opts,Opts1).

%  first ARRDEP
3454 rule 
is  adj/first/AD/_, present AD isa ARRDEP
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		passevent(Deps,Bus,Place,[first(1)|Opts],Day,A) 

ip	 dmeq(arrdep,ARRDEP).

% first time
3461 rule 
is  adj/first/Time/_,present Time isa Timeq
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		passevent(Deps,Bus,Place,[first(1)|Opts],Day,A) 
ip	 dmeq(time,Timeq).

% next N buses  %% next(N) is AMBIGUOUS  after now/ after time..
nextN rule 
is  quant(eq/N,BD), present BD isa BDA, present adj/next/BD/_ 
id	 not keepafter(_,_,Deps), % "etter T" overstyrer "neste"  
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Time),keepafter(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 setopt(next(N),Opts,Opts1),dmeq(busdeparr,BDA).

% next N buses  %% next(N) after (NOW)
nextNafter rule 
is  quant(eq/N,BD), present BD isa BDA, present adj/Fnext/BD/_ 
id	 not keepafter(_,_,_Deps), % "etter T" overstyrer "neste" %% TA-010326
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with    ( timenow(Time), %% Only relevant if NOT keepafter
              keepafter(Time,Deps,NewDeps), %% Filter NOW 
              passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq([next,first],Fnext), %% TA-010123
    setopt(nextaftertime(N),Opts,Opts1), %%  NB NB  New OPTION  !!!!!
    dmeq(busdeparr,BDA).


% next N buses after time
nextNaftertime  rule %% TA-010825
is  quant(eq/N,BD), adj/Next/BD/_ ,present BD isa BDA
id	 keepafter(_,_,Deps0),
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 ( Deps == Deps0), 
    dmeq([next,first],Next),  %%  First after = Next after  !
    dmeq(busdeparr,BDA),
    setopt(nextaftertime(N),Opts,Opts1). %% not next after now


% next bus after time
next1after rule 
is  adj/Next/BD/_ ,present BD isa BDA
id	 keepafter(_,_,Deps0),
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 ( Deps == Deps0), 
    dmeq([next,first],Next),  %%  First after = Next after  !
    dmeq(busdeparr,BDA),
    setopt(nextaftertime(1),Opts,Opts1). %% not next after now


% first bus 
firstbus1 rule 
is  adj/First/_Bus/_ 
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)  
	 with	   passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq([first,early],First),         %% TA-010727
    setopt(first(1),Opts,Opts1).


% Next bus another day  %% TA-010613
nextbusanotherday rule %% = first on that day 
is  adj/next/BusF/_ , 
    present BusF isa VEH
id	 atday(Wed),
    not today(Wed),
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq(vehicle,VEH), 
    setopt(first(1),Opts,Opts1),busorfree(BusF).


% next bus (samme buss som i passevent)
3476 rule 
is  adj/next/BusF/_ , 
    present BusF isa VEH, 
    not present adj/last/BusF/_  %% NOT next last !!
id	 not keepafter(_,_,Deps), % "etter T" overstyrer "neste" Essential
    not keepwithin(_,_,_,_), 
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Time),keepafter(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(vehicle,VEH), 
    setopt(next(1),Opts,Opts1),busorfree(BusF).


% next bus ARRDEP
3492 rule 
is  present AD isa ARRDEP,adj/next/AD/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with    (timenow(Time),keepafter(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(arrdep,ARRDEP),setopt(next(1),Opts,Opts1).

% next time
3499 rule 
is  adj/next/Time/_,present Time isa Timeq
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Now),keepafter(Now,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(time,Timeq),setopt(next(1),Opts,Opts1). 



% last  N buses 
lastN rule 
is  quant(eq/N,BusF),adj/last/BusF/_  
id	 replace passevent(Deps,Bus,Place,Opts, Day,A)
	 with    passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 setopt(last(N),Opts,Opts1),busorfree(BusF). 


% last bus (samme buss som i passevent)
3516 rule 
is  adj/last/BusG/_ %% NB _ ==> BusG  %% TA-010301
id	 replace passevent(Deps,BusG,Place,Opts,Day,A)
	 with 	passevent(Deps,BusG,Place,Opts1,Day,A)
ip	 setopt(last(1),Opts,Opts1). 


% last bus (samme situasjon som i passevent)
3522 rule 
is  adj/last/_/A
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 setopt(last(1),Opts,Opts1). 

% last ARRDEP
3528 rule 
is  present AD isa ARRDEP,adj/last/AD/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq(arrdep,ARRDEP),setopt(last(1),Opts,Opts1).

% last time
3534 rule 
is  adj/last/Time/_,present Time isa Timeq
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,Opts1,Day,A)
ip	 dmeq(time,Timeq),setopt(last(1),Opts,Opts1). 



% previous N buses 
prevN rule 
is  quant(eq/N,Bus),adj/previous/Bus/_  
id	 not keepafter(_,_,Deps), % "etter T" overstyrer "neste"
    replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	(timenow(Time),
             keepbefore(Time,Deps,NewDeps), %%   Not Closely
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 \+ member(from,Opts),  %%    ( NB avoid before departure)
    setopt(last(N),Opts,Opts1).

% previous bus (samme buss som i passevent) %% NB. ideally previous ARRIVAL
prev1  rule 
is  adj/previous/Bus/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		(timenow(Time),
             keepbefore(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 member(from,Opts),            %% previous ARRIVAL %%  når gikk forrige buss fra .
    setopt(last(1),Opts,Opts1).


% previous bus (samme situasjon som i passevent)
3558 rule 
is  adj/previous/_/A
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		(timenow(Time),keepbefore(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 setopt(last(1),Opts,Opts1).

% previous ARRDEP
3565 rule 
is  present AD isa ARRDEP,adj/previous/AD/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		(timenow(Time),keepbefore(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(arrdep,ARRDEP),setopt(last(1),Opts,Opts1).

% previous time
3572 rule 
is  adj/previous/Time/_,present Time isa Timeq
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with		(timenow(Time),keepbefore(Time,Deps,NewDeps),
				 passevent(NewDeps,Bus,Place,Opts1,Day,A))
ip	 dmeq(time,Timeq),setopt(last(1),Opts,Opts1). 

% Nth bus (samme buss som i passevent)
3579 rule 
is  adj/Nth/Bus/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,[nth(N)|Opts],Day,A)
ip	 ordinal(Nth,N).

% Nth bus (samme situasjon som i passevent)
3585 rule 
is  adj/Nth/_/A
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,[nth(N)|Opts],Day,A)
ip	 ordinal(Nth,N).

% Nth ARRDEP
3591 rule 
is  present AD isa ARRDEP,adj/Nth/AD/_
id	 replace passevent(Deps,Bus,Place,Opts,Day,A)
	 with 	passevent(Deps,Bus,Place,[nth(N)|Opts],Day,A)
ip	 dmeq(arrdep,ARRDEP),ordinal(Nth,N).

%%%%% N first/next/last


3612 rule 
is  quant(eq/N,Bus)
id	 replace passevent(Deps,Bus,Place,[next(_)],Day,A)
	 with		passevent(Deps,Bus,Place,[next(N)],Day,A)
ip	 [].

3617  rule 
is  quant(eq/N,Time),present Time isa Timeq,present adj/next/Time/_
id	 replace passevent(Deps,Bus,Place,[next(_)],Day,A)
	 with		passevent(Deps,Bus,Place,[next(N)],Day,A)
ip	 dmeq(time,Timeq).

3622 rule 
is  quant(eq/N,Bus)
id	 replace passevent(Deps,Bus,Place,[last(_)],Day,A)
	 with 	passevent(Deps,Bus,Place,[last(N)],Day,A)
ip	 [].


%%%%% N buses

3638 rule 
is  quant(eq/N,Bus)
id	 replace passevent(Deps,Bus,Place,[],Day,A)
	 with 	passevent(Deps,Bus,Place,[next(N)],Day,A)
ip	 [].

%%%%% direct buses

3645  rule 
is  present B isa bus, adj/same/B/_  %%  (same bus)
id  replace passevent(Deps,Bus,Place,Opts,Day,A)
    with    passevent(Deps,Bus,Place,[direct|Opts],Day,A)
ip  [].

3650 rule 
is  adj/direct/Bus/_
id  replace passevent(Deps,Bus,Place,Opts,Day,A)
    with    passevent(Deps,Bus,Place,[direct|Opts],Day,A)
ip  [].


3656 rule 
is  srel/directly/mode/nil/_  % goes directly
id  replace passevent(Deps,Bus,Place,Opts,Day,A)
    with    passevent(Deps,Bus,Place,[direct|Opts],Day,A)
ip  [].


spesificroute rule
is present BusN isa ROUTE
id not selectroute(_,_,_),
   replace passevent(Deps,BusN,Place,Opts,Day,A)
   with    (selectroute(Rid,Deps,NewDeps),
	    passevent(NewDeps,BusN,Place,Opts,Day,A))
ip user:value(dialog, 1), dmeq(vehicle, ROUTE), getcurrent(Cid), getref(Cid, [Rid], lastroute(BusN)).
    




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ingen filtrering av avgangssett (Depset) under her
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%% Skal skrive ut bussliste istedet for passeringer
                                          % even if next overrides the effect

%% Moved before coupled  


buslistonly1 rule 
is  which(Bus),    % which bus 
    present Bus isa BR,
    not present  _ isa time,
    not present  _ isa duration, 
    not present  _ isa traveltime,
    not present  _ isa clock,
    not present  has/_/departure/_/_,
    not present  srel/nil/daypart/_/_, %% ?
    not present  srel/_/day/_/_, 
    not present  srel/this_afternoon/_/_/_,  
    not present  _ isa noon,
    not present  _ isa midnight % etc ad n

id	 not message(noinfoabout(frequency)), %% needs time info %% TA-010605
    replace connections(A0,A,B,C,D,E,Opts,G,H)
    with    connections(A0,A,B,C,D,E,[buses|Opts],G,H)
ip	 dmeq(bus,BR),(Opts=[];Opts=[to];Opts=[from]), % e.g. not next etc
    unbound(Bus). %% if bus known, time is expected 

buslistonly2 rule 
is  which(RP),    % which route_plan 
    present RP isa route_plan,
    present  has/_/route_plan/Bus/_ ,
    not present  _ isa clock,
    not present  _ isa duration, 
    not present  _ isa traveltime,
    not present  has/_/departure/_/_ 

id   not message(noinfoabout(frequency)), %% needs time info %% TA-010605
    replace passevent(A,Bus,B,Opts,C,D) 
    with    passevent(A,Bus,B,Opts1,C,D)  

ip	
    (Opts=[];Opts=[to];Opts=[from]), % e.g. not next etc
    setopt(buses,Opts,Opts1).       % buses should nor be set,


buslistonly3 rule
is  which(Bus),    % which bus 
    present Bus isa BR,
    not present  _ isa duration, 
    not present  _ isa traveltime,
    not present  _ isa time,
    not present  _ isa clock,
    not present  has/_/departure/_/_ 

id  not message(noinfoabout(frequency)), %% needs time info %% TA-010605
    not departure(_,_,_,_),  
  
    replace passevent(A,Bus,B,Opts,C,D) 
    with    passevent(A,Bus,B,Opts1,C,D) 
ip	 dmeq(bus,BR), (Opts=[];Opts=[to];Opts=[from]), % e.g. not next etc
          setopt(buses,Opts,Opts1).       % buses should nor be set,


buslistonly4 rule 
is  
    present Bus isa BR,
    not present  _ isa afternoon,
    not present  _ isa route_plan,
%%     not present  _ isa route, %% i.e. route_plan
    not present  _ isa duration, 
    not present  _ isa traveltime,
    not present  _ isa distance,  %%  (i.e. duration)
    not present  _ isa time, 
    not present  _ isa clock,
    not present  _ isa departure, 
    not present  _ isa midnight, 
    not present  _ isa night, 
    not present  srel/with/speed/_/_, 
    not present  has/_/departure/_/_ , 
    not present  srel/_/time/_/_,         %% TA-010117 
    not present  srel/_/day/_/_, 
    not present  wonder/id/when/_/_/_, 
    not present  know/id/when/_/_/_,
    not present  tell/_/when/_/_/_,       %% "tell when ..."
    not present  see/id/when/_/_/_, 
    not present  srel/this_afternoon/_/_/_, 
    not present  srel/_in_night/time/nil/_, 
    not present  adj/_/_/_   

id   not message(noinfoabout(frequency)), %% needs time info %% TA-010605
     replace passevent(A,BusX,B,Opts,C,D) 
     with    passevent(A,BusX,B,Opts1,C,D) 

ip	 dmeq([bus,station,tram,route,self],BR), %%  Hazard     %% which station 
                                          %%  TA-010611
                                          %% does it pass 
    (Opts=[];Opts=[to];Opts=[from]),
    setopt(buses,Opts,Opts1),
    (Bus=='I';unbound(Bus)).  %% TA-010611 if bus known, time is expected 



%%%%% To passeringer skal kobles


% Fjerner redundant stasjon uten melding  ( from A to B so that I am at B)

3708 rule 
is  []
id	

remove   departure(Free69,Haukaasen,_14472,_16791),
remove   passevent(_16791,Free69,Haukaasen,[],_14472,_),

   departure(Free70,Haukaasen,_14472,_18230),
   passevent(_21388,Free70,Haukaasen,_,_14472,_)

ip	 Free69 \== Free70.


%%%%% To passeringer skal kobles

% Sjekker at det ikke er flere enn 2 stasjoner 

toomanyplaces rule %% Går buss 9 fra dragvoll via moltmyra til flatåsen senter .
is  clear %% Doesn't work softly %% TA-010909
id	 connections(_,_,_,_,_,_,_,_,_),
    remove passevent(_,_,_,_,_,_),
    clear, %% Doesn't work softly %% TA-010909
    addcon  message(toomanyplaces) 
ip	 [].



% Kobler sammen to busspasseringer (From Depset1 TO Depset2)


connection0 rule 
is  []
id	 remove passevent(_Depset1,_Bus1,Place1,_Opts1,_Day1,_),
    remove passevent(_Depset2,_Bus2,Place2,_Opts2,_Day2,_),
    add (message(sameplace(Place1,Place2)))

ip	 place_station(Place1,Station1),
    place_station(Place2,Station2),
    Station1 == Station2.  %% NEVER MAKE A CONNECTION TO ITSELF


connection21 rule %% connect 2 -> 1
is  []
id  remove passevent(Depset1,Bus1,Place1,Opts1,Day,_),
    remove passevent(Depset2,_Bus2,Place2,Opts2,Day,_),
    add (connections(Depset2,Depset1,Bus1,Station2,Station1,Day,OptsUnite,_,_)) 

ip	 ((member(to,Opts1), \+ member(to,Opts2));     %% TA-001005
    (member(from,Opts2),\+ member(from,Opts1))),
    not(member(nocouple,Opts2)),
    not(member(nocouple,Opts1)),
    mixopt(Opts2,Opts1,OptsUnite), 
    place_station(Place2,Station2),
    place_station(Place1,Station1),
    Station2 \== Station1.  %% NEVER MAKE A CONNECTION TO ITSELF

connection12 rule 
is  []
id  remove passevent(Depset1,_,Place1,Opts1,Day,_),
    remove passevent(Depset2,Bus2,Place2,Opts2,Day,_),
    add (connections(Depset1,Depset2,Bus2,Station1,Station2,Day,OptsUnite,_,_)) 

ip	 % no direction given
    not(member(nocouple,Opts1)),
    not(member(nocouple,Opts2)),
    mixopt(Opts1,Opts2,OptsUnite), 
    place_station(Place1,Station1),
    place_station(Place2,Station2),
    Station1 \== Station2.  %% NEVER MAKE A CONNECTION TO ITSELF


superfluoustat  rule  %% TA-010921
is  remove  srel/_/place/Jonsvannet/_
id  connections(_,_,_,A,B,_,_,_,_),
    addcon message(toomanyplaces)
ip  bound(Jonsvannet),
    Jonsvannet \== A,
    Jonsvannet \== B.



% Kobler sammen to busspasseringer ellers ( REDUNDANT ?)
3713 rule 
is  []
id	 remove passevent(Depset1,_,Place1,Opts1,Day,_),
    remove passevent(Depset2,Bus2,Place2,Opts2,Day,_),
    add (connections(Depset1,Depset2,Bus2,Station1,Station2,Day,OptsUnite,_,_)) 

ip	 not(member(nocouple,Opts1)),not(member(nocouple,Opts2)),
    mixopt(Opts1,Opts2,OptsUnite), 
    place_station(Place1,Station1), 
    place_station(Place2,Station2),    
    not(member(from,Opts2)), 
    not(member(to,Opts1)), 


% Legger paa default siste  busspassering 
defaultLast rule 
is  []
id	 present keepbefore(_4335,_3171,Deps1),
    replace connections(Deps2,_3724,_free,_lade,_nth,_3004,Opts,          _5276,_5277) 
    with    connections(Deps2,_3724,_free,_lade,_nth,_3004,[last(1)|Opts],_5276,_5277)
ip	 Deps1 == Deps2,  not (member(last(_),Opts)).


%%%%% Hvor ofte...

%%%%% Hvor kommer busser som passerer Place fra?

%%%%% Annet om stasjoner og steder

% What is the name of the stations?
3793 rule 
is  which(A),Station isa station,has/place/name/Station/A,
    not srel/at/place/_/_,     %%  (NB a station near station X)
    not srel/before/place/_/_,
    not srel/after/place/_/_  
id	 add allstations(_)
ip  unbound(Station).



% Which stations do you know
3800 rule 
is  which(A),tuc isa program,A isa station,knowthing/tuc/A/_
id	 add allstations(_)
ip  [].


% Where is Station?
whereisstation1  rule 
is  Station isa BussStat,be1/Station/A,srel/in/place/Place/A 
id	 add stationsat(_,Station,_)
ip  dmeq(busstation,BussStat),unbound(Place),station(Station).


% Where is a street
7777 rule %% TVL-000329
is  which(S),be1/Place/A,srel/in/place/S/A, present Place isa street 
id  not message(nearest_station(_,_)), 
    add stationsat(Place,_,_)
ip  bound(Place).

% Where is Station?
whereisstation2  rule  
is  Station isa BussStat,has/SN/Wlace/Station/_
id	 add stationsat(_,Station,_)
ip  dmeq(busstation,BussStat),
    dmeq([station,neighbourhood],SN),
    dmeq([location,place,neighbourhood],Wlace),
    station(Station).


% Where is tuc ,Are you here 
3810 rule 
is  tuc isa _,be1/tuc/A,srel/in/place/_S/A 
id	 add message(cannotanswer)
ip  [].

% Where is tt 
3811 rule 
is  which(S),tt isa _,be1/tt/A,srel/in/place/S/A 
id	 add stationsat(servicekontoret,_,_)
ip  [].

% Where is a neighbourhood 
3812 rule 
is  which(S),Place isa neighbourhood,be1/Place/A,srel/in/place/S/A 
id	 not message(nearest_station(Place,_)), %%  Not double!
    add stationsat(Place,_,_)
ip  bound(Place).

% Where is a neighbourhood 
3813 rule 
is  which(S),Place isa neighbourhood,has/neighbourhood/place/Place/S
id	 add stationsat(Place,_,_)
ip  bound(Place).

% Where is Station?
whereisstation rule 
is  exactly (which(Station),Station isa BussStat,event/real/_)
id	 add stationsat(_,Station,_)
ip  dmeq(busstation,BussStat),bound(Station).

% Station at Place?
station_at_place rule 
is  which(Stations),
    Stations isa station,be1/Stations/A,srel/AT/place/Place/A
id	 add stationsat(Place,Stations,_)
ip  dmeq(at,AT),statorplace(Place).


% Place has station
place_has_station rule %% TA-010117
is  which(Station),
    Station isa station, Place isa neighbourhood,has/_/station/Place/Station
id	 add stationsat(Place,_Stations,_)
ip  statorplace(Place),
    Place \== trondheim. %% TA-010511


% Which stations are AT Place
stationsnear1 rule 
is  which(St),St isa station,BE/St/C,srel/AT/place/Place/C
id	 not message(nearest_station(Place,_asbjørnsensgt)), %% TA-010530
    add stationsnear(Place,St,_)
ip  dmeq([at,in,on,nil,near,around],AT), %%  stations between A and B ==> from A to B
    dmeq([be1,exist,lie1],BE),statorplace(Place).

% Stations near Place?
stationsnear2 rule 
is  Place isa station,be1/Place/A,srel/NEAR/place/GivenPlace/A
id	 not message(_),
    
    add stationsnear(GivenPlace,Place,_)
ip  dmeq(near,NEAR),statorplace(GivenPlace),statorplace(Place).



% Stations near Place?
stationsnear3 rule 
is  FreePlace isa station,be1/FreePlace/A,srel/NEAR/place/GivenPlace/A
id	 not message(_),
    add stationsnear(GivenPlace,_,_) %%  (stations ???)
ip  dmeq(near,NEAR),statorplace(GivenPlace).


% Stations in Place?
stationsnear4 rule 
is  FreePlace isa station,be1/FreePlace/A,srel/in/Neigh/GivenPlace/A
id	 not message(_),
    add stationsnear(GivenPlace,_,_) %%  (stations ???)
ip  dmeq([place,neighbourhood],Neigh),
    statorplace(GivenPlace).


% Places near Place?
stationsnear5 rule  
is  be1/FreePlace/A,srel/near/place/GivenPlace/A 
id	 not message(_),                                %% TA-010530
    add stationsnear(GivenPlace,FreePlace,_)
ip  statorplace(GivenPlace).


% Which stations  AT Place (special after  hva heter ...)
stationsnear6 rule 
is  which(St),St isa station,srel/AT/place/Place/_
id	 not message(_),     %% TA-010530 
    add stationsnear(Place,St,_)
ip  dmeq([at,in,on,nil,near,around],AT),
    statorplace(Place).




% Where can i get off the bus
3872 rule 
is  which(Place),present C isa bus,get/_/E,
	 srel/in/place/Place/E,srel/off/vehicle/C/E
id	 add message(mustknow(bus)) 
ip  unbound(Place),unbound(C).

% Where can i get on the bus
3878 rule 
is  which(Place),present C isa bus, srel/In/place/Place/E,srel/On/vehicle/C/E,
    not NTH isa neighbourhood cond bound(NTH), %% NBNB NEW
    not NTH isa station       cond bound(NTH)  %% TA-010214

id	 not message(_), 
    add message(mustknow(bus)) 
ip  dmeq([in,at],In),          %% TA-010117
    dmeq([on,off,by],On),      %% av --> by (SIC)  Repair rule 
    unbound(Place),unbound(C).

% Which stations do you know
3884 rule 
is  which(Station),tuc isa program,Station isa station,knowthing/tuc/Station/_
id	 add allstations(_)
ip	 [].

% What is the numer of bus Bus
3889 rule 
is  which(N),has/bus/number/Bus/N
id	 add message(is(bus,Bus))
ip	 bound(Bus). 


%%%%% first/last stop 

% What is the first STATION FOR Bus
endstat1 rule 
is  which(A),be1/A/D,srel/in/place/Station/D,adj/first/Station/_,
    srel/FOR/bus/Bus/D,
    present Bus isa bus,present Station isa STATION
id  add endstation(Bus,_,D)
ip  dmeq(for,FOR),exbus(Bus),dmeq(place,STATION).

% What is the last STATION FOR Bus
endstat2 rule 
is  which(A),be1/A/D,srel/in/place/Station/D,adj/last/Station/_,
    srel/FOR/bus/Bus/D,
    present Bus isa bus,present Station isa STATION
id  add endstation(Bus,_,D)
ip  dmeq(place,STATION),dmeq(for,FOR) ,exbus(Bus).


% What is the name of the endstation for Bus
endtstat3 rule 
is  which(A),B isa endstation,has/_V/endstation/Bus/B,be_named/A/B/_
id  add endstation(Bus,_,_)
ip  exbus(Bus).

% What is the endstation for Bus
endstat4 rule 
is  which(A),has/_/endstation/Bus/A
id  add endstation(Bus,_,_)
ip  exbus(Bus). 

% Where is the endstation for Bus %% TA-010116
endstat41 rule 
is  which(A),A isa place,has/_/endstation/Bus/B,be1/B/D,srel/in/place/A/D
id  add endstation(Bus,_,_)
ip  exbus(Bus). 

% Where is the endstation for Bus %% TA-010116
endstat42 rule 
is  which(A),A isa place,Bus isa Route,turn/Bus/D,srel/in/place/A/D
id  add endstation(Bus,_,_)
ip  dmeq(vehicle,Route),exbus(Bus). 

% What is the endstation for Bus
endstat5 rule 
is  which(A),has/_/endstation/Tram/A, Tram isa tram
id  add endstation(One,_,_) %% # Trikken %% TA-001119
ip  thetramno(One).

/*  Redundant %% TA-011025

% What is the endstation for Bus
endstat6 rule 
is  which(A), A isa endstation,Bus isa BR, 
%%    BE/A/E,  %% May be missing   %% TA-011025
    event/real/E,srel/ON/BR1/Bus/E
id  add endstation(Bus,_,_)
ip  exbus(Bus),dmeq([on,for,in,to],ON),dmeq([bus,route],BR),
    dmeq([bus,route],BR1). %% ,dmeq([be1,be_named],BE). 
*/


% endstation for Bus
endstat6b rule 
is  which(A), A isa endstation,Bus isa BR, BE/A/E,event/real/E,srel/ON/BR1/Bus/E
id  add endstation(Bus,_,_)
ip  exbus(Bus),dmeq([on,for,in,to],ON),dmeq([bus,route],BR),
    dmeq([bus,route,vehicle],BR1), 
    dmeq([be1,be_named],BE). 


% What is the endstation for Bus
endstat7 rule 
is  which(A), A isa endstation,Bus isa BR, BE/A/E,event/real/E,srel/ON/BR1/Bus/E
id  add endstation(Bus,_,_)
ip  exbus(Bus),dmeq([on,for,in,to],ON),dmeq([bus,route],BR),
    dmeq([bus,route,vehicle],BR1), 
    dmeq([be1,be_named],BE). 


% Test Endstation
4285 rule 
is  exactly (test, _ isa endstation, event/real/_)
id  add message(mustknow(bus))
ip  [].

%%%%% is Station a station etc.

% is station a bus station?
3932 rule 
is  exactly (test,Station isa Placeq,
             has/vehicle/station/_/Station,event/real/_) 
id	 add station(Station)
ip  dmeq(place,Placeq).


% is station a bus station?
3938 rule 
is  exactly (test,Station isa station,event/real/_) 
id	 add testanswer(properstation(Station),_) %% not Kristiansund 
ip  [].



% is Bus a Bus 
buzz rule 
is  exactly (test,B52 isa BR,event/real/_)
id	 add true
ip  dmeq(bus,BR),exbus(B52).


%%%%% How many

% How many different buses  
% with a passing  (bus = departures) 

3948 rule 
is  howmany(Bus),present Bus isa bus %% adj/different/Bus/_ %% TA-010523
id  passevent(Deps,Bus,_,_,_,_),
    add numberof(departures,Deps,_)
ip  [].


depsinayear rule 
is  howmany(Bus),present Bus isa bus, A isa YEAR, srel/IN/time/A/_
id  clear, add message(donotknow)  % Dont be fooled
ip  dmeq([in,nil],IN),
    dmeq([year,month,week,minute,second],YEAR).


3953 rule 
is  howmany(Bus),present Bus isa bus,
    not srel/in_order_to/thing/_/_  %% probably  # transfers %% TA-010905
id  connections(_,_,_,_,_,_,_,Deps,_),
    add numberof(departures,Deps,_)
ip  [].

3958 rule 
is  howmany(Arrdep),present Arrdep isa ARRDEP,
    not present srel/nil/week/_/_ %% hver uke

id  passevent(Deps,_,_,_,_,_),
    add numberof(departures,Deps,_)
ip  dmeq(arrdep,ARRDEP).

3963 rule 
is  howmany(Arrdep),present Arrdep isa ARRDEP
id  connections(_,_,_,_,_,_,_,Deps,_),
    add numberof(departures,Deps,_)
ip  dmeq(arrdep,ARRDEP).


%%%%% By bus

% travel "by" a vehicle which is not a bus
3981 rule 
is  present B isa NOTBUS,srel/by/vehicle/B/_
id	 not fail,
	 add fail
ip  dmeq(notbus,NOTBUS).


%% No information of specific dates, (not even christmas)
%% NOT PRIMARY ERROR,  After airbus 
%% Clear would kill other error messages

xmas rule 
is  christmas isa date, clear  
id  add message(nodates) 
ip  []. 



%%%%% Høflighetsfraser og tull og sludder

howmany99 rule   %% LAST of howmany ?  Moved before tuchelp
is  replaceall howmany(A)              %% TA-010314
    with       which(A),
    not srel/nil/week/_/_ 
id  [] 
ip  [].


% What is your task/purpose/job/quest/ 
task rule 
is  which(A),(has/agent/Task1/B/A,B isa program,A isa Task2)
id	 add message(howtuchelp)
ip	 dmeq([task,job,domain],Task1), dmeq([task,job,domain],Task2). 

% What can you tell about ? 
tuchelp1 rule
is  which(_A),TUC isa program,DO/TUC/_ %%  fortelle om/ svare på etc
id	 add message(howtuchelp)
ip	 dmeq(tuc,TUC),dmeq([do1,tell,answer],DO).

% can you tell / hva kan du hjelpe med
tuchelp2 rule 
is  TUC isa program,DO/TUC/_ 
id	 not departure(_,_,_,_),   %% already answering 
    add message(howtuchelp)
ip	 dmeq(tuc,TUC),dmeq([do1,tell,knowthing,help],DO).

% What can you do? Can you anyth
tuchelp3 rule 
is  TUC isa program,DO/TUC/_A/_, 
    not present (_ isa place) , %% not do you know where ...
    not present be_named/_/_/_, %%% ETC ETC 
    not present _ isa error     %% TA-001106 :-(
id	 not passevent(_,_,_,_,_,_),
    add  message(howtuchelp)
ip	 dmeq(tuc,TUC),dmeq([do1,tell,knowthing],DO). 

% What can you tell about ? 
tuchelp4 rule
is  which(_A),TUC isa program,DO/TUC/_ %%  fortelle om/ svare på etc
id	 add message(howtuchelp)
ip	 dmeq(tuc,TUC),dmeq([do1,tell,answer],DO).

% What can i ask
tuchelp5 rule
is  which(_A),I isa self,DO/I/_ 
id	 add message(howtuchelp)
ip	 dmeq([ask],DO).

tuchelp6 rule 
is  help/tuc/_/_
id  add message(howtuchelp)
ip  [].

% What can jeg spørre om
tuchelp7 rule
is  which(Q),Q isa question,answer/TUC/_/_ %%  spørre
id	 add message(howtuchelp)
ip	 dmeq(tuc,TUC).


% Hvilke spørsmål kan jeg stille
tuchelp8 rule
is  which(_Q), %% Q isa question, HVA kan jeg ....
    ask/'I'/_/_ %%  jeg spørre
id	 add message(howtuchelp)
ip	 [].


% What is possible for you %% TA-001204
tuchelp9 rule
is  which(Q), 
    adj/Possible/Q/E,
    srel/for/agent/Bustuc/E

id	 add message(howtuchelp)
ip	 dmeq([possible,impossible],Possible),
    dmeq(tuc,Bustuc).



% I need help %% TA-001204
tuchelp10 rule
is  new, I isa self,
    want/I/X/_,
    X isa help
id	 add message(howtuchelp)
ip	 [].






4000 rule 
is  do,hello
id	 add message(start)
ip	 [].

4004 rule 
is  do,quit
id	 add message(quit)
ip	 [].

4008 rule 
is  do,quit(Mess)
id	 add message(quit(Mess))
ip	 [].

%%%%% Trimming

% Remove "buses" from Opts if "time" is present
4020 rule 
is  []
id  replace passevent(A,B,C,Opts,D,E)
    with    passevent(A,B,C,NewOpts,D,E)
ip  member(time,Opts),delete1(buses,Opts,NewOpts).

% Remove "buses" from Opts if "time" is present
4026 rule 
is  []
id  replace connections(A,B,Bus2,A0,C,D,Opts,E,F) 
    with    connections(A,B,Bus2,A0,C,D,NewOpts,E,F)
ip  member(time,Opts),delete1(buses,Opts,NewOpts).


%% replace time with number  to passevent if howmany



% Problem  remove some part if context, but  leave rest unseen
% Here is a temporary solution
 
% Very general questions, late ...

% Which bus stations 
busstations0  rule 
is  exactly (which(A),A isa station)
id  not departure(_,_,_,_),
    add allstations(_)
ip  unbound(A).


% Which bus stations 
busstations1 rule
is  exactly (which(A),A isa station,event/real/_) 
id  not departure(_,_,_,_),
    add allstations(_)
ip  unbound(A).


% Which bus stations 
4073 rule 
is  exactly (which(A),A isa station,be1/A/B,event/real/B) 
id  not departure(_,_,_,_),
    add allstations(_)
ip  [].


% Which tram stations 
4074 rule 
is  exactly (which(A),A isa tramstation,be1/A/B,event/real/B) 
id  not departure(_,_,_,_),
    add tramstations(_)
ip  [].

% Which tram stations %% TA-001110
4075 rule 
is  exactly (which(A),A isa tramstation) 
id  not departure(_,_,_,_),
    add tramstations(_)
ip  [].

% Where are the tram stations %% TA-001113
4076 rule 
is  exactly (which(A),A isa place,B isa tramstation,be1/B/C,srel/in/place/A/C,event/real/C)
id  not departure(_,_,_,_),
    add tramstations(_)
ip  [].

% Where are the bus stations %% TA-001113
4077 rule 
is  exactly (which(A),A isa place,B isa station,be1/B/C,srel/in/place/A/C,event/real/C)
id  not departure(_,_,_,_),
    add allstations(_)
ip  [].

% which stations (is had by) TT %% TA-010511
whichavestat rule 
is  which(A),A isa station,has/_/station/_/A   %% Too general ?
id  not departure(_,_,_,_),
    add allstations(_)
ip  [].




%........


% Remove allstations if stationsnear

4084 rule 
is []
id stationsnear(_,_,_), remove allstations(_)
ip [].


4089 rule 
is []
id passesstations(_,_,_,_), remove allstations(_)
ip [].


%%% Section   Add Direction if Missing   

keepfrom rule 
is  []
id  not keepfrom(_,_,_),
    not connections(_,_,_,_,_,_,_,_,_),
    remove  passevent(Depset,Bus,OnPlace,Opts,Day,E),
    add (keepfrom(hovedterminalen,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,E))
ip  member(to,Opts),
    \+ fromstationonly(OnPlace),  
    \+ neverpasses(Bus,hovedterminalen)       %%  OK if Bus is free

    :- single.   


keepto  rule 
is  [] 
id  not keepto(_,_,_),
%   not keepfrom(_,_,_), 
    not connections(_,_,_,_,_,_,_,_,_),
    not frequency(_,_,_,_),  
    not departure(_,hovedterminalen,_,_), 
    not numberof(departures,_,_), 
    remove  passevent(Depset,Bus,OnPlace,Opts,Day,E),
    add (keepto(hovedterminalen,Depset,NewDepset),
			passevent(NewDepset,Bus,OnPlace,Opts,Day,E))
ip  member(from,Opts), 
    \+ tostationonly(OnPlace), 
    \+ neverpasses(Bus,hovedterminalen),    %%  OK if Bus is free
    \+ corr(OnPlace,hovedterminalen)        %%  from m2 to HT !?
  :- single.   


% Moved back. This is a catchall 

% Which buses and stations
all1 rule 
is  which((Bus,Station)),Bus isa bus,Station isa station
id	 not departure(_,_,_,_,_),
    add (allstations(_),allbuses(_))
ip  [].


listbus2  rule %% Catchall
is  tuc isa program, B52 isa BR, LIST/tuc/B52/X,event/real/X,
    not present  srel/_/_/_/_   ,  
    not B63 isa route cond bound(B63) %% not mention a route
id  not departure(_,_,_,_),
    add allbuses(_)
ip  dmeq(list,LIST),dmeq(bus,BR),unbound(B52).


mustknowstation rule 
is  be1/Dep/_,
    not _ isa route_plan ,    %%  Hack neither Dep must not be 
    Dep isa Departure, %% not first
    not srel/_/place/_/_,
    not own/_/_/_,           %% generalize! 
    not adj/_/_/_ ,           %% electric :-)
    not has/_route/number/_/_,
    not _ isa internet 


id   not message(_), 
    not departure(_,_,_,_),
	 not findstations(_,_,_), 
    not passesstations(_,_,_,_),
    addcon  message(mustknow(station))  %% only once
ip  \+ user:value(dialog, 1),
    dmeq(busdeparr,Departure). 


% PASS Bus (Place is unbound, bus is unknown)
5646 rule 
is  Bus isa BR,PASS/Bus/_,
    not srel/_/place/_/_,       %%  etc etc etc
    not srel/for/bus/_/_ 
id	 not message(not(bus,_)),
    not message(foreign(_)),  
    not message(donotknow),
    not departure(_,_,_,_),
	 not findstations(_,_,_), 
    not passesstations(_,_,_,_),
    not askfor(_, where::departure, _),
    addfront askfor([], where::departure, _Place)
ip  user: value(dialog, 1), 
    dmeq(bepass,PASS),
    dmeq(busdeparr,BR), 
    unbound(Bus). 


% bus has time (Place is unbound, bus is unknown) 
5647 rule 
is  Bus isa BR, has/route/time/Bus/_,
    not srel/_/place/_/_,       %%  etc etc etc
    not srel/for/bus/_/_  

id	 not message(not(bus,_)),
    not message(foreign(_)), 
    not message(donotknow),
    not departure(_,_,_,_),
	 not findstations(_,_,_), 
    not passesstations(_,_,_,_),
    addcon  message(mustknow(station))    %% More natural, only once

ip	 dmeq(bus,BR),  unbound(Bus).

istand rule      %% Jeg står på nth  ØF-990917
is  context    (I isa self, event/real/A),
    replaceall (STAND/I/A, srel/on/place/P/A)
    with       (go/I/A, srel/from/place/P/A)
id  []
ip  user:value(dialog, 1),
    dmeq(stand,STAND).

beforemodifier rule
is  not _I isa self,
    replace (srel/REL/time/Cl/A,Cl isa clock,event/real/A)
    with ('I' isa self, srel/REL/time/Cl/A,Cl isa clock, be1/'I'/A, event/real/A)
id  []
ip  user:value(dialog, 1), 
    dmeq(timeprep, REL).



ourbefore rule              % KB-990917
is  replace srel/before/time/Rel/E with
    srel/before/time/Rel/E,
    present go/_/E, 
    present event/real/E,
    not srel/_/place/_/E,
    not srel/_/neighbourhood/_/E,
    not srel/_/station/_/E,
    add srel/to/place/NewPlace/E
id  not askfor(_, where::arrival, _),
    replace atday(Day) with atday(Day), % unmark as seen
    addfront askfor([], where::arrival, NewPlace)
ip  user:value(dialog, 1).

ourafter rule              % KB-990917
is  replace srel/after/time/Rel/E with
    srel/after/time/Rel/E, 
    present go/_/E, 
    present event/real/E,
    not srel/_/place/_/E,
    not srel/_/neighbourhood/_/E,
    not srel/_/station/_/E,
    add srel/from/place/NewPlace/E
id  not askfor(_, where::departure, _),
    replace atday(Day) with atday(Day), % unmark as seen
    addfront askfor([], where::departure, NewPlace)
ip  user:value(dialog, 1). 



mustknowplace99 rule   %% No bus or place   
is  go/X/_ ,X isa Mov %% now this may be caused by an extra I %% when the bus goes
id  not departure(_,_,_,_),          %% gives an extra go
    not message(nearest_station(_,unknown)), 
    not message(mustknow(station)), 
    not message(sameplace(_,_)),     %% TA-001112 
    not message(onlyonesentence),    %% TA-001115 
    not message(onlyonething),       %% may give spurious errors
    not ticketprice(_),              %% TA-010504
    addcon message(mustknow(place)) 
ip  dmeq([bus,vehicle,person,route,tram,self],Mov),  %% TA-010511
    unbound(X) :-

    single.


mustknowplace100 rule    %% No bus or place   
is  be1/X/_ ,X isa Mov,   %% now this may be caused by an extra I %% when the bus goes
    not present _ isa information,   %% Ad Hoc %% TA-010321
    not present equal/_/_            %% er voll en buss %% TA-010909
id  not departure(_,_,_,_),          %% gives an extra go
    not message(nearest_station(_,unknown)),
    not message(mustknow(station)),
    not message(sameplace(_,_)),     %% TA-001112 
    not message(onlyonesentence),    %% TA-001115 
    not message(onlyonething),       %% may give spurious errors
   addcon message(mustknow(place)) 
ip  dmeq([bus,vehicle,person,route,tram,self],Mov),  %% TA-010511
    unbound(X)

:- single.

mustknowplace101 rule   %% TA-010511
is  not explain,                   %% TA-010926
    I isa self, Go/I/_,
    not srel/_/place/_/_ ,         %% TA-010530
    not present _ isa information %% Ad Hoc %% TA-010321
id  not departure(_,_,_,_),          %% gives an extra go
    not message(nearest_station(_,_unknown)), %% TA-010530
    not message(mustknow(station)), 
    not message(sameplace(_,_)),     %% TA-001112 
    not message(onlyonesentence),    %% TA-001115 
    not message(onlyonething),       %% may give spurious errors
    addcon message(mustknow(place)) 
ip  dmeq([go,come,be1,get],Go)

:- single.



%%% %%% %%% %%% %%% %%% %%% %%%

%%  Sort out the unknown depsets:

%% We don't know if it's to or from. Hence, it's unknown...
fledsbo8 rule
is []
id present departure(_,_,_,Depset1),
   not depset(_, _),
   add depset(unknown, [Depset1])
ip user:value(dialog, 1).


%% If keepafter, we guess from
fledsbo12 rule
is      []
id      not depset(from, _),
        replace depset(unknown, List)
        with depset(from, List),
        present keepafter(_, X, _)
ip      user:value(dialog,1),
        varmember(X, List).

%% If keepbefore, we guess to
fledsbo13 rule
is      []
id      not depset(to, _),
        replace depset(unknown, List)
        with depset(to, List),
        present keepbefore(_, X, _)
ip      user:value(dialog,1), 
        varmember(X, List).


%% This was allready in buslog, but it makes it hard for makeframe.
fledsboaround rule
is      []
id      replace keeparound(Time, R, Rny)
        with keepbetween(LowTime,HighTime,R,Rny)
ip      user:value(dialog,1), 
        subfromtime(Time,14,LowTime),
        addtotime(Time,14,HighTime).

fledsbowithin rule
is      []
id      replace keepwithin(Time,Mins,R,Rny)
        with keepbetween(Time,NewTime,R,Rny)
ip      user:value(dialog,1), 
        addtotime(Time,Mins,NewTime).

fledsboprice rule
is      []
id      replace (connections(_,_,_,From,To,_,_,_,_), ticketprice(_))
        with findprice(From, To, _, _)
ip      user:value(dialog,1).



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                      END OF RULE SECTION                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%-----------------------------------------------------------------------------------%


%%%%%%%% dmeq(A,B) betyr at ordet til høyre
%%%%%%%% betyr det til venstre i dette domenet
%%%%%%%% Sparer mange, mange regler 
%%%%%%%% First argument must be bound !!!


dmeq([X|Y],U):-!,      
    user:member(U,[X|Y]).


dmeq(about,about).
dmeq(about,of).  
dmeq(about,over).  
dmeq(about,regarding). 
dmeq(about,with). % oversikt med busser %% TA-010319 

dmeq(after,after).
dmeq(after,from).    %%  (time, Norwagism)

dmeq(around,about).   %% should have been synonym in sem ? 
dmeq(around,around).
dmeq(around,in). 

dmeq(arrdep,arrival).
dmeq(arrdep,clock).  
dmeq(arrdep,departure).
dmeq(arrdep,route_plan). 
dmeq(arrdep,time). 


dmeq(at,at).
dmeq(at,below). %% TA-010625
% dmeq(at,for). %% Experiment  show route for night
dmeq(at,in).
dmeq(at,nil).
dmeq(at,on).
% dmeq(at,by).  %% om morgenen (Norwagism)

dmeq(atround,nil). 
dmeq(atround,at).  
dmeq(atround,around). 

dmeq(attime,nil). 
dmeq(attime,at). 

dmeq(battime,nil). 
dmeq(battime,at).  
dmeq(battime,before).

dmeq(before,before). 
dmeq(before,to). %% (time, Norwagism)
dmeq(before,within).  

dmeq(beforenil,before).
dmeq(beforenil,nil). 
dmeq(beforenil,to).     %% Norwagism (være på Nardo til 0800)  


%  dmeq(bepass,be1). %% if be, other rukes apply %% TA-010923 
dmeq(bepass,exist). 
dmeq(bepass,live). 
dmeq(bepass,X):-dmeq(pass,X).


dmeq(between,between).
dmeq(between,during). %% during 9 to 10
dmeq(between,in).     %% i tiden 1900 - 2000 

dmeq(bus,bus).
dmeq(bus,route). 
dmeq(bus,route_plan). 
dmeq(bus,trip). 
dmeq(bus,vehicle).

% dmeq(bus,direction).  %%  e.g. way
%                       retning singsaker "=" bus singsaker   SIC!


dmeq(busdeparrtime,arrival).
dmeq(busdeparrtime,bus).  
dmeq(busdeparrtime,clock).
dmeq(busdeparrtime,departure).
dmeq(busdeparrtime,direction).   %% veg -> direction ( in stead of route)
dmeq(busdeparrtime,route). 
dmeq(busdeparrtime,time). 
dmeq(busdeparrtime,tram).        %% TA-010123
dmeq(busdeparrtime,vehicle).        %% TA-010123

dmeq(busdeparr,arrival).
dmeq(busdeparr,bus).         %% what time is it OOPS
dmeq(busdeparr,departure).
dmeq(busdeparr,direction).   %% veg -> direction ( in stead of route)
dmeq(busdeparr,route). 
dmeq(busdeparr,route_plan). 
dmeq(busdeparr,tram). 
dmeq(busdeparrtime,vehicle).        %% TA-010123

%% dmeq(busdeparr,time).        %%  IKKE ALLE NÅR-spørsmål

dmeq(busstation,station).   
dmeq(busstation,busstation). %%  (busstation is new subclass)

dmeq(by,around). 
dmeq(by,at).
dmeq(by,by).
dmeq(by,for).  %% passage for bus 
dmeq(by,in).   %% ( in John Aaaes veg ) EXPERIMENT
dmeq(by,near). 
dmeq(by,nil).
dmeq(by,off).    %%   passeringer av nth ( a bit artificial )
dmeq(by,over).
dmeq(by,past).
dmeq(by,through).

% dmeq(by,on).     %%   EXPERIMENT  AVH on Rosenborg \= AVH past Rosenborg
%                %% til trolla på byneset \= til trolla forbi byneset 
%                %% TA-001019
%                %%  er på torget
%                %% jeg bor på A ...  passere  B...  pass1  pass2
%                %%  reinstalled   in order to be on City Syd 

% dmeq(by,to).           %%  Correct ?

dmeq(can,understand). 
dmeq(can,knowthing).  

dmeq(change,change).

dmeq(clock,clock).
dmeq(clock,time). 

dmeq(colour,pink).
dmeq(colour,green).
dmeq(colour,yellow).
dmeq(colour,orange).
dmeq(colour,red).
dmeq(colour,blue).
dmeq(colour,cyan).
dmeq(colour,white).
dmeq(colour,black).
dmeq(colour,purple).
dmeq(colour,grey).
dmeq(colour,gray).
dmeq(colour,brown).
dmeq(colour,violet).

dmeq(come,come).
dmeq(come,arrive).
dmeq(come,reach).
dmeq(come,stop).

dmeq(day,day).
dmeq(day,afternoon).
dmeq(day,morning).
dmeq(day,night).
dmeq(day,evening).

dmeq(dayordate,day). 
dmeq(dayordate,date).

dmeq(dayortime,day).
dmeq(dayortime,time).  

dmeq(do,do).  %% Do ! 
dmeq(do,test).%% Can you do? 
dmeq(do,new).

%  dmeq(dummy,whole). %% whole route means not only buses 
dmeq(dummy,good).
dmeq(dummy,better).
dmeq(dummy,best).

% dmeq(dummy,fast).    %% Synonym with next, i.e. with time 
% dmeq(dummy,faster).  %% Synonym with next, i.e. with time
% dmeq(dummy,fastest). %% Synonym with next, i.e. with time

% dmeq(duration,distance). %% Make a distinction %% TA-010511 
dmeq(duration,duration). 
dmeq(duration,traveltime). 
dmeq(duration,time). 

dmeq(evening,in_evening).   
% dmeq(evening,this_evening). 
dmeq(evening,tonight).

dmeq(exist,exist).
dmeq(exist,be1). 

dmeq(fast,fast).
dmeq(fast,faster).
dmeq(fast,fastest).
dmeq(fast,good).
dmeq(fast,better).
dmeq(fast,best).

dmeq(for,for).
dmeq(for,on).
dmeq(for,at).

dmeq(forin,for).
dmeq(forin,in).

dmeq(from,from). %% also awayfrom ?

dmeq(hour,hour).
dmeq(hour,duration). 
dmeq(hour,time).   %%  Semantics may be vague (time IS tid, no pun)


dmeq(information,information).
dmeq(information,list). 

dmeq(intime,nil).
dmeq(intime,in).

dmeq(knownlanguage,norsk).
dmeq(knownlanguage,bokmål).
dmeq(knownlanguage,nynorsk).
dmeq(knownlanguage,norwegian).
dmeq(knownlanguage,english).

dmeq(language,french).

dmeq(leave,start).
dmeq(leave,leave).
dmeq(leave,depart).

dmeq(list,list).   % the verb
dmeq(list,give).  
dmeq(list,write).
dmeq(list,show). 


dmeq(quarter,quarter).  
dmeq(quarter,duration).
dmeq(quarter,time).  %%  Semantics may be vague (time IS tid, no pun)

dmeq(measure,size). 
dmeq(measure,length).
dmeq(measure,weight). 

dmeq(minute,minute).
dmeq(minute,time).     %% Semantics may be vague
dmeq(minute,duration). %% TA-010928

dmeq(morning,in_morning).
dmeq(morning,this_morning).

dmeq(mtwtfss, monday).
dmeq(mtwtfss, tuesday).
dmeq(mtwtfss, wednesday).
dmeq(mtwtfss, thursday).
dmeq(mtwtfss, friday).
dmeq(mtwtfss, saturday).
dmeq(mtwtfss, sunday).
dmeq(mtwtfss, weekend). 

dmeq(notbus,airbus). 
dmeq(notbus,boat). 
dmeq(notbus,boat_route_plan).
% dmeq(notbus,car).   means bus 
dmeq(notbus,helicopter).
dmeq(notbus,nightbus). 
dmeq(notbus,airplane).  %% TA-011004 
dmeq(notbus,plane).     %% 
dmeq(notbus,schoolbus). 
dmeq(notbus,taxi).
dmeq(notbus,train). 
dmeq(notbus,tram).
dmeq(notbus,train_route_plan). 
dmeq(notbus,tram_route_plan). 
dmeq(notbus,otherbus). 
dmeq(notbus,underground). 


dmeq(notbustram,boat). 
dmeq(notbustram,boat_route_plan).
dmeq(notbustram,helicopter). 
dmeq(notbustram,nightbus). 
dmeq(notbustram,airplane). %% TA-011004 
dmeq(notbustram,plane). 
dmeq(notbustram,schoolbus). 
dmeq(notbustram,taxi).
dmeq(notbustram,train). 
dmeq(notbustram,train_route_plan). 
dmeq(notbustram,otherbus). 
dmeq(notbustram,underground). 


dmeq(onoff,on).
dmeq(onoff,off). 

dmeq(onto,on).  %% Ad hoc 
dmeq(onto,to).

dmeq(over,of).         %%  (E)
dmeq(over,over).       %%  (N) 


dmeq(nato,on). %% wanna be ...
dmeq(nato,at).
dmeq(nato,outside). %% TA-001024
dmeq(nato,in).      %% in sentrum %% TA-010211

dmeq(near,at).
dmeq(near,close).
dmeq(near,in). 
dmeq(near,near).
dmeq(near,nearer).
dmeq(near,nearest).
dmeq(near,on). 
dmeq(near,outside). 

dmeq(pass,arrive).
%% dmeq(pass,be1).    %% after stunt %% TA-010923   %% EXPERIMENT
dmeq(pass,come).
dmeq(pass,depart).
dmeq(pass,drive).
dmeq(pass,get). 
dmeq(pass,go).
dmeq(pass,leave).
dmeq(pass,pass).
dmeq(pass,reach).
dmeq(pass,see).  %% want to see Rosenborg
dmeq(pass,run).
dmeq(pass,serve).
dmeq(pass,start).
dmeq(pass,stop).
% dmeq(pass,use).  %% benytte stasjon Norw.
                   %% PASS/X/Y/Z =  use/9/X or pass/9/P

dmeq(passby,drive).
dmeq(passby,go).
dmeq(passby,go2). %% follow  %% TA-010621
dmeq(passby,leave).     %%  NB  leave is neutral wrp direction
dmeq(passby,pass).
dmeq(passby,run).
dmeq(passby,serve).
dmeq(passby,cover).   %% TA-001112


dmeq(place,airport).  %% TA-001024
dmeq(place,busstation).
dmeq(place,city). 
dmeq(place,country). 
dmeq(place,neighbourhood).
dmeq(place,place).
dmeq(place,station).
dmeq(place,stop).


dmeq(pm,afternoon).    %% Expression denoting after 1200 AM 
dmeq(pm,evening). 
dmeq(pm,in_afternoon).
dmeq(pm,in_evening). 
dmeq(pm,in_night). 
dmeq(pm,tonight).      %% TA-00923

dmeq(position,first).
dmeq(position,next).
dmeq(position,last).
dmeq(position,previous). 

dmeq(receive,get).     %% English
dmeq(receive,receive). %% Norwegian
dmeq(receive,list).    %% ( faa listet )

dmeq(price,price).
dmeq(price,cost).

dmeq(route,route).       %%  Not bus
dmeq(route,route_plan).  %%  Not bus

dmeq(see,see). 
dmeq(see,get). 
dmeq(see,receive).

dmeq(show,give).
dmeq(show,show). 
dmeq(show,list). 
dmeq(show,tell).       %% TA-010314

dmeq(speak,answer). 
dmeq(speak,ask).
dmeq(speak,knowthing). 
dmeq(speak,speak). 
dmeq(speak,understand).


dmeq(stand,stand).
dmeq(stand,be).  
dmeq(stand,be1). 

dmeq(ticket,activity). %%  SIC (techn)
dmeq(ticket,bus).      %% (SIC)
dmeq(ticket,price).    %% (?)
dmeq(ticket,ticket).
dmeq(ticket,adult). 
dmeq(ticket,child).
dmeq(ticket,person).
dmeq(ticket,route).   %% (reise)
dmeq(ticket,trip).    %% (reise)
dmeq(ticket,vehicle).        %%  ( tram, train ???? )
dmeq(ticket,season_ticket). 
dmeq(ticket,special_ticket). 

% ... dog, leaddog, pram, piano...

 
dmeq(take,take).
dmeq(take,reach).

dmeq(time,time).
dmeq(time,duration).
dmeq(time,clock).

dmeq(timeclock,time). %% TA-00728   NOT duration
dmeq(timeclock,clock). 


dmeq(timeplan,time).  
dmeq(timeplan,route_plan).
dmeq(timeplan,departure). 

dmeq(timeprep,nil). 
dmeq(timeprep,before).
dmeq(timeprep,after).
dmeq(timeprep,around).
dmeq(timeprep,at).

dmeq(timeclass,time). %%  buss på kvelden ==> srel/on/evening/E 
dmeq(timeclass,evening).
dmeq(timeclass,daypart). 
%% etc ad nauseam



dmeq(timeunit,second). %%  :-)
dmeq(timeunit,minute).
dmeq(timeunit,hour).
dmeq(timeunit,day).    %% :-)

dmeq(to,on).    %% Busstider for buss 9 på Teglverkskrysset. %% TA-001117
dmeq(to,to).
dmeq(to,for).      %% Anglicism, not 100% correct in Norwegian
dmeq(to,towards). 

dmeq(tofor,to). 
dmeq(tofor,of). 
dmeq(tofor,for). 

dmeq(tofromby,at).
dmeq(tofromby,by).
dmeq(tofromby,for).
dmeq(tofromby,from).
dmeq(tofromby,in).
dmeq(tofromby,nil).
% dmeq(tofromby,off).  
dmeq(tofromby,on).
dmeq(tofromby,over).
dmeq(tofromby,past).
dmeq(tofromby,through).
dmeq(tofromby,to).


dmeq(trafficant,bus). %%  allowed to go by bus ( e.g. no cats )
dmeq(trafficant,departure). %% TA-001021
dmeq(trafficant,direction). %% far fetched ???  %% hvilken vei går til
dmeq(trafficant,driver).
dmeq(trafficant,person).
dmeq(trafficant,program). %% "du" 
dmeq(trafficant,route).   %% TA-010321 
dmeq(trafficant,self).
dmeq(trafficant,vehicle).

dmeq(trafficant,Person):- 
    user:subclass0(Person,agent). %% kan man ta %% TA-011023


dmeq(tram,tram_route_plan). 
dmeq(tram,tram). 

dmeq(travel,arrive). %  Must not be first
%% dmeq(travel,be1).    %  skal være = går ??? havoc of mustknowplace2 
                        % // når passerer neste buss fiolsvingen
                        %  sick case  
dmeq(travel,come).
dmeq(travel,depart).
dmeq(travel,drive).
dmeq(travel,exist). %% is there a bus now 
dmeq(travel,get).
dmeq(travel,go).
dmeq(travel,leave).
dmeq(travel,pass). 
dmeq(travel,run).  
dmeq(travel,stop). 
dmeq(travel,take).
dmeq(travel,think).   %% tenker på buss
dmeq(travel,travel).
dmeq(travel,wonder).

dmeq(tuc,bustuc).  
dmeq(tuc,busstuc). 
dmeq(tuc,buster). 
dmeq(tuc,tuc).      %% My names :-) 

dmeq(use,use).
dmeq(use,take).

dmeq(vehicle,bus).
dmeq(vehicle,route).
dmeq(vehicle,tram).
dmeq(vehicle,trip). %% TA-010220  ta en reise
dmeq(vehicle,vehicle).

dmeq(where,home).
dmeq(where,here). 
dmeq(where,there). 


dmeq(within,nil).    %% Technical:  be present 1300 => be nil 1300
dmeq(within,at).
dmeq(within,before).
dmeq(within,by).     %% TA-010208
%  dmeq(within,during). %% om 30 minutter => during 30 minutes == after 30 minutes
dmeq(within,in).     %%  contra   in means possibly  i 8 tiden 
dmeq(within,on).     %%  (Norwagism) på 30 minutter
dmeq(within,to).     %% Norwagism   til Kl 2100
dmeq(within,until).  %% TA-010914
dmeq(within,within).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%  A free bus or man  

busman(X,bus):-  user:busorfree(X).
busman(X,self):- user:unbound(X).
busman(X,man):-  user:unbound(X).
busman(X,woman):-user:unbound(X).
busman(X,child):-user:unbound(X).
% a.s.o ?

corresporder(next,N,next(N)). % => keepafter
corresporder(first,N,first(N)). 

corresporder(last,N,last(N)).  % => keepbefore
corresporder(previous,N,previous(N)).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

                                   % single-question application
single :-   \+ user:value(dialog,1).    % if dialog is 0  or
	                                     % if dialog is undefined   .

tracevalue(L) :- user:value(traceprog,L).  % Trace level 1-6

ordinal(X,Y):-user:ordinal(X,Y).

daysucc(X,Y):-user:daysucc(X,Y).

samefplace(Place1,Place2) :-
    Place1 == Place2,
    !.

samefplace(Place1,Place2):-           % kinoene,prinsens_gate
    user:isat2(Station1,Place1), %% place_station(Place1,Station),
    user:isat2(Station2,Place2), %% place_station(Place2,Station). 
    Station1=Station2,
    !.

samefplace(Place1,Place2):-  %%   from m5 to m6
    corr00(Place1,hovedterminalen),
    corr00(Place2,hovedterminalen),
    !.

corr00(Place,HT):-
    user:corr0(Place,HT)
    ;   
    user:placestat(Place,HT).

% Defaults if Bus is free
% No harm if Bus is not a bus

bus_place_station(Bus,X,Y):- 
    user:unbound(Bus),
    !,
    user:place_station(X,Y). 

bus_place_station(Bus,X,Y):- 
    user:bus_depend_station(Bus,X,Y), %% busdat.pl
    !.

bus_place_station(_Bus,X,Y):- 
    user:place_station(X,Y). 


%% Set Option in a List  

setopt(Flag,L,L):-user:member(Flag,L),!. 
setopt(Flag,L,[Flag|L]).

mixopt(Opts1,Opts2,Opts):- % Ad HOC, no strange options into coupled
    user:set_of(X,
        ((user:member(X,Opts1);
          user:member(X,Opts2)),\+ X=to, \+ X=from),Opts).

evening_time(X,Y):- 
    number(X),
 
 (  X =< 0100 -> Y is X + 2400; %% night at 1 ???
    X =< 1200 -> Y is X + 1200). %% NO default here


notatnight(X,Y):- 
    number(X),
(   X  < 0100 -> Y is X + 2400;  %% Experiment  %% tonight at 1 
       % Bus goes at 1
    X =< 0500 -> Y is X + 1200). %% NO default here


sorttimes(T1,T2,T2,T1):- 
    number(T1),
    number(T2),
    T1 > T2,
    !.
sorttimes(T1,T2,T1,T2).

i_am_a_bus(_I,Self,Bus):- %% TA-010614
     user:subclass0(Self,person),!,
     user:newfree(Bus),
     !.  %% TA-010607
i_am_a_bus(Bus,_bus,Bus):- 
    user:bound(Bus),!,
    user:subclass0(Bus,vehicle). %% not station %% TA-010621
i_am_a_bus(_Bus,_bus,Bus):- user:newfree(Bus).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                               %
% This file is already too big to maintain for any sane person. %
% It must under no circumstances exceed 9999 lines.             %
%                                                               %
%%%%%%%%%%%%%%%%%%%%%% THE END %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 9449


